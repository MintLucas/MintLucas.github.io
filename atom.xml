<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZHIPENG个人笔记</title>
  
  <subtitle>Wisdom and beauty form a very rare combination.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-09-07T03:26:23.062Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ZHIPENG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ES脚本笔记</title>
    <link href="http://yoursite.com/2021/09/07/ES%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2021/09/07/ES脚本笔记/</id>
    <published>2021-09-07T02:51:45.000Z</published>
    <updated>2021-09-07T03:26:23.062Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#脚本查type非数字的粉丝数</span></span><br><span class="line">POST /weibo_interest_push_material_alias/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"track_total_hits"</span>: true,</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"query_string"</span>: &#123;</span><br><span class="line">            <span class="string">"default_field"</span>: <span class="string">"FIELD"</span>,</span><br><span class="line">            <span class="string">"query"</span>: <span class="string">"""</span></span><br><span class="line"><span class="string">            +features.static_features.user_fans_num:[* TO *]</span></span><br><span class="line"><span class="string">            +features.static_features.text_length:[140 TO *]</span></span><br><span class="line"><span class="string">            -features.static_features.has_link: 1</span></span><br><span class="line"><span class="string">            -content_tag.tag_name:财经</span></span><br><span class="line"><span class="string">            -_exists_:filter_rules.content_rules.keyword</span></span><br><span class="line"><span class="string">            """</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"script"</span>: &#123;</span><br><span class="line">            <span class="string">"script"</span>: <span class="string">"""</span></span><br><span class="line"><span class="string">            def my_val = Integer.parseInt(doc['features.static_features.user_fans_num.keyword'].value);</span></span><br><span class="line"><span class="string">            if(my_val&gt;=0&amp;&amp;my_val&lt;1000)</span></span><br><span class="line"><span class="string">              return true;else return false;</span></span><br><span class="line"><span class="string">            """</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"day"</span>: &#123;</span><br><span class="line">      <span class="string">"terms"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"kibana_info.store_at_day.keyword"</span>,</span><br><span class="line">        <span class="string">"size"</span>: <span class="number">1000</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">1000</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#聚合查点赞数</span></span><br><span class="line">GET /weibo_interest_push_material_alias/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123;<span class="string">"range"</span>: &#123;</span><br><span class="line">          <span class="string">"features.static_features.text_length"</span>: &#123;</span><br><span class="line">            <span class="string">"gte"</span>: <span class="number">140</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;,</span><br><span class="line">        &#123;<span class="string">"range"</span>: &#123;<span class="string">"kibana_info.store_at_day"</span>: &#123;<span class="string">"gte"</span>: <span class="number">20210805</span>,<span class="string">"lt"</span>:<span class="number">20210905</span>&#125;&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">"range"</span>: &#123;<span class="string">"features.static_features.hot_his_like"</span>: &#123;<span class="string">"gte"</span>: <span class="number">1</span>,<span class="string">"lt"</span>:<span class="number">1000</span>&#125;&#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"must_not"</span>: [</span><br><span class="line">        &#123;<span class="string">"term"</span>: &#123;</span><br><span class="line">          <span class="string">"features.static_features.has_link"</span>: &#123;</span><br><span class="line">            <span class="string">"value"</span>: <span class="number">1</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;,</span><br><span class="line">        &#123;<span class="string">"terms"</span>: &#123;</span><br><span class="line">          <span class="string">"content_tag.tag_name"</span>: [</span><br><span class="line">            <span class="string">"财经"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;&#125;,</span><br><span class="line">        &#123;<span class="string">"exists"</span>: &#123;<span class="string">"field"</span>: <span class="string">"filter_rules.content_rules.keyword"</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"day"</span>: &#123;</span><br><span class="line">      <span class="string">"terms"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"kibana_info.store_at_day.keyword"</span>,</span><br><span class="line">        <span class="string">"size"</span>: <span class="number">1000</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">    <span class="string">"size"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>hive脚本笔记</title>
    <link href="http://yoursite.com/2021/09/07/hive%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2021/09/07/hive脚本笔记/</id>
    <published>2021-09-07T02:51:38.000Z</published>
    <updated>2022-02-09T11:42:14.048Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在create table 时,添加STORED AS ORC设置</span><br><span class="line">在insert 前,添加set hive.default.fileformat=Orc;设置</span><br><span class="line"></span><br><span class="line">hive -e " </span><br><span class="line">drop table if exists uid_mid_cat_once;</span><br><span class="line">create table uid_mid_cat_once as</span><br><span class="line">select uid, count(distinct(cat)) as cat_num from</span><br><span class="line">(select clk.uid, clk.mid, split(t2.category,',')[0] as cat from</span><br><span class="line">(select dt,mid,uid,push_channel_code</span><br><span class="line">    from multi_push_is_click where dt=$&#123;date&#125; and push_channel_code in ('10000216bjc','10001003','10001167','10001012'))clk</span><br><span class="line">join</span><br><span class="line">(select uid from gh_user_feature_daily where usertype='uid' and dt='$date' and freq in ('4','5') and opened_60='1')gh</span><br><span class="line">on clk.uid=gh.uid</span><br><span class="line">join</span><br><span class="line">(select mid,category from</span><br><span class="line">(select mid, new_to_ids from qiuyu_interest_material_static_info where dt='$date')b</span><br><span class="line">lateral view explode(split(new_to_ids,',')) table_view</span><br><span class="line">as category group by mid,category)t2</span><br><span class="line">on clk.mid=t2.mid</span><br><span class="line">"</span><br><span class="line"></span><br><span class="line">hive -e"select count(distinct(uid)) as uid_num, count(distinct(mid)) as mid_num, count(distinct(cat)) as cat_num from uid_mid_cat where length(uid)&gt;=8 and (substring(uid,-2,1)='7')</span><br><span class="line">and (substring(uid,-6,1)='3' or substring(uid,-6,1)='4')" &gt; num_cmp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">统计4组月活用户下发数</span></span><br><span class="line">function join_tid_cat_luicode()&#123;</span><br><span class="line">1. hadoop fs -cat /user_ext/weibo_bigdata_push/xiaoye5/UserInfoStoreTask/dt=20211229/part-00999 | grep '"mfreq":"h"' | awk '&#123;print $1&#125;' &gt; tmp.txt</span><br><span class="line">2. hive -e " create table zhipengtest (uid, string)"</span><br><span class="line">3. load data local inpatn 'tmp.txt' overwrite into table zhipeng_yuehuo_user </span><br><span class="line">hive -e "</span><br><span class="line">select  count(distinct(clk.mid)) as send from</span><br><span class="line">(select * from zhipeng_yuehuo_user where length(uid)&gt;=8 and (substring(uid,-2,1)='7') </span><br><span class="line">and (substring(uid,-6,1)='7' or substring(uid,-6,1)='8'))zhipeng</span><br><span class="line">join</span><br><span class="line">(select dt,label,uid,push_channel_code,mid</span><br><span class="line">    from multi_push_is_click where dt='20211229' and push_channel_code in ('10000216bjc','10001003','10001167','10001012'))clk</span><br><span class="line">on zhipeng.uid=clk.uid" &gt; tmp.txt</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">统计用户纬度热搜下发三级标签和兴趣下发的重复程度</span></span><br><span class="line">function join_tid_cat_luicode()&#123;</span><br><span class="line">hive -e " </span><br><span class="line">drop table if exists uid_mid_cat_rate_once;</span><br><span class="line">create table uid_mid_cat_rate_once as</span><br><span class="line">select tmp1.uid, tmp2.dupli_num, tmp1.all_num, ROUND(tmp2.dupli_num/COALESCE(CAST(tmp1.all_num AS DOUBLE), 0), 2) as rate from</span><br><span class="line">    (select uid, count(distinct(mid)) as all_num from uid_mid_cat where uid&gt;0 group by uid)tmp1</span><br><span class="line">    join(</span><br><span class="line">            select clk.uid as uid, count(distinct(t1.mid)) as dupli_num from</span><br><span class="line">            (select mid, cat from </span><br><span class="line">            (select mid, category_ids from tmp_tid_cat_luicode where dt=$&#123;date&#125;)tmp</span><br><span class="line">            lateral view explode(split(category_ids,',')) table_view as cat group by mid, cat)t1</span><br><span class="line">            join</span><br><span class="line">            (select dt,mid,uid,push_channel_code from multi_push_is_click where dt=$&#123;date&#125; and push_channel_code in ('10001179'))clk</span><br><span class="line">            on t1.mid=clk.mid</span><br><span class="line">        join</span><br><span class="line">        (select uid,mid,cat from</span><br><span class="line">        uid_mid_cat</span><br><span class="line">        )t2</span><br><span class="line">        on clk.uid=t2.uid and t1.cat=t2.cat</span><br><span class="line">        group by clk.uid</span><br><span class="line">        )tmp2</span><br><span class="line">    on tmp1.uid=tmp2.uid</span><br><span class="line">"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function join()&#123;</span><br><span class="line">  hive -e "</span><br><span class="line">  select xxx from </span><br><span class="line">    (select xx)tmp1</span><br><span class="line">    join</span><br><span class="line">    (select  from</span><br><span class="line">      (select mid, cat_ids)tmp lateral view explode table_view as cat</span><br><span class="line">    )t1</span><br><span class="line">    join</span><br><span class="line">    (select)clk</span><br><span class="line">    on </span><br><span class="line">  "</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">统计兴趣uid mid 下发mid三级标签</span></span><br><span class="line">function create_uid_mid_cat()&#123;</span><br><span class="line">hive -e " </span><br><span class="line">select clk.uid, clk.mid, split(t2.category,',')[0] as cat from</span><br><span class="line">(select dt,mid,uid,push_channel_code</span><br><span class="line">    from multi_push_is_click where dt=$&#123;date&#125; and push_channel_code in ('10000216bjc','10001003','10001167','10001012'))clk</span><br><span class="line">join</span><br><span class="line">(select mid,category from</span><br><span class="line">(select mid, new_to_ids from qiuyu_interest_material_static_info where dt='$date')b</span><br><span class="line">lateral view explode(split(new_to_ids,',')) table_view</span><br><span class="line">as category group by mid,category)t2</span><br><span class="line">on clk.mid=t2.mid</span><br><span class="line">"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function interest_push_ids() &#123;</span><br><span class="line">    hive -e"</span><br><span class="line">    select mid, t.uid, s.ids from</span><br><span class="line">    (select mid, new_to_ids as ids from qiuyu_interest_material_static_info where dt=$&#123;date&#125;)s</span><br><span class="line">    join</span><br><span class="line">    (select dt,mid,uid,label,push_channel_code</span><br><span class="line">    from multi_push_is_click where dt=$&#123;date&#125; and push_channel_code in ('10000216bjc','10001003','10001167','10001012'))t</span><br><span class="line">    on s.mid=t.mid</span><br><span class="line">    group by t.uid" &gt; mining/data/highClick_blogger/interest_push_ids</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function join_data()&#123;</span><br><span class="line">hive -e"</span><br><span class="line">drop table if exists $tbR;</span><br><span class="line">create table $tbR as</span><br><span class="line">select a.uid,</span><br><span class="line">c.nick, b.vuser_type_id,b.real_name, b.cert_info, b.apply_reason,b.vuser_type,b.group_name1, b.group_name2, b.class_name1, b.class_name2, b.ex_group_id, b.ex_adminid, b.distributor, b.cert_type,d.last_time,f.original_num_30_days,f.original_num_7_days from</span><br><span class="line">        (select * from $tbN)a</span><br><span class="line">       left join</span><br><span class="line">        (select * from ods_user_v_info_ex where dt='$dt' )b</span><br><span class="line">        on a.uid=b.uid</span><br><span class="line">        left join</span><br><span class="line">        (select * from ods_user_base_info where dt='$dt' )c</span><br><span class="line">        on a.uid=c.uid</span><br><span class="line">        left join</span><br><span class="line">        (select * from hzt_push_mbloguid_last_mid_createtime_origin_30days where dt='20211129')d</span><br><span class="line">        on a.uid=d.mblog_uid</span><br><span class="line">        left join</span><br><span class="line">        (select * from hzt_push_mbloguid_original_num_7and30days where dt='20211129')f</span><br><span class="line">        on a.uid=f.mblog_uid;</span><br><span class="line">"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">date=`date -d "1 days ago" +%Y%m%d`</span><br><span class="line">left_date=`date -d "7 days ago $date" +%Y%m%d`</span><br><span class="line">right_date=`date -d "0 days ago $date" +%Y%m%d`</span><br><span class="line">echo $left_date</span><br><span class="line">echo $right_date</span><br><span class="line">function highReduBlogger() &#123;</span><br><span class="line">    hive -e"</span><br><span class="line">      select fans.uid, redu from </span><br><span class="line">        (SELECT uid,filtered_fans_num FROM mds_user_relation_sum WHERE dt='$&#123;right_date&#125;' AND filtered_fans_num &gt;= 100000)fans</span><br><span class="line">        join</span><br><span class="line">        (select uid, redu from</span><br><span class="line">        ( select uid, sum(traned_cnt)+sum(cmted_cnt)/sum(orig_cnt) as redu from mds_bhv_tblog_day where dt&gt;$&#123;left_date&#125; and dt&lt;=$&#123;right_date&#125;</span><br><span class="line">          and app_class_code='10000' and is_weibo='10000' group by uid)tmp where redu&gt;5</span><br><span class="line">        )mds</span><br><span class="line">        on fans.uid=mds.uid</span><br><span class="line">        sort by redu desc" &gt; mining/data/highClick_blogger/redu_top_blogger_7days_all</span><br><span class="line">&#125;</span><br><span class="line">highReduBlogger</span><br><span class="line"></span><br><span class="line">date=`date -d "5 days ago" +%Y%m%d`</span><br><span class="line">end_dt=`date +%Y%m%d`</span><br><span class="line">while [ "$date" != "$end_dt" ]</span><br><span class="line">do</span><br><span class="line">   echo $date+ &gt;&gt; dateIconClick</span><br><span class="line">   big_icon</span><br><span class="line">   let date=`date -d "-1 days ago $date" +%Y%m%d`</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mds_bhv_tblog_day</span><br><span class="line"></span><br><span class="line">date=`date -d "0 days ago $date" +%Y%m%d`</span><br><span class="line">date3=`date -d "3 days ago $date" +%Y%m%d`</span><br><span class="line">function highFansBlogger() &#123;</span><br><span class="line">    hive -e"</span><br><span class="line">    select count(clk.label) as send, sum(if(label='1',1,0)) as click, blogger.uid as bid from</span><br><span class="line">    (select fans.uid, mid from </span><br><span class="line">        (SELECT uid,filtered_fans_num FROM mds_user_relation_sum WHERE dt='$&#123;dt_fans&#125;' AND filtered_fans_num &gt;= 100000)fans</span><br><span class="line">        right join</span><br><span class="line">        ( select mid,uid,dt from ods_tblog_content where dt&gt;$&#123;date3&#125; and dt&lt;=$&#123;date&#125;)ods</span><br><span class="line">        on fans.uid=ods.uid</span><br><span class="line">    )blogger</span><br><span class="line">    right join</span><br><span class="line">    (select dt,mid,uid,label,push_channel_code</span><br><span class="line">    from multi_push_is_click where dt=$&#123;date&#125; and push_channel_code in ('10000323','10000752'))clk</span><br><span class="line">    on blogger.mid=clk.mid</span><br><span class="line">    group by blogger.uid sort by click desc" &gt; mining/data/highClick_blogger/high_fans_blogger_7days_800</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function highClickBlogger800() &#123;</span><br><span class="line">    hive -e"</span><br><span class="line">    select count(t.label) as send, sum(if(label='1',1,0)) as click, s.bid as bid from</span><br><span class="line">    (select mid, uid as bid from qiuyu_interest_material_static_info where dt=$&#123;date&#125;)s</span><br><span class="line">    right join</span><br><span class="line">    (select dt,mid,uid,label,push_channel_code</span><br><span class="line">    from multi_push_is_click where dt&gt;$&#123;date&#125; and push_channel_code in ('10000216bjc','10001003','10001167','10001012'))t</span><br><span class="line">    on s.mid=t.mid</span><br><span class="line">    group by s.bid sort by click desc limit $&#123;limit&#125;" &gt; mining/data/highClick_blogger/click_top_blogger_120days_800</span><br><span class="line">&#125;</span><br><span class="line">highClickBlogger800</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">hive -e <span class="string">"select count(mid), bid from zhipeng_b group by bid"</span> &gt; 813log</span></span><br><span class="line">date='20210820'</span><br><span class="line">function big_icon() &#123;</span><br><span class="line">    hive -e "select count(b.label) as send_pv, sum(if(label='1',1,0)) as click_pv,</span><br><span class="line">count(distinct(b.uid)) as send_uv, count(distinct case when b.label='1' then b.uid else NULL end) as click_uv,</span><br><span class="line">count(distinct(b.uid)) as all_icon_user, count(distinct(b.mid)) as all_icon_mid</span><br><span class="line">from</span><br><span class="line">(select uid,mid from</span><br><span class="line">(select uid,split(lfid,'_')[1] as mid from ods_wls_push_mps_send where dt='$date' and ext like '%bigPic%')tmp</span><br><span class="line">group by uid,mid)a</span><br><span class="line">join</span><br><span class="line">(select mid, uid,label from multi_push_is_click where dt='$date' and push_channel_code in ('10000216bjc','10001003','10001012','10001167'))b</span><br><span class="line">on a.uid=b.uid and a.mid=b.mid" &gt;&gt; dateIconClick</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function big_iconMI() &#123;</span><br><span class="line">    hive -e "select count(t.label) as send_pv, sum(if(label='1',1,0)) as click_pv,</span><br><span class="line">count(distinct(t.uid)) as send_uv, count(distinct case when t.label='1' then t.uid else NULL end) as click_uv,</span><br><span class="line">count(distinct(t.uid)) as all_icon_user, count(distinct(t.mid)) as all_icon_mid</span><br><span class="line">from</span><br><span class="line">(select distinct split(lfid,'_')[1] as mid from ods_wls_push_mps_send where dt='$date' and ext like '%bigPic%')a</span><br><span class="line">join(</span><br><span class="line">  select b.mid as mid,b.uid as uid,b.label as label</span><br><span class="line">  from(</span><br><span class="line">    select mid, uid,label from multi_push_is_click where dt='$date' and push_channel_code in ('10000216bjc','10001003','10001012','10001167')</span><br><span class="line">    )b</span><br><span class="line"></span><br><span class="line">  join(</span><br><span class="line">    select distinct uid,split(lfid,'_')[1] as mid from ods_wls_push_mps_send where dt='$date' and ext like '%xiaomi%'</span><br><span class="line">    )m</span><br><span class="line">    on b.mid=m.mid and b.uid=m.uid</span><br><span class="line">)t</span><br><span class="line">on a.mid=t.mid" &gt;&gt; dateIconClick</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function big_Nicon() &#123;</span><br><span class="line">    hive -e "select count(b.label) as send_pv, sum(if(label='1',1,0)) as click_pv,</span><br><span class="line">count(distinct(b.uid)) as send_uv, count(distinct case when b.label='1' then b.uid else NULL end) as click_uv,</span><br><span class="line">count(distinct(b.uid)) as all_icon_user, count(distinct(b.mid)) as all_icon_mid</span><br><span class="line">from</span><br><span class="line">(select uid,mid</span><br><span class="line">(select uid,split(lfid,'_')[1] as mid from ods_wls_push_mps_send where dt='20210820' and ext not like '%bigPic%')tmp</span><br><span class="line">group by mid,uid)a</span><br><span class="line">join</span><br><span class="line">(select mid, uid,label from multi_push_is_click where dt='20210820' and push_channel_code in ('10000216bjc','10001003','10001012','10001167')</span><br><span class="line">)b</span><br><span class="line">on a.uid=b.uid and a.mid=b.mid" &gt; dataClick</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function insert_interest_data()&#123;</span><br><span class="line">hive -e"</span><br><span class="line">select t2.category,t2.ruku_date,count(t.label) as send_pv,sum(if(label='1',1,0)) as click_pv,count(distinct t2.mid) as mid_num, t.push_channel_code</span><br><span class="line">from</span><br><span class="line">(select dt,mid,uid,label,push_channel_code</span><br><span class="line">from multi_push_is_click where dt='$dt' and push_channel_code in ('10000216bjc','10001003','10001167','10001012'))t</span><br><span class="line">left join</span><br><span class="line">(select mid,ruku_date,category from</span><br><span class="line">(select mid,if(from_unixtime(int(ruku_time),'yyyyMMdd')='$dt','1','0') as ruku_date,new_class_level1 from qiuyu_interest_material_static_info where dt='$dt')b</span><br><span class="line">lateral view explode(split(new_class_level1,',')) table_view</span><br><span class="line">as category group by mid,category,ruku_date)t2</span><br><span class="line">on t.mid=t2.mid</span><br><span class="line">group by t.dt,t2.category,t2.ruku_date, t.push_channel_code</span><br><span class="line">"&gt; new_category_send/$dt</span><br><span class="line">&#125;</span><br><span class="line">insert_interest_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function highActionCodeBlogger()&#123;</span><br><span class="line">hive -e "</span><br><span class="line">        set hive.groupby.skewindata=true;</span><br><span class="line">        set mapred.reduce.tasks=200;</span><br><span class="line"></span><br><span class="line">        drop table if exists tmp_push_interest_read_blogger_daily_mengdi7;</span><br><span class="line">        create table tmp_push_interest_read_blogger_daily_mengdi7 row format delimited fields terminated by '\t' as</span><br><span class="line">        select t.uid as uid, t.mid as mid, s.bid as bid, t.act_time as act_time, t.act_codes as act_codes, t.luicode as luicode</span><br><span class="line">        from (</span><br><span class="line">            select mid, uid as bid from qiuyu_interest_material_static_info where dt=$&#123;date&#125;</span><br><span class="line">        ) s</span><br><span class="line">        join (</span><br><span class="line">            select a.uid as uid, a.mid as mid, a.act_time as act_time, b.act_codes as act_codes, a.luicode as luicode</span><br><span class="line">            from (</span><br><span class="line">                 select uid, mid, luicode, min(act_time) as act_time from push_interest_untimely_click_datas_mengdi7 where dt=$&#123;date&#125;</span><br><span class="line">                 group by uid, mid, luicode</span><br><span class="line">            ) a</span><br><span class="line">            join (</span><br><span class="line">                select uid, mid, act_codes from push_interest_untimely_only_action_datas_mengdi7 where dt=$&#123;date&#125;</span><br><span class="line">            ) b</span><br><span class="line">            on a.uid=b.uid and a.mid=b.mid</span><br><span class="line">        ) t</span><br><span class="line">        on s.mid=t.mid</span><br><span class="line">        ;</span><br><span class="line">    "</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">function</span> <span class="function"><span class="title">insert_interest_data</span></span>()&#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">hive -e<span class="string">"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">select t.category,t.ruku_date,sum(t.send) as send_num,sum(t.click) as click_num,count(mid) as mid_num from</span></span><br><span class="line"><span class="meta">#</span><span class="bash">(select t1.category,t1.ruku_date,t1.send,t2.click,t1.mid from</span></span><br><span class="line"><span class="meta">#</span><span class="bash">(select a1.mid,a1.send,a2.category,a2.ruku_date from</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        (select a.mid,count(distinct a.uid)[多少个uid就是多少send_uv as] send from</span></span><br><span class="line"><span class="meta">#</span><span class="bash">            (select split(lfid,<span class="string">'_'</span>)[1] as mid,uid from ods_wls_push_mps_send</span></span><br><span class="line"><span class="meta">#</span><span class="bash">            <span class="built_in">where</span> dt=<span class="string">'$dt'</span> and length(uid)&lt;=13 and ((substring(luicode,0,8)=<span class="string">'10000216'</span> and substring(sid,0,11)=<span class="string">'10000216bjc'</span>) or (substring(luicode,0,8) <span class="keyword">in</span> (<span class="string">'10001003'</span>,<span class="string">'10001167'</span>,<span class="string">'10001012'</span>))))a group by a.mid</span></span><br><span class="line"><span class="meta">#</span><span class="bash">            )a1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    left join</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    (select mid,ruku_date,category from</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    (select mid,<span class="keyword">if</span>(from_unixtime(int(ruku_time),<span class="string">'yyyyMMdd'</span>)=<span class="string">'$dt'</span>,1,0) as ruku_date,new_class_level1 from qiuyu_interest_material_static_info <span class="built_in">where</span> dt=<span class="string">'$dt'</span>)b</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     lateral view explode(split(new_class_level1,<span class="string">','</span>)) table_view</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    as category group by mid,category,ruku_date)a2</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    on a1.mid=a2.mid</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    )t1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">left join</span></span><br><span class="line"><span class="meta">#</span><span class="bash">(select a2.mid,count(distinct a2.uid) as click from (select split(previous_id,<span class="string">'_'</span>)[1] as mid,uid from mds_wls_encode_bhv <span class="built_in">where</span> dt=<span class="string">'$dt'</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">and (action <span class="keyword">in</span> (<span class="string">'7'</span>,<span class="string">'26'</span>,<span class="string">'97'</span>,<span class="string">'118'</span>,<span class="string">'159'</span>,<span class="string">'169'</span>,<span class="string">'191'</span>,<span class="string">'320'</span>,<span class="string">'337'</span>,<span class="string">'1246'</span>,<span class="string">'496'</span>,<span class="string">'3156'</span>,<span class="string">'2481'</span>,<span class="string">'2507'</span>,<span class="string">'317'</span>,<span class="string">'1332'</span>,<span class="string">'1555'</span>,<span class="string">'104'</span>))</span></span><br><span class="line"><span class="meta">#</span><span class="bash">and length(uid)&lt;=13</span></span><br><span class="line"><span class="meta">#</span><span class="bash">and ((previous_uicode=<span class="string">'10000216'</span> and substring(previous_id,1,1)=<span class="string">'1'</span>) or</span></span><br><span class="line"><span class="meta">#</span><span class="bash">previous_uicode <span class="keyword">in</span> (<span class="string">'10001003'</span>,<span class="string">'10001167'</span>,<span class="string">'10001012'</span>)))a2 group by a2.mid)t2</span></span><br><span class="line"><span class="meta">#</span><span class="bash">on t1.mid=t2.mid)t</span></span><br><span class="line"><span class="meta">#</span><span class="bash">group by t.category,t.ruku_date;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="string">"&gt; category_send/<span class="variable">$dt</span></span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">&#125;</span></span><br><span class="line"></span><br><span class="line">function insert_interest_data()&#123;</span><br><span class="line">hive -e"</span><br><span class="line">select t2.category,t2.ruku_date,count(distinct t.uid) as send_uv,</span><br><span class="line">count(distinct case when t.label='1' then t.uid else NULL end) as click_uv, count(distinct t2.mid) as mid_num, t.push_channel_code</span><br><span class="line">from</span><br><span class="line">(select dt,mid,uid,label,push_channel_code</span><br><span class="line">from multi_push_is_click where dt='$dt' and push_channel_code in ('10000216bjc','10001003','10001167','10001012'))t</span><br><span class="line">left join</span><br><span class="line">(select mid,ruku_date,category from</span><br><span class="line">(select mid,if(from_unixtime(int(ruku_time),'yyyyMMdd')='$dt','1','0') as ruku_date,new_class_level1 from qiuyu_interest_material_static_info where dt='$dt')b</span><br><span class="line">lateral view explode(split(new_class_level1,',')) table_view</span><br><span class="line">as category group by mid,category,ruku_date)t2</span><br><span class="line">on t.mid=t2.mid</span><br><span class="line">group by t.dt,t2.category,t2.ruku_date, t.push_channel_code</span><br><span class="line">"&gt; new_category_send/$dt</span><br><span class="line">&#125;</span><br><span class="line">insert_interest_data</span><br></pre></td></tr></table></figure><p>  同步最近兴趣自采物料相关工作：</p><p>  1、<strong>兴趣120天内高点击量top400博主</strong>自采供稿</p><p>​     挖掘方式：取120天内的点击行为日志表multi_push_is_click的兴趣物料点击情况，join静态信息表中的发博博主，group by博主列倒排点击数，得到120天内高点击量top400博主</p><p>  2、<strong>关系**</strong>10w粉<strong>**7天内点击&gt;5所有博主</strong>自采供稿</p><p>​     挖掘方式：取7天内的点击行为日志表multi_push_is_click的关系物料点击情况，join关系博主信息表中的发博博主，group by博主列倒排点击数，得到120天内高点击量top400博主</p><p>  3、兴趣120天内高点击量top400博主自采供稿</p><p>​     挖掘方式：取120天内的点击行为日志表multi_push_is_click的兴趣物料点击情况，join静态信息表中的</p><p>​     发博博主，group by博主列倒排点击数，得到120天内高点击量top400博主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>科大论文关键时间点</title>
    <link href="http://yoursite.com/2021/06/13/%E7%A7%91%E5%A4%A7%E8%AE%BA%E6%96%87%E5%85%B3%E9%94%AE%E6%97%B6%E9%97%B4%E7%82%B9/"/>
    <id>http://yoursite.com/2021/06/13/科大论文关键时间点/</id>
    <published>2021-06-13T10:21:25.000Z</published>
    <updated>2021-06-14T01:19:10.357Z</updated>
    
    <content type="html"><![CDATA[<h1 id="论文和找工作这些关键节点的全局性如何协调把控"><a href="#论文和找工作这些关键节点的全局性如何协调把控" class="headerlink" title="论文和找工作这些关键节点的全局性如何协调把控"></a>论文和找工作这些关键节点的全局性如何协调把控</h1><blockquote><p>以18级为例，即2年半毕业批次，毕业证时间2021.0320，学位证下发时间2021.0410</p><p>标出的时间到日即是截止日期，每一年截止日期不会相差很多，下一个批次的截止时间估算=表中月份+6</p><p>联系方式：zpl2025</p></blockquote><table><thead><tr><th style="text-align:left">时间</th><th>需要做的事</th><th>注意事项</th></tr></thead><tbody><tr><td style="text-align:left">找实习   7月10日（2019）</td><td>1. 刷题剑指offer（40多道必须刷完建议两遍）2. Leetcode 3. 做好简历<strong>想清楚自己要干什么</strong>工作<strong>（十分重要）</strong>4. 找认识的学长学姐内推（海投）</td><td>没收到满意offer之前<strong>要一直找</strong>工作，别人都有去处时<strong>心态放平常</strong></td></tr><tr><td style="text-align:left">实习（2020）</td><td>一般7月中旬开始实习，分两种情况（1）A君进到满意公司：前2个月左右会跟完一个项目，10月左右差不多开始<strong>和企业导师沟通论文的事</strong>，写什么方向等；（2）B君进小公司想跳槽，重复刷题找工作步骤，<strong>10月到12月</strong>算是第一个跳槽节点，学校此时没什么事</td><td>没找到满意的实习<strong>一定要继续努力</strong>投简历，现在辛苦秋招轻松，甚至以后都轻松</td></tr><tr><td style="text-align:left">开题       3月11日（2020）</td><td>1. 01月22日发布安排校内导师结果 2. <strong>及时</strong>和校内导师沟通确认开题，一般邮件沟通 3. 对A君来讲认·真写开题，开题就是论文大纲，后续论文写起来会很轻松 4. 对B君来讲可能刚进另一家新公司，还不清楚要写什么，<strong>在节点前提交</strong>，题目方向后续再改</td><td>过了<strong>截止日期</strong>就相当于本批次失败延毕半年，<strong>提前3天上传并和导师沟通</strong></td></tr><tr><td style="text-align:left">初稿       8月20日（2020）</td><td>理论上开题后就可以写论文了，但一般动笔在7、8月份，7月底校招提前批即开始了，如果想全都要的同学，<strong>强烈建议请假两周写论文</strong>，注意<strong>点明论文中个人做了哪些工作</strong></td><td>初稿有字数和复制比要求(小于30%)，认真写不难达到；一般8月底实习公司会有<strong>转正答辩，一定要争取</strong></td></tr><tr><td style="text-align:left">定稿       9月20日（2020）</td><td>这段时间恰好是<strong>秋招最忙的时候</strong>，建议<strong>主抓秋招辅抓论文</strong>，后续10月会有盲审会审等，会是长达一个月的修改修改再修改阶段(有些没写好的也可以在此阶段化腐朽为神奇)，那时<strong>秋招接近尾声</strong>，<strong>主论文辅秋招</strong></td><td>秋招类似找实习，但是秋招一定要<strong>抓住提前批</strong>面试的机会</td></tr><tr><td style="text-align:left">答辩      10月25日（2020）</td><td>这是第一批答辩的时间，如果通过或修改一周即可11月份毕业</td><td>答辩老师不怎么注重ppt，<strong>论文质量占90%</strong>，因此还是要认真打磨论</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;论文和找工作这些关键节点的全局性如何协调把控&quot;&gt;&lt;a href=&quot;#论文和找工作这些关键节点的全局性如何协调把控&quot; class=&quot;headerlink&quot; title=&quot;论文和找工作这些关键节点的全局性如何协调把控&quot;&gt;&lt;/a&gt;论文和找工作这些关键节点的全局性如何协调
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>草稿</title>
    <link href="http://yoursite.com/2021/06/07/%E8%8D%89%E7%A8%BF/"/>
    <id>http://yoursite.com/2021/06/07/草稿/</id>
    <published>2021-06-07T02:31:39.000Z</published>
    <updated>2021-06-07T03:20:41.932Z</updated>
    
    <content type="html"><![CDATA[<p>亲爱的妈妈：</p><p>​        好久不见，非常想念您，我知道你一定也同样的牵挂我俩，但我们已经是成熟的大人了，拥有照顾好自己的能力，所以不用担心我俩。这段时间你受苦了，但请相信所有的苦难都是上帝的一道考验，百炼成钢，一切事都会有它的意义。今天正好是2021年的高考当天，志怡一直在一中念高二，你不在的日子里一如往常，等今年暑假结束就升高三了，学习上她自己长大了也知道努力了，我也会尽所能帮助她，生日的时候给她买了一个很好的电动牙刷，发工资给她发了大红包，一家人围着这个小的转，每天家里吃喝都用不完，上学也近能走读回来睡觉，别提她多开心啦。</p><p>​        我这边去年在北京新浪总部实习嘛，然后暑假后结束实习，也非常顺利的拿到微博正式工的offer，就回学校写论文了，论文完成的也很顺利，11月的时候便提交论文申请提前毕业了，然后就在今年的4月20号左右拿到了学位证和毕业证来北京微博入职啦，我整租了一套3室和一个科大的同学和一个上交的同事，有很干净的厨房，周末我们会一起做做饭聊聊天，离公司也特别近只有2公里，对住的地方很满意！</p><p>​        此时此刻我就在工位上写下这封信，这边工作很轻松哒，基本上是早上10点上班，中午12点吃个饭因为离得近就回去睡一觉2点来上班，然后晚上7点就下班啦，现在的薪水是2w9一个月（基本是我们同学中最高的啦小小骄傲一下），每年带年终奖大概是40w一年，公积金一个月有6668这么多，相当于就算把工资全花光每月也强制存了这么多的买房钱啦哈哈哈，当然我不会那么挥霍的勤俭持家，然后每个月会给爸爸打2000让他买好吃的，我工作后他明显也开心和轻松了许多！工作内容是微博的push推荐算法，也是我喜欢干的事情，所以我对现状十分十分满意，工作开心住的也开心，每天能睡到9点才起床，真是太幸福了！</p><p>​        对了！还有一件开心的事值得分享，之前不是和苏州的女朋友分开了嘛，在北京遇到了一个对外经贸大学的，99年在上研一，上个月我们在一起啦，现在在一起一个月了，我把她内推到了隔壁网易公司实习，每天我去地铁接她一块上下班，周末一起做做饭啥的，生活很滋润，她是河北的离我们家也不远，一切都很好的！</p><p>​        小的时候你们开明的教育方式，不怎么限制我，我做什么都会说别怕妈妈永远支持你，所以我有一个很开心的童年，唯一后悔的可能是校长和你们都请我去一高也没去吧哈哈哈哈，当时确实有点傻就想离家近，但是离家近真的很快乐，即便是很累的高三，每天晚上回家可以吃妈妈的夜宵还能玩电脑，真的太开心了！！！所以每一部选择或者经历你也真的不知道是好是坏，在一中也是不错的有一帮很好的朋友，锻炼了不错的性格。我想妹妹现在也是和我当初一样的开心吧，我觉得长大能回想到小时候依然觉得幸福，这样就够了。</p><p>​        现在我长大了，可以说妈妈你也不用怕，我有高学历高工资，良好的性格和生活习惯，爷爷每次上班都要去炫耀这个文凭和工资哈哈哈，我也为能成为他的骄傲而开心，能成为现在的我，最大的功劳还是你和爸爸，现在毕业以后，我也终于可以对你们说，不管发生什么，别怕有儿子在！我也会努力成为一颗更大的树罩着妹妹和整个家。</p><p>​        总之，不经历风雨，怎能见彩虹，前言万语汇聚成一句话，您不要担心我们，您要照顾好自己，来日方长。</p><pre><code>2021-06-07</code></pre><p>​                                                                                                不管你做什么，永远爱你的儿子</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;亲爱的妈妈：&lt;/p&gt;
&lt;p&gt;​        好久不见，非常想念您，我知道你一定也同样的牵挂我俩，但我们已经是成熟的大人了，拥有照顾好自己的能力，所以不用担心我俩。这段时间你受苦了，但请相信所有的苦难都是上帝的一道考验，百炼成钢，一切事都会有它的意义。今天正好是2021年的
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>制药专业分享</title>
    <link href="http://yoursite.com/2021/04/03/%E5%88%B6%E8%8D%AF%E4%B8%93%E4%B8%9A%E5%88%86%E4%BA%AB/"/>
    <id>http://yoursite.com/2021/04/03/制药专业分享/</id>
    <published>2021-04-03T07:12:24.000Z</published>
    <updated>2021-04-04T07:37:14.027Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>笔者本科专业是制药，18年考研到科大软院，现在读大数据与人工智能专业，很多同学咨询为什么换专业问题，写一些自己对医药类专业的认识，不做评判仅供参考。</p><p>像笔者这样中途换专业或者最后从事工作和专业无关的例子比比皆是，囿于当时的认知稀里糊涂选了某个专业，<strong>发现自己想象的和这个专业真实样子相差甚远</strong>。大部分学校换专业是十分困难的，因此选择专业务必谨慎。</p><h3 id="学习方面"><a href="#学习方面" class="headerlink" title="学习方面"></a>学习方面</h3><p>药学可粗浅分中药和西药方向，不管中药西药都离不开化学知识，包括<strong>无机化学，有机化学，生物化学，物理化学和药物化学</strong>这几门，这几本书每本有几百页，加上化学本身是一门晦涩的学科，容易让人提不起兴趣导致半途而废。</p><p>本科阶段：大一大二大部分时间在学通识课程，大三开始接触专业课，这个阶段化学生物课多了起来，刚开始立志新学期好好学习，课上中途，随着课本越来越难，并且大学没有高中那种push，学习知识只学不练（即不写课后题），并且对接触的知识也没什么兴趣可言（我觉得大部分人看到冗长的化学反应都提不起兴趣），结果就是跟不上从而后面的课就会逃课或不听，然后老师也了解这种情况，期末就会划重点，大家背一背突击过去，过去一段时间再去想学到了什么也只有简单的印象，这是大部分同学的状态。</p><p><strong>药物实验</strong>：药物和化学分不开，很多实验就是生化实验，最多的是各种过柱子，液相色谱分析成分，也有一些给小白鼠等动物做药物测试。</p><p><strong>建议：如果想选这个专业，可以在b站上搜一搜这些课的视频，简单学习一下看是否真的有兴趣坚持下去。</strong></p><h4 id="考研"><a href="#考研" class="headerlink" title="考研"></a>考研</h4><p>医药这个行业对学历要求极高，无论是医生还是药剂师，好一点的三甲医院基本只要博士，去企业做药物研究本科生也没任何竞争力，所以本科就业的同学，要么转行要么只能做医药代表，80％的同学会继续读研。</p><p><strong>常规药学二级学科：</strong></p><p>药理学、药物分析、药物化学、天然药物化学、生药学、药剂学、微生物与生物制药、药事管理等等。</p><p>选择最多的是药物分析和药物化学方向，女生大都选择药分，做一些药物质量分析，各种色谱柱等等，比较干净；药化搞合成、提纯等，天天接触化合物，长时间对身体不好，男生选的较多。</p><p>药理学/微生物与生物制药等学科，主要做分子/细胞实验，设计小鼠/大鼠/猕猴等多种动物模型，谨慎入坑。</p><p>药事管理就业比较难，一般都是有想要干的工作，选择这门，或者家里/导师能帮忙解决工作。</p><h3 id="工作方面"><a href="#工作方面" class="headerlink" title="工作方面"></a>工作方面</h3><p><strong>医院</strong>：因为有临床药学这个专业，同时大环境需要这些人才，于是药学专业在医院不如临床药学。同时，药学本科进医院这条路伴随内卷基本堵死，进去以后上升很难，比较累。但好在稳定，医院效益好，奖金高，但最近又赶上什么医药改革，北京地区的药学部/药剂科绩效奖金严重缩水。</p><p><strong>医药代表</strong>：俗称药代，本科没考研的有几个同学在做药代，有自己的产品以及有稳定的医院资源，赚的都不少，但是需要经常出差，需要会说话，可以理解为类似销售的工作，销售对象是医院医生，物品是医药或医疗设备。</p><p><strong>企业</strong>：1.薪资待遇:月薪4-6千（平均吧，工作年限＋工作技能＋学历，决定薪资多少，硕士普遍在8千以上），这个薪资一般在小地方还是可以的，大的地方比如南京，一般本科都在6千以上。2.工作环境:QC在检验室，QA及其他文职人员在办公室，工艺员会去车间，但是工艺员也有办公室，车间技术人员在车间。3.工作发展问题，按照管理层有:班组长-主管-主任-经理-总经理-总监，技术层:助理工程师-初级工程师-中级工程师-高级工程师。去企业的缺点是药物研发工厂一般远离市区，公交不方便，一个月可能去一次市区其他时间在工厂宿舍度过。</p><p><strong>公务员</strong>：食品药品监督局，待遇根据地区决定。</p><h3 id="为什么换行业"><a href="#为什么换行业" class="headerlink" title="为什么换行业"></a>为什么换行业</h3><p>前面讲本科学习制药专业是比较痛苦的，一方面感觉学起来难，另一方面感觉并无实际用处（工作生活中用不到），这是大部分专业教学的问题，书本晦涩难懂，长期不更新教材和培养体系，学习是一个需要反馈的过程，计算机专业学习某个知识可以很快的用电脑实现并解决问题（如深度学习课解决行人人脸检测问题），解决问题又会给学习新知识注入兴趣，良性循环，所以选了这个专业。</p><p>现实来讲，工作将陪伴几十年，大部分专业大三会安排生产实习，这时候基本你会知道所学专业以后有什么工作方向和干点什么，本专业需要学历但并不想继续学习就放弃了，医药薪资更和计算机没法比较（一个10k天花板一个10k地板砖），但喜欢所做的工作是最重要的，也有一些人对代码并不感兴趣选择公务员或产品运营工作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;笔者本科专业是制药，18年考研到科大软院，现在读大数据与人工智能专业，很多同学咨询为什么换专业问题，写一些自己对医药类专业的认识，不做评判仅
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>公考笔记</title>
    <link href="http://yoursite.com/2020/11/10/%E5%85%AC%E8%80%83%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/11/10/公考笔记/</id>
    <published>2020-11-10T03:29:36.000Z</published>
    <updated>2020-12-19T07:07:18.231Z</updated>
    
    <content type="html"><![CDATA[<h2 id="站长申论"><a href="#站长申论" class="headerlink" title="站长申论"></a>站长申论</h2><blockquote><p>分析和对策是不一样的，判断题目侧重分析和对策。</p><p>例：我们与世界相交，与时代相通，才能让一切保值增值。分析为主</p><p>如分析对现实的指导意义，自我角度破除狭隘，国家角度，企业角度。</p><p>对策是加大宣传，政府要完善制度等等；</p><p>对策</p><ul><li><p>1段先介绍背景；</p></li><li><p>2段引出现在的问题，分析为什么要解决这个问题（没问题解决什么？）；</p></li><li><p>3段具体对策</p></li></ul><p>而分析题（阐述意义，或现实指导启示，或呼吁）</p><ul><li>1段解题破题和背景</li><li>2段把为什么解决问题一分为三它的好处</li><li>3段写不够加一段对策，如何实现</li></ul></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、解释说明——直接介绍观点、话题;或借助名言、类比比喻、现象事例，让抽象的观点话题变得具体。 背景铺垫——时代背景、社会现象引出话题;凸显问题的严峻性、解决的必要性。</span><br><span class="line"><span class="number">2</span>、说理论证——阐明理由——直接阐明、类比比喻、举例具体化 事例佐证——借助数据、典型案例凸显观点、理由的正确性。(通过架桥来突出论点)</span><br><span class="line"><span class="number">3</span>、总结启示——结论、观点对实践的指导价值、呼吁该怎么做......</span><br><span class="line">  </span><br><span class="line">  文章视角 分论点如何写</span><br><span class="line">文章开篇  论点之后，对论点的背景铺垫、解释说明</span><br><span class="line">分论点——不同角度的理由阐明观点成立的理由，事例佐证观点的正确性 </span><br><span class="line">  结尾——总结启示 说理论证完毕，总结、呼吁。</span><br></pre></td></tr></table></figure><blockquote><p>L省–·党管人才构建组织架构、多形式（内容上实效性，针对性）精神教育、发挥示范效应、开展对口帮扶、专家联系制度、感情亲近实现思想贴近、领导小组（领导的重视）、搭建—平台（借助信息化）</p><p>人才创业–走高新技术路线、新型全产业链、培养创业生力军、社会担当、注重产品品质、绿色创业</p><p>老马形容人的–淡泊名利、本领过硬、重视培养新人、敬业奉献</p><p>新经济环境下企业–物联网商业模式、服务用户导向、合作共享、摈弃模仿跟随重视自主研发</p><p>执法理念借鉴–<strong>服务型执法</strong>，执法为民服务，主动发现问题；<strong>依法创新</strong>；<strong>技术创新</strong>；···的模式，实现···，满足···<strong>群众参与</strong>监督；了解用户痛点，精准满足需求</p><p>小岗村–穷则变；change文中指改革；变也不是一直不变，破局的变，持续的变<br>改革前穷，敢为人先改革精神；才能获得长久的发展</p><p>旅游–提高游客体验；规范经营管理；遵守法律；讲诚信；从业人员自律；</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">平衡——快慢之间的智慧</span><br><span class="line">                           站长</span><br><span class="line">赛场上，长跑运动员不会一开始就急速冲刺，耗尽体力，而是开始用中速控制体力，找到一个最佳节奏，最后高速，让 体力潜能发挥极限，从而最快的达到终点。这就是平衡，一种在快慢之间寻找最佳的艺术。<span class="comment">//引出观点</span></span><br><span class="line">今天，我们进入了发展转型期，一面是一切与速度挂钩，“时间就是效率”，另一面是压力之下的人们也开始追求闲适 ，渴望内心的幸福。此时，我们谈论平衡，就是要遵循自然规律，遵循不同的发展阶段找到最佳的速度，不求滞后停顿，亦 不超前速成。要懂得顺势而变，顺时而为，能够适应环境变化采取最佳的模式。<span class="comment">//介绍背景正反论述</span></span><br><span class="line"><span class="comment">//譬如，人生做到有快有慢的平衡，才能应对浮躁，既激情澎湃又闲适幸福。//</span></span><br><span class="line">  儿童时，家长顺应自然和天性，不拔苗助长， 不超前教育，“成人之前要像儿童的样子”，这样身心才能得到最佳发展。初入社会，没有谁的青春是容易的，需要勇往直 前，敢于拼搏，但求多学习，快积累。人到中年，成为工作的骨干，家庭的顶梁柱，则要劳逸结合，求得家庭生活和工作职 责的最大公约数。人生的智慧，就是要有张有弛，合适的时候做合适的事情，选择合适的方式，才能调整出最佳的心理状态 ，找到最适合自己生活的节奏和平衡点。</span><br><span class="line"><span class="comment">//快慢平衡的理念，也适合企业经营。懂得以退为进、快慢得当，才能避免失败，做大做强。</span></span><br><span class="line">  KFC刚刚进入中国时，<span class="number">5</span>年仅 开了<span class="number">10</span>家店。这五年它不求扩张速进，而是潜心研究中国人的口味和市场环境。时机成熟，准备充分，扩张就急剧加速。至 今已经开了超过<span class="number">1500</span>家店!还有今天我们不少企业，市场初期快速求量占领市场，但当经济新常态来临，消费升级，就需要 转变求快的思路，而要主动降速，靠“工匠精神”提升品质，靠创新技术提高核心竞争力。这种主动降速，就是为下一步跳 跃做准备，以退为进，把握快慢的平衡，才能走得更远。</span><br><span class="line"><span class="comment">//再把视野放大，整个国家经济发展的速度，快慢有度才是做到有“面子”也有“里子”。</span></span><br><span class="line">  以前，我们以为经济飞速发展， 越快越好。当然，在改革初期，资金和技术不足，依靠要素大量投入，快速积累是可以的。但快速发展到今天，就不能再求 <span class="number">8</span>亿件衬衫换一架大飞机求量不求质的低端成长了。我们需要产业升级，这样可能速度会慢下来，但质量提高了，竞争力提 高了，结构健康了，这个“慢”是值得的。这就是经济发展速度的平衡之道。</span><br><span class="line"><span class="comment">//在转型期，新常态的当下，如何能掌控好社会发展的大平衡呢?关键是有关部门要把握好有所为，有所不为的平衡。</span></span><br><span class="line">  我们倡导速度，抑或是闲适，不能不顾经济基础和现实情况，不能违背大众的意愿。在快慢选择上，应把自主权交给社会公众， 这就是有所不为。在发展的快慢之间，容易出现失衡。这时，建立健全社会保障体系，创造更畅通更多元的发展通道，减轻人们的工作和生活压力。补好失衡的“缺位”，这就是有所作为。</span><br></pre></td></tr></table></figure><h3 id="概括归纳类"><a href="#概括归纳类" class="headerlink" title="概括归纳类"></a>概括归纳类</h3><ul><li><p>和评价分析类不同，不需要主观判断和分析</p></li><li><p>阅读理解能力–理解资料含义（基本）、提炼观点（不是抄材料、主旨）、揭示反应本质问题</p></li><li><p>综合分析能力–多角度思考，合理推断或评价</p></li></ul><ol><li><p>审题，确定命题人意图–<strong>归纳原因</strong>、做法；总结经验；</p><blockquote><p>M农场的案例为新时代青年创业（创业不一定农场创业，范围词）提供了哪些启示？ （总结经验非归纳做法）</p><p>谈谈老马是怎样”当好基层这根绣花针“的。 （归纳做法类）</p></blockquote></li><li><p>阅读材料，找出答案要点–<strong>抓主旨句</strong></p></li><li><p>简洁表达观点–围绕<strong>原词、中心词</strong>组织句子</p><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/20201110114237.png" alt></p></li></ol><p>2020国考地市老马</p><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/image-20201110163634577.png" alt="image-20201110163634577"></p><h3 id="词句解释类（减少的趋势）"><a href="#词句解释类（减少的趋势）" class="headerlink" title="词句解释类（减少的趋势）"></a>词句解释类（减少的趋势）</h3><h4 id="解释-具体化-总结启示"><a href="#解释-具体化-总结启示" class="headerlink" title="解释;具体化;总结启示"></a>解释;具体化;总结启示</h4><h5 id="题目-根据资料4、5，谈谈你对“穷则变，变则通，通则久”的理解及其现实意义。-20分-要求-全面、准确、深刻，不超过350字。"><a href="#题目-根据资料4、5，谈谈你对“穷则变，变则通，通则久”的理解及其现实意义。-20分-要求-全面、准确、深刻，不超过350字。" class="headerlink" title="题目:根据资料4、5，谈谈你对“穷则变，变则通，通则久”的理解及其现实意义。(20分) 要求:全面、准确、深刻，不超过350字。"></a>题目:根据资料4、5，谈谈你对“穷则变，变则通，通则久”的理解及其现实意义。(20分) 要求:全面、准确、深刻，不超过350字。</h5><p><strong>面临困境，要谋新求变</strong>，这样才能突破困局，顺应潮流，实现长久发展，这是敢闯、敢试、敢为天下先的改革 精神。如安徽小岗村面临饥饿穷困，敢为天下先提出大包干，实现吃饱饭，后又持续深化改革，通过土地流转 实现致富。深圳敢为人先创出一个个全国第一，今天改革不停顿，成为“深圳奇迹”。</p><p>改革精神的<strong>现实意义</strong>有:1、为乡村振兴注入新活力。今天持续深化农村改革，有序推进土地流转，放活经营权， 可进一步解放生产力，调动农民积极性，实现乡村致富。2、促进经济跨越式发展。改革能释放的强大活力，让 城市焕发出前所未有的生命力，促进创新成为经济发展的第一动力。3、改革开放是实现民族伟大复兴关键一招。 近代中国因因循守旧，畏惧变革跟不上世界发展。我们只有解放思想，积极应变，主动求变，才能与时代同行， 推动中国发展进步。</p><h3 id="对策题"><a href="#对策题" class="headerlink" title="对策题"></a>对策题</h3><ul><li><p>确定问题时可以反推对策</p></li><li><p>具体对策写法：A我怎么做+B达到什么目的（即解决什么问题）</p></li></ul><p>例如：医疗扶贫。</p><p>1、争取医疗帮扶资金，购买更换陈旧落后医疗设备。</p><p>2、协调W县医院与省第一人民医院结对帮扶，在基层医疗人员的培训学习、专家援助方面提供更多机会。</p><p>3、协调有关部门，研究大病医保政策，提高对贫困家庭的医疗保障能力。</p><ul><li>3针对贫困户看病难的问题，尤其大病</li></ul><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/image-20201117161140870.png" alt="image-20201117161140870"></p><h3 id="应用文"><a href="#应用文" class="headerlink" title="应用文"></a>应用文</h3><ol><li>建议书</li><li>倡议书</li><li>宣传稿（介绍、亮点事迹、成果、展望）</li><li>工作方案（具体、活动目的、主办、报名、评选、宣传）</li><li>调研报告（背景目的、总体情况、问题、今后意见建议）</li><li>演讲稿（找材料，或议论文形式）</li></ol><h4 id="工作总结（工作经验）"><a href="#工作总结（工作经验）" class="headerlink" title="工作总结（工作经验）"></a>工作总结（工作经验）</h4><p><strong>机关工作如何开展?工作总结如何写?经历一多自然熟悉其中规律:</strong></p><p>第一、<strong>目的</strong>、<strong>社会价值</strong>。 开展一项工作，要师出有名。<strong>是为了落实什么文件指示精神?</strong>这是工作总结一开始就要交代的。</p><p>第二、<strong>指导思想</strong>。开展此项工作，契合哪些新时代中国特色社会主义思想?重要讲话精神? 第三、<strong>开展工作</strong>，需要强有力的组织部署。<strong>具体来说: 领导高度重视，</strong>设立专门的工作领导小组，然后开会部署，协调不同的部门来细化执行。 制定切实的工作方案或制度，责任分工明确，保障工作规范有序的稳步推进。 </p><p>第四、<strong>突出工作的亮点</strong>。围绕破解工作中的重点、难点问题，<strong>采用了哪些创新方法、创新模式制度，</strong>有哪些社会影响或价值。</p><p> 第五、<strong>如果不需突出亮点</strong>，则要介绍工作的重点领域和重点内容如何推进，取得了那些显著成绩。比<strong>如，财、物方面的硬 件投入</strong>，尤其要用数字突出是实在的成果。</p><p> 第六、<strong>要做好人才</strong>(人力)、技术等方面的保障，<strong>注重榜样激励作用</strong>。尤其是突出专业人才、信息化技术的引入支撑，能够保障工作上水平。</p><p> 第七、<strong>要做好宣传工作</strong>，多形式多内容，更新大家观念，扩大影响力。</p><p>第八、<strong>过程的监督</strong>，<strong>保障各项工作落实到位</strong>。 以上，是机关安排工作的常见套路，写工作总结时也大抵沿着这些方面，进行针对性的总结。</p><blockquote><p>1、构建机制，成立领导小组，制定项目方案，协调项目实施; </p><p>2、创新模式，建立心理咨询协会、部门、社区的三级网络系统，资源整合，做到全覆盖; </p><p>3、着力硬件建设，建设市心理健康辅导中心，以及针对学生、职工、女性及残疾人的心理咨询中心; </p><p>4、加强人才保障，聘请精神病专家坐诊培训、招聘专业人才，开展咨询师培训计划; 5、重视教育宣传，加强心理课程建设、开展抑郁症筛查日活动、通过资料发放、报纸媒体广泛宣传心理</p></blockquote><h3 id="议论文"><a href="#议论文" class="headerlink" title="议论文"></a>议论文</h3><h4 id="具体文体类主题"><a href="#具体文体类主题" class="headerlink" title="具体文体类主题"></a>具体文体类主题</h4><ul><li><p>2W1H策略</p></li><li><p>第一段阐述what</p></li><li>第二段分析问题 why</li><li>第三段 解决问题 how</li></ul><ol><li>描述AB什么关系（矛盾）</li><li>A给B</li><li>B给A</li><li>A和B融合发展</li></ol><p><strong>例</strong>：<strong>城市与运河和谐相处</strong></p><blockquote><ol><li>运河兴，则城市兴，大运河一直滋养着…..，当下，不少运河两岸城市积极（材料中思考和探索不确定的改为）实践，探索出一条条值得我们学习借鉴的道路。AB关系</li><li>运河治理，重现城市清水碧波。A给B</li><li>以文化为纽带，城市让运河成为诗的河流。B给A</li><li>运河与城市旅游融合发展，重现城市昔日繁华。A-B</li></ol></blockquote><h4 id="哲理思辨类"><a href="#哲理思辨类" class="headerlink" title="哲理思辨类"></a>哲理思辨类</h4><ul><li>找要素，化繁为简，理清要素关系</li></ul><p>例1：文物—来到百姓中间—带给自信</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">what 文物要共享</span><br><span class="line">why 带给自信</span><br><span class="line">how 根据材料提炼做法</span><br></pre></td></tr></table></figure><p>例2：动与静</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>开始</span><br><span class="line"><span class="number">3.</span>中途创新</span><br><span class="line"><span class="number">2.</span>目的纯粹</span><br><span class="line">目标落地</span><br><span class="line">着力花式—创新</span><br></pre></td></tr></table></figure><p>例3：与世界相交，时代相通</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">个人角度—发展</span><br><span class="line">国家角度—经济领域交通发展</span><br><span class="line">世界的角度—促世界发展</span><br></pre></td></tr></table></figure><h2 id="梦娇速记常识"><a href="#梦娇速记常识" class="headerlink" title="梦娇速记常识"></a>梦娇速记常识</h2><ul><li>改变历史：<strong>就对物资</strong>、中学论孟子</li><li>市场机制：<strong>风求竞价</strong></li><li>水矿城土归国有，集体宅山地自留</li><li>世界经济三支柱，<strong>银行世贸基金组</strong></li><li><strong>会话大党国</strong>五全面，三严三实，两学一做，一带一路</li><li>主观唯心强调内心，客观唯心有神论，朴素唯物金木水火土，形而上者孤静片</li><li></li></ul><h2 id="粉笔常识"><a href="#粉笔常识" class="headerlink" title="粉笔常识"></a>粉笔常识</h2><h3 id="历史部分"><a href="#历史部分" class="headerlink" title="历史部分"></a>历史部分</h3><h4 id="上古时期："><a href="#上古时期：" class="headerlink" title="上古时期："></a>上古时期：</h4><p>五帝：颛顼（zhuanxu）、帝喾(diku)、皇帝、尧、舜</p><p>嫘祖–养蚕，仓颉–造字</p><p>一、涿鹿之战</p><blockquote><p> 炎黄二帝斗蚩尤，后续阪泉之战</p></blockquote><h4 id="夏商西周："><a href="#夏商西周：" class="headerlink" title="夏商西周："></a>夏商西周：</h4><p>二、鸣条之战</p><blockquote><p>夏桀vs商汤、夏末</p><p>伊尹–庖厨祖师爷，调和五味治天下</p></blockquote><p>三、<strong>牧野之战</strong></p><blockquote><p>周武王姬发vs商纣王帝辛–酒池肉林–妲己</p><p>典故：阵前倒戈</p></blockquote><p>四、武庚之乱</p><ul><li>周公vs武庚</li><li>周公胜–成康盛世–周公解梦–周公制礼乐</li></ul><p>五、国人暴动</p><ul><li>周厉王vs国人–监听</li><li>厉王被逐、共和行政–确切纪年的开始–烽火戏诸侯–西周被灭</li></ul><h4 id="春秋战国："><a href="#春秋战国：" class="headerlink" title="春秋战国："></a>春秋战国：</h4><p>六、长勺之战</p><ul><li>齐桓公、晋文公、</li><li>齐国vs鲁国、曹刿（鲁）论战、一鼓作气，再而衰。以少胜多</li></ul><p>七、城濮之战</p><ul><li>晋国vs楚国</li><li>晋军退避三舍、晋国胜</li></ul><p>八、<strong>桂陵之战</strong></p><ul><li>齐国（孙膑）vs魏国（庞涓）</li><li>齐国围魏救赵</li></ul><p>九、<strong>马陵之战</strong></p><ul><li>齐国（孙膑）vs魏国（庞涓完败而死）</li><li>齐国胜、减灶诱敌</li></ul><p>十、<strong>长平之战</strong></p><ul><li>秦国（白起）vs赵国（赵括）</li><li>坑杀40万、纸上谈兵</li></ul><h2 id="龙飞图形"><a href="#龙飞图形" class="headerlink" title="龙飞图形"></a>龙飞图形</h2><blockquote><p>线—纯曲直、一笔画、单区域空间（LOGO考空间）；定量都是2平行纯直，回旋色彩方向；</p><p>角—依赖直线，出头色彩考交点</p><p>特殊图形–三角四边，线连接，点连接，2个图形为对接</p><p>元素–形状、位置、对称、黑点、移动</p></blockquote><h3 id="定性分析（形状就是定性的思考）"><a href="#定性分析（形状就是定性的思考）" class="headerlink" title="定性分析（形状就是定性的思考）"></a>定性分析（形状就是定性的思考）</h3><h4 id="曲直定性"><a href="#曲直定性" class="headerlink" title="曲直定性"></a>曲直定性</h4><p>线条分<strong>曲直</strong>（阴影不讨论取值定性）</p><h4 id="对称方式"><a href="#对称方式" class="headerlink" title="对称方式"></a>对称方式</h4><ul><li>轴对称（<strong>折叠重合</strong>）</li><li>中心对称（<strong>旋转</strong>180，看一眼，倒立看一眼）–做点题，条件反射</li><li>对称方向，依次旋转45</li></ul><h4 id="空间图形"><a href="#空间图形" class="headerlink" title="空间图形"></a>空间图形</h4><p>相似形状，大小不同–<strong>突出形状</strong>，重合区域和外部图形相似</p><p>小空间与外轮廓相似</p><ul><li>外轮廓要纯封闭、规整轮廓</li></ul><p>相同形状</p><blockquote><p>数三角形个数</p><p>内部全三角形，内部全四边形</p></blockquote><p>相同元素（元素的本质，空间形状）</p><ul><li>311，221，311，221</li><li>相邻两幅图有相同的空间形状，空间形状的传递</li></ul><p>logo分析</p><ul><li>粗线条</li><li>一个空间3个部分工商银行logo</li></ul><p>数字字母分析</p><ul><li>封闭元素（有空间就是封闭元素）</li><li>封闭相对开发而言，不存在半封闭的状态</li><li><strong>字母放在轮廓里就是考空间</strong></li></ul><h3 id="定量分析"><a href="#定量分析" class="headerlink" title="定量分析"></a>定量分析</h3><h4 id="纯曲纯直"><a href="#纯曲纯直" class="headerlink" title="纯曲纯直"></a>纯曲纯直</h4><blockquote><p>提示点：实物简笔画，纯曲图形，单区域封闭图形</p><ul><li>多少条直线或者曲线</li><li>直线平行或垂直</li></ul></blockquote><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/image-20201118150156542.png" alt="image-20201118150156542"></p><h4 id="对称图形（先定性后定量）"><a href="#对称图形（先定性后定量）" class="headerlink" title="对称图形（先定性后定量）"></a>对称图形（先定性后定量）</h4><ul><li>对称轴数量，本质是线</li></ul><h4 id="一笔画图形"><a href="#一笔画图形" class="headerlink" title="一笔画图形"></a>一笔画图形</h4><ul><li>吹捏原理，优先捏大轮廓，最大程度简化图形</li><li>出头考虑一笔画</li></ul><p>捏即去除封闭图形，类似位移，一笔画回到原点，剩下的仍是一笔画；只要有空间就可以继续捏</p><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/image-20201119163126111.png" alt="image-20201119163126111"></p><h4 id="交点（角）个数"><a href="#交点（角）个数" class="headerlink" title="交点（角）个数"></a>交点（角）个数</h4><ul><li>出头也考虑交点，纯直线优先考虑角（对直线依赖强）</li><li>曲直交点，所有图形都有圆且出头</li></ul><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/image-20201119165321958.png" alt="image-20201119165321958"></p><h4 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h4><ul><li><p>对称；相同元素个数；视觉冲击力强</p></li><li><p>图形都是离散的，图形元素数量</p></li></ul><h3 id="相对位置"><a href="#相对位置" class="headerlink" title="相对位置"></a>相对位置</h3><h4 id="点链接"><a href="#点链接" class="headerlink" title="点链接"></a>点链接</h4><ul><li>封闭图形，点链接个数多，点链接一定是一笔画图形</li></ul><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/image-20201119184436742.png" alt="image-20201119184436742"></p><h4 id="对接"><a href="#对接" class="headerlink" title="对接"></a>对接</h4><ul><li><p>所有图形都是两个空间的线连接</p></li><li><p>对接线类型</p></li><li>对接线个数。不是重点，对接方式：完全还是错开</li></ul><h4 id="黑点（元素三角形）位置"><a href="#黑点（元素三角形）位置" class="headerlink" title="黑点（元素三角形）位置"></a>黑点（元素三角形）位置</h4><ul><li>线上，交点上</li><li>重合区域内外</li><li>曲上直下，空间数量不同</li></ul><h4 id="移动分析"><a href="#移动分析" class="headerlink" title="移动分析"></a>移动分析</h4><ul><li>轮廓一致(九宫格，每个阴影都在移动)</li><li>平移对称翻转</li><li>1图形和2图形—逻辑+-异或（阴影数量多，＞3）</li></ul><h2 id="龙飞判断推理"><a href="#龙飞判断推理" class="headerlink" title="龙飞判断推理"></a>龙飞判断推理</h2><blockquote><p>两类，一类是有已知真论据能推出什么。=&gt;有已知可以推逆否，可以传递性。</p><p>二是论证，论证一个命题（关联型类似）是真是假。=&gt;支持质疑的论证。</p><p>一个论证若为真，一是前提真实，二是论证有效。</p><p>读题找论据，结论推出过程。</p><p>支持论证分两类</p><ul><li>加强关联，主要手法排除他因</li><li>建立关联，建立推出型色彩，论证逆否或者确实是必要条件</li></ul><p>质疑论证</p><ul><li>弱化切断关联</li><li>A且非B，即举反例，客观事实来质疑；关联型A对B坏</li></ul><p>推理形式是为以上服务的，方便我们找到论据重要还是论点重要。</p><p>给一堆条件推出</p><ol><li>用陈述性事实，1号和10号柜放各处材料。</li><li>用肯定性命题，后用否定。两个本局连号。</li><li>用信息量大的，后小。基层材料和本局材料不连号。（基层材料份数多）</li></ol></blockquote><h3 id="已知论据可推出"><a href="#已知论据可推出" class="headerlink" title="已知论据可推出"></a>已知论据可推出</h3><h4 id="推出-gt"><a href="#推出-gt" class="headerlink" title="推出=&gt;"></a>推出=&gt;</h4><ol><li>推出符号</li></ol><p>陈述句符号化为命题。不可判断真假的不为命题。</p><p>A=&gt;B，表示 A 是 B 的充分条件，即A不需要其他条件辅助，A成立B必成立。</p><p>-B=&gt;-A，逆否命题证明必要性，等价原命题一回事儿，只是不同角度来讲。B 是 A 的必要条件。即说明没 B ，A一定不行。</p><ol start="2"><li>传递性</li></ol><p>A=&gt;B=&gt;C=&gt;D=&gt;E，则A=&gt;E，大数据技术即还原人们忽略和难觉察到的BCD因素，地震。</p><ol start="3"><li>命题真假性</li></ol><ul><li>只能根据客观事实判断，前提要一致，横看成岭侧成峰。</li><li>肯前否后，阴天=&gt;下雨，阴天了但是没有下雨，不能用推论（推论真假待定）验证推论，阴天=&gt;没下雨不能证明命题假。</li><li>除了以上客观事实，命题都视为真，不能证明假则为真。</li></ul><ol start="4"><li>语言转逻辑</li></ol><ul><li>如果A，那么B。A=&gt;B</li><li>只有q，才p；p仅当q；除非q才p；除非q否则非p。p=&gt;q【都代表q是p的必要条件(必须、前提、基础；充分性为一定、必然)】 </li><li>除非A，否则B。【否则否的是前原因不是结果】-A=&gt;B</li><li>或者A或者B，只有-A，-B同时成立才否。</li><li>要么A要么B，A，B都成立也否，只能选一。</li><li>和/且，AB必须都成立。</li></ul><p>例：</p><p>只有不选派甲，才不选派乙和丙。</p><p>-甲=&gt;-乙且-丙。客观事实：-甲，乙或丙。  </p><h5 id="范畴词"><a href="#范畴词" class="headerlink" title="范畴词"></a>范畴词</h5><p>有些=所有或部分。</p><ol><li>所有A是B，即A=&gt;B。</li><li>有些A是B&lt;=&gt;有些B是A。</li></ol><h4 id="关联-gt"><a href="#关联-gt" class="headerlink" title="关联-&gt;"></a>关联-&gt;</h4><p>A-&gt;B，仅代表A对B有影响。清廉就<strong>不易-&gt;</strong>滋生腐败温床。只要清廉<strong>就不</strong>滋生腐败×。</p><h3 id="支持或质疑结论"><a href="#支持或质疑结论" class="headerlink" title="支持或质疑结论"></a>支持或质疑结论</h3><h5 id="关联性（强调原因）"><a href="#关联性（强调原因）" class="headerlink" title="关联性（强调原因）"></a>关联性（强调原因）</h5><p>Q：地震是海啸引起的。B影响A。海啸-&gt;地震</p><p>距今4400年极端气候变化，可能是这次文化变迁的主要原因。</p><p>正确选项：不同生存方式族群对气候和环境都有相对稳定的需求。</p><p>其他没重点讨论原因（B 4400的气候变化），无关选项。</p><h5 id="推论型"><a href="#推论型" class="headerlink" title="推论型"></a>推论型</h5><p>Q：海啸引起地震的关键因素。B是A的必要条件。地震=&gt;海啸</p><p>支持：强化原命题或逆否命题；排除他因。</p><p>反对：增加他因；关联性还可反向关联；原命题反例B发生了A没发生。</p><h5 id="归果型（强调结果）"><a href="#归果型（强调结果）" class="headerlink" title="归果型（强调结果）"></a>归果型（强调结果）</h5><p>喝酸奶可以降低儿童蛀牙。类似关联。下列哪个选项能支持题目的观点？</p><p>正确答案在支持结果的选项里找。</p><h5 id="前提假设型（若题目不是问，不要自己脑补其他类型题的无关选项）"><a href="#前提假设型（若题目不是问，不要自己脑补其他类型题的无关选项）" class="headerlink" title="前提假设型（若题目不是问，不要自己脑补其他类型题的无关选项）"></a>前提假设型（若题目不是问，不要自己脑补其他类型题的无关选项）</h5><p>小王带专，所以没有参加公务员考试的资格。为使命题成立，需要补充哪项作为前提？</p><p>前提假设：公务员限制本科以上。</p><p>找到逻辑断点。</p><h5 id="左右手问题，A比B政策好或者致残率高"><a href="#左右手问题，A比B政策好或者致残率高" class="headerlink" title="左右手问题，A比B政策好或者致残率高"></a>左右手问题，A比B政策好或者致残率高</h5><p>解决”入学难“，不能依靠校车接送儿童，合理布局，才能解决根本。</p><p>最能支持选  校车维护成本高，幼儿园无法承担。而不是选每个乡镇应该合理布局办幼儿园。论证A不行则B，不是说B可行。</p><h3 id="三大推理形式"><a href="#三大推理形式" class="headerlink" title="三大推理形式"></a>三大推理形式</h3><h5 id="归纳推理"><a href="#归纳推理" class="headerlink" title="归纳推理"></a>归纳推理</h5><p>西瓜是甜的，香瓜是甜的，所以叫“瓜”的蔬果应该都是甜的——这是归纳，已知个体推测群体；关键断点是<strong>个体有没有代表性</strong>。削弱论证：西瓜香瓜只占所有挂的百分之1。（论据比结论重要）</p><h5 id="演绎推理"><a href="#演绎推理" class="headerlink" title="演绎推理"></a>演绎推理</h5><p>所有姑娘都一个鼻子两只眼，所以我猜二姨介绍给我相亲的小姐姐也应该是一个鼻子两只眼——这是演绎，已知群体推测个体，关键是<strong>个体在不在整体域</strong>中。</p><p>归纳和演绎都是推理过程，所以结论可能不准确：比如苦瓜不是甜的；二姨介绍的小姐姐去年不幸工伤变成了雷神索尔的样子….</p><h5 id="类比推理"><a href="#类比推理" class="headerlink" title="类比推理"></a>类比推理</h5><p>根据两个或两类对象在某些属性上相同，推断出它们在另外的属性上（这一属性已为类比的一个对象所具有，另一个类比的对象那里尚未发现）也相同。</p><p>类比推理不是归纳推理，不过近似于归纳推理。归纳推理是从多个特殊到一般的结论，而类比推理是从特殊到特殊的结论，思维方式是不同的。</p><p>在论证效力上，归纳推理依靠的是更多的特殊案例增强可行度，类比推理依靠的<strong>是两个事物之间联系的紧密程度</strong>。</p><p>### </p><h2 id="灰兔数量"><a href="#灰兔数量" class="headerlink" title="灰兔数量"></a>灰兔数量</h2><h3 id="代入法"><a href="#代入法" class="headerlink" title="代入法"></a>代入法</h3><blockquote><p> 未给出成本，看到百分，假设成本是多少</p></blockquote><ol><li>某商店的两件商品成本价相同，一件按成本价多 25%出售，一件按正本价少 13%出售，</li></ol><p>则两件商品各出售一件时盈利为多少?</p><ul><li>A.6% B. 8% C. 10% D.12%。设100块成本，（25-13）/200=6%</li></ul><h3 id="倍数法"><a href="#倍数法" class="headerlink" title="倍数法"></a>倍数法</h3><blockquote><p>看到百分数17%、小数、倍数、比例1/6，答案是某某数的倍数，排除</p><p>4看末两位，8看末三位，7、11、13看末三位与剩余位</p></blockquote><ol><li>一辆汽车第一天行驶了 5 个小时，第二天行驶了 600 公里，第三天比第一天少行驶 200 公里，三天共行驶了 18 个小时。已知第一天的平均速度与三天全程的平均速度相同，问三天共 行驶了多少公里? </li></ol><ul><li>S=VT，路程都是整数，速度也是整数，t=18=2×9，答案路程是18的倍数</li></ul><ol start="2"><li>两个派出所某月内共受理案件 160 起，其中甲派出所受理的案件中有 17%是刑事案件， 乙派出所受理的案件中有 20%是刑事案件，问乙派出所在这个月中共受理多少起非刑事案件?</li></ol><ul><li>甲*17%=整数，甲约掉分母，甲为100起；乙20%=1/5不考虑了</li></ul><ol start="3"><li>某公司去年有员工 830 人，今年男员工人数比去年减少 6%，女员工人数比去年增加 5%， 员工总数比去年增加 3 人，问今年男员工有多少人?</li></ol><ul><li>男×94%=男×47/50，去年男是50的倍数，今年是47的倍数</li></ul><ol start="4"><li>小张的孩子出生的月份乘以 29，出生的日期乘以 24，所得的两个乘积加起来刚好等于 900。问孩子出生在哪一个季度?【2017 山东-51】</li></ol><ul><li>A.第一季度 B.第二季度 C.第三季度 D.第四季度。29x+24y=900，找900、24y、29x三个数共有的特点，24，900是12的倍数，因此x也是12的倍数。</li></ul><ol start="5"><li>小王打靶共用了 10 发子弹，全部命中，都在 10 环、8 环和 5 环上，总成绩为 75 环， 则命中10环的子弹数是( )【2017江苏C-61】</li></ol><ul><li>10x+8y+5z=75。四个数，3个是5的倍数则y=5。</li></ul><h3 id="规避陷阱法"><a href="#规避陷阱法" class="headerlink" title="规避陷阱法"></a>规避陷阱法</h3><blockquote><p>错误的选项一定对应一个错误的思路</p></blockquote><ol><li>一支部队排成长度为 800 米的队列行军，速度为 80 米/分钟。在队首的通讯员以 3 倍于 行军的速度跑步到队尾 ，花 1 分钟传达首长命令后，立即以同样的速度跑回到队首。求在这往 返全过程中通讯员所花费的时间?【上海 2010】</li></ol><ul><li>A.7.5 分钟 B.8 分钟 C.8.5 分钟 D.10 分钟。全程，包含传达命令的一分钟，选C。</li></ul><ol start="2"><li>甲车上午 8 点从 A 地出发匀速开往 B 地，出发 30 分钟后乙车从 A 地出发以甲车 2 倍的 速度前往 B 地，并在距离 B 地 10 千米时追上甲车。如乙车 9 点 10 分到达 B 地，问甲车的速度 为多少千米/小时( )</li></ol><ul><li>30 36 45 60选A，乙车速度是甲二倍，D是A的二倍。</li></ul><p>3、一只小鸟离开在树枝上的鸟巢，向北飞了 10 米，然后又向东飞了 10 米，然后又向上飞 了 10 米。最后，它沿着到鸟巢的直线飞回了家，请问:小鸟飞行的总长度与下列哪个最接近?</p><ul><li>A. 17米 B.40米 C.47米 D.50米。错误思路，三个10相加，则正确答案差30，选A。</li></ul><h3 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h3><h4 id="等差数列"><a href="#等差数列" class="headerlink" title="等差数列"></a>等差数列</h4><blockquote><p>Sn=(a1+an)<em>n÷2，首项+末项 </em> 项数 ➗ 2</p><p>(a1+an)/2=平均数=E=aE，ax=aE-(x-E)d，2、4、6、8；ax=a1=a2.5-(2.5-1)*2=5-3</p></blockquote><ol><li>10个连续偶数之和为2030，则第一个偶数的值为。</li></ol><ul><li>2030/10-(5.5-1)*d=203-9=194</li></ul><h4 id="鸡兔同笼"><a href="#鸡兔同笼" class="headerlink" title="鸡兔同笼"></a>鸡兔同笼</h4><blockquote><p>先假设全部是某一种，然后求出的值与实际值的差值除以他们单个的差值，得出来的是另一种。(假设鸡得出兔，假设兔得出鸡)</p><p>鸡数=(兔脚数×总头数一总脚数)÷(兔脚数一鸡脚数);</p></blockquote><ol><li>玻璃厂委托运输公司运送 400 箱玻璃。双方约定:每箱运费 30 元，如箱中玻璃有破损， 那么该箱的运费不支付且运输公司需赔偿损失 60 元。最终玻璃厂向运输公司共支付 9750 元， 则此次运输中玻璃破损的箱子有:【2017 江苏 A】</li></ol><ul><li>400*30-9750=2250；2250/(30–60)=25；注意来回差价90不是30</li></ul><ol start="2"><li>某地遭受重大自然灾害后，A.公司立即组织捐款救灾。已知该公司有 100 名员工捐款， 捐款额有300元、500元和2000元三种，捐款总额为36000元，则捐款500元的员工数是【2017 江苏 A】</li></ol><ul><li>A.11 人 B.12 人 C.13 人 D.14 人。假设都是300元，则(500-300)y+(2000-300)z=36000-300*100</li></ul><h4 id="比例法"><a href="#比例法" class="headerlink" title="比例法"></a>比例法</h4><blockquote><p>设1换为设最小公倍数，铝1/5，铜1/3，设总15，则份数比例</p><p>份数省了约分通分过程</p></blockquote><ol><li><p>某有色金属公司四种主要有色金属总产量的 1/5 为铝，1/3 为铜，镍的产量是铜和铝产 量之和的 1/4，而铅的产量比铝多 600 吨。问该公司镍的产量为多少吨?【2014 年 412 联考-64】</p><p>A.800 B.600 C.1000 D.1200</p></li><li><p>某企业前 5 个月的销售额为全年计划的 3/8，6 月的销售额为 600 万，其上半年销售额 占全年计划的 5/12，问其下半年平均每个月要实现多少万元的销售额才能完成全年的销售计 划? 【2015 山东】</p><p>A.1600 B.1800 C.1200 D.1400【设总份24，则S5=[9]，S6=[10]，1=600，S6下<strong>剩余</strong>14份，14*600/6个月完成】总量后的<strong>剩余份数</strong>很重要，老忘记</p></li></ol><h2 id="顾斐言语理解"><a href="#顾斐言语理解" class="headerlink" title="顾斐言语理解"></a>顾斐言语理解</h2><blockquote><p>找主旨句，一般是<strong>观点、揭示现象或问题</strong>（对策）的句子，优选忠于原文</p><p>宏观–结构，微观–关联词语（句与句的逻辑关系）</p></blockquote><p>关联词语：</p><p>事实上，其实，看来，可见，使得</p><p>于是–结论=因此，顺承上文总结，分析人才消减的原因</p><h3 id="分布解题法"><a href="#分布解题法" class="headerlink" title="分布解题法"></a>分布解题法</h3><ol><li>仔细审题</li><li>提问方式明确题型</li></ol><ul><li>这段文字主要说的是–<strong>主旨题</strong></li><li>这段文字意在说明–<strong>意图题</strong></li><li>说法与原文相符的是–<strong>判断题</strong></li><li>文中“病来如山倒，病去如抽丝”中的“病”指的是–<strong>词语理解</strong></li><li>这段话对洋节进入中国人生活的<strong>态度</strong>是–<strong>态度题</strong></li><li>划线句中“<strong>这</strong>种状况”指的是–<strong>指代题</strong></li><li>最适合这则<strong>新闻报道</strong>的标题是–时效性、简洁性-、审题贯穿始终</li></ul><h3 id="替换压缩法"><a href="#替换压缩法" class="headerlink" title="替换压缩法"></a>替换压缩法</h3><ol><li>同义替换</li><li>精简压缩</li></ol><h3 id="成分分析法"><a href="#成分分析法" class="headerlink" title="成分分析法"></a>成分分析法</h3><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/20201115155505.png" alt></p><p>高兴地唱–&gt;唱得高兴</p><p>通常“的”定语出现较多</p><h3 id="表达倾向法"><a href="#表达倾向法" class="headerlink" title="表达倾向法"></a>表达倾向法</h3><ol><li>积极的倾向</li><li>消极的倾向</li></ol><ul><li>从表面上看、看上去、似乎好像、所谓、遗憾的是</li><li>申论中也可用于对材料的判断</li></ul><h3 id="举例论证法"><a href="#举例论证法" class="headerlink" title="举例论证法"></a>举例论证法</h3><p>可以发现，引出观点。正反论证，申论同理</p><h3 id="原因推断法"><a href="#原因推断法" class="headerlink" title="原因推断法"></a>原因推断法</h3><ul><li>解释原因为了证明论点，通过原因位置找前后主题句</li><li>原因不重要快速浏览，围绕原因的也为干扰项</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;站长申论&quot;&gt;&lt;a href=&quot;#站长申论&quot; class=&quot;headerlink&quot; title=&quot;站长申论&quot;&gt;&lt;/a&gt;站长申论&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;分析和对策是不一样的，判断题目侧重分析和对策。&lt;/p&gt;
&lt;p&gt;例：我们与世界相交，与时代相通，才能
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>个人信息</title>
    <link href="http://yoursite.com/2020/10/24/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF/"/>
    <id>http://yoursite.com/2020/10/24/个人信息/</id>
    <published>2020-10-24T04:42:34.000Z</published>
    <updated>2020-10-24T04:57:09.393Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://b265.photo.store.qq.com/psb?/V12zC0Et3cmdw5/TwfD8vwUeJOuIuN6y8ykqwehoT9IhXPVeNAFgNd*KoE!/b/dAkBAAAAAAAA&amp;bo=qwYABcAMkAkFGcc!&amp;rf=viewer_4" alt="img"></p><p><img src="http://b389.photo.store.qq.com/psb?/V12zC0Et3cmdw5/smEsd0ERBHImarBHPlA*pa07ZuLgxVhAI1wY*MOQ1iA!/b/dIUBAAAAAAAA&amp;bo=QAdwBUAHcAURCT4!&amp;rf=viewer_4" alt="img"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://b265.photo.store.qq.com/psb?/V12zC0Et3cmdw5/TwfD8vwUeJOuIuN6y8ykqwehoT9IhXPVeNAFgNd*KoE!/b/dAkBAAAAAAAA&amp;amp;bo=qwYABcAMk
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>tensorflow的embedding操作详解</title>
    <link href="http://yoursite.com/2020/07/30/tensorflow%E7%9A%84embedding%E6%93%8D%E4%BD%9C%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/07/30/tensorflow的embedding操作详解/</id>
    <published>2020-07-30T07:04:13.000Z</published>
    <updated>2020-08-10T01:54:48.192Z</updated>
    
    <content type="html"><![CDATA[<h3 id="二维仅词和embedding"><a href="#二维仅词和embedding" class="headerlink" title="二维仅词和embedding"></a>二维仅词和embedding</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#设置类别的数量</span></span><br><span class="line">num_classes = <span class="number">5</span></span><br><span class="line"><span class="comment">#需要转换的整数</span></span><br><span class="line">matrix = np.random.random([<span class="number">5</span>,<span class="number">3</span>]) <span class="comment">#embedding矩阵，5个词每个词embedding为3维度</span></span><br><span class="line">print(matrix)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">onehotidx = [<span class="number">3</span>]</span><br><span class="line">c = tf.nn.embedding_lookup(matrix,onehotidx)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#将整数转为一个num_classes位的one hot编码</span></span><br><span class="line">onehot = np.eye(num_classes)[onehotidx]</span><br><span class="line">print(onehot)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    print(<span class="string">'用look up提供ids取embedding\n'</span>)</span><br><span class="line">    print(c.eval())</span><br><span class="line">    print(<span class="string">'onehot后再取embedding\n'</span>)</span><br><span class="line">    print(tf.matmul(onehot,matrix).eval())</span><br></pre></td></tr></table></figure><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/20200730150513.png" alt></p><p>ids相当于左边，matrix相当于右边待取的词向量，one hot(ids)*matrix</p><h3 id="三维加入batch的情况"><a href="#三维加入batch的情况" class="headerlink" title="三维加入batch的情况"></a>三维加入batch的情况</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#设置类别的数量</span></span><br><span class="line">num_classes = <span class="number">10</span></span><br><span class="line"><span class="comment">#需要转换的整数</span></span><br><span class="line">arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">9</span>]</span><br><span class="line">arr2 = [<span class="number">0</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">12</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#将整数转为一个10位的one hot编码</span></span><br><span class="line">a = np.eye(<span class="number">16</span>)[arr]</span><br><span class="line">b = np.eye(<span class="number">16</span>)[arr2]</span><br><span class="line"><span class="comment">#print(np.array([a,b,b]))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#matrix = np.random.random([10,5, 16])  # 10batch,5voc,3dimen</span></span><br><span class="line">matrix = np.array([a,b,b])  <span class="comment"># 3batch,5voc,16dimen</span></span><br><span class="line">ids = np.array([<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"><span class="comment">#结论 如果多batch下，embedding look up 也是取第一维即3batch拨开为[5,16], [5,16], [5,16]再根据ids取哪几个batch后拼</span></span><br><span class="line"><span class="comment">#二维即5个词embedding[16]，取哪几个词的embedding，这里词也可以是一维feature</span></span><br><span class="line">print(matrix)</span><br><span class="line">c = tf.nn.embedding_lookup(matrix,ids)</span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    print(c.eval())</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;二维仅词和embedding&quot;&gt;&lt;a href=&quot;#二维仅词和embedding&quot; class=&quot;headerlink&quot; title=&quot;二维仅词和embedding&quot;&gt;&lt;/a&gt;二维仅词和embedding&lt;/h3&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>iterm2触发器设置trigger自动登陆远程服务器</title>
    <link href="http://yoursite.com/2020/06/22/iterm2%E8%A7%A6%E5%8F%91%E5%99%A8%E8%AE%BE%E7%BD%AEtrigger%E8%87%AA%E5%8A%A8%E7%99%BB%E9%99%86%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2020/06/22/iterm2触发器设置trigger自动登陆远程服务器/</id>
    <published>2020-06-22T02:43:19.000Z</published>
    <updated>2020-06-22T02:54:27.639Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iterm2触发器设置trigger自动登陆远程服务器"><a href="#iterm2触发器设置trigger自动登陆远程服务器" class="headerlink" title="iterm2触发器设置trigger自动登陆远程服务器"></a>iterm2触发器设置trigger自动登陆远程服务器</h2><p>点击 Profiles-&gt;Open Profiles</p><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/20200622104842.png" alt></p><p>左下角+添加新配置，选择command输入登陆服务器的名字</p><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/20200622104700.png" alt></p><p>在Regular Eexpression中，填写你要匹配的正则表达式，Trigger顾名思义，屏幕上看到你填入的某些字串执行后面的Action，这里的动作就是send Text输入密码，在Parameters中填写你的密码，最后增加一个\n字符。\n是回车，这就相当于你输入了密码，并按了下回车。最后，要把Instant的复选框选中。</p><p>这时，你双击你的profile，就可以自动登录了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;iterm2触发器设置trigger自动登陆远程服务器&quot;&gt;&lt;a href=&quot;#iterm2触发器设置trigger自动登陆远程服务器&quot; class=&quot;headerlink&quot; title=&quot;iterm2触发器设置trigger自动登陆远程服务器&quot;&gt;&lt;/a&gt;iterm
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>matlab调用c语言</title>
    <link href="http://yoursite.com/2020/06/17/matlab%E8%B0%83%E7%94%A8c%E8%AF%AD%E8%A8%80/"/>
    <id>http://yoursite.com/2020/06/17/matlab调用c语言/</id>
    <published>2020-06-17T03:50:49.000Z</published>
    <updated>2020-06-17T03:51:20.802Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1、-下载MinGW-w64"><a href="#1、-下载MinGW-w64" class="headerlink" title="1、 下载MinGW-w64"></a>1、 下载MinGW-w64</h4><p>(1) 用已有的MinGW-w64，则新增环境变量<code>MW_MINGW64_LOC = D:\MinGW-w64\mingw64</code></p><p>(2) 若电脑中没有MinGW-w64，则下载TDM-GCC（注意看清64位还是32位），新增环境变量<code>MW_MINGW64_LOC = C:\TDM-GCC-64 （ [http://tdm-gcc.tdragon.net/download ](http://tdm-gcc.tdragon.net/download)）</code></p><ul><li><p>PS: Matlab中设置环境变量 setenv(‘MW_MINGW64_LOC’,’D:\MinGW-w64\mingw64’)（临时）</p><p>验证是否设置成功 <code>getenv(&#39;MW_MINGW64_LOC&#39;)</code></p></li></ul><h4 id="2、-安装mex"><a href="#2、-安装mex" class="headerlink" title="2、 安装mex"></a>2、 安装mex</h4><p>mex –setup</p><h4 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h4><p>matlab默认的程序文件是.m文件，但有很多情况下需要用matlab调用C语言程序，归纳起来有以几种情况：</p><p>1、matlab程序中的某模块非常耗时，改用C语言编写可以提高执行速度。</p><p>2、现有成熟算法已经用C语言编写完成，但是matlab程序需要调用其中的某一算法，但不想改写成为.m程序</p><p>3、从.m程序可以直接获取源代码，为了保护知识产权，作者希望只提供接口，和库函数，供使用者调用。类似于Windows系统动态链接库（.dll）</p><p>Mex文件其实是一种动态链接库，旧版本Matlab可以直接调用.dll，新版本要调用.mexw32或.mexw64文件</p><p>Windows 64位 后缀名为mexw64</p><p>Wincdows32位 后缀名为mexw32</p><p>Linux 64位 后缀名为 mexaw64</p><h4 id="使用mex时的注意事项："><a href="#使用mex时的注意事项：" class="headerlink" title="使用mex时的注意事项："></a>使用mex时的注意事项：</h4><p>1.MATLAB调用mex接口时，将参数个数及参数指针传入接口子程序，由接口子程序完成指针和调用变量的赋值、输出数据的内存空间分配，接口子程序再将参数指针或经过赋值的变量作为参数传递给C的计算子程序，完成调用过程。调用时应注意指针所指对象的正确性，为处理正确最好做相应的强制类型转换。</p><p>2.mex并不便于调试，因此应在C的IDE中用测试集调试后再放入mex文件中。</p><p>3.MATLAB中指向二维及高维数组的指针递增方式是按行递增的，而C中是按列递增的，因此计算index时要注意位置。</p><p>Matlab R2018a之后，复数的实部和虚部一起存储</p><p>Matlab R2017及之前，复数的实部和虚部分开存储</p><p>暂时默认使用分开存储方式，因此在高版本中若使用到了复数，则编译时需指定matlab版本</p><h4 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h4><p>MinGW MinGW-w64 TDM-GCC等工具链之间的区别与联系</p><p><a href="https://blog.csdn.net/crazycoder8848/article/details/25164471" target="_blank" rel="noopener">https://blog.csdn.net/crazycoder8848/article/details/25164471</a></p><p>matlab调用c的示例程序</p><p><a href="https://blog.csdn.net/qq_39709535/article/details/84593767" target="_blank" rel="noopener">https://blog.csdn.net/qq_39709535/article/details/84593767</a></p><p>matlab和C混合编程科普性文章*</p><p><a href="https://zlearning.netlify.com/communication/matlab/matlabandc.html" target="_blank" rel="noopener">https://zlearning.netlify.com/communication/matlab/matlabandc.html</a></p><p><a href="https://max.book118.com/html/2017/0618/116360759.shtm" target="_blank" rel="noopener">https://max.book118.com/html/2017/0618/116360759.shtm</a></p><p>matlab 不同版本复数存储问题</p><p><a href="https://ww2.mathworks.cn/help/matlab/matlab_external/upgrade-mex-files-to-use-interleaved-complex.html" target="_blank" rel="noopener">https://ww2.mathworks.cn/help/matlab/matlab_external/upgrade-mex-files-to-use-interleaved-complex.html</a></p><p><a href="https://ww2.mathworks.cn/help/matlab/matlab_external/matlab-support-for-interleaved-complex.html" target="_blank" rel="noopener">https://ww2.mathworks.cn/help/matlab/matlab_external/matlab-support-for-interleaved-complex.html</a></p><p><a href="https://stackoverflow.com/questions/57167153/issues-with-a-mex-mxgetdoubles-function-when-compiling" target="_blank" rel="noopener">https://stackoverflow.com/questions/57167153/issues-with-a-mex-mxgetdoubles-function-when-compiling</a></p><p>matlab官方mex帮助文档</p><p><a href="https://ww2.mathworks.cn/help/matlab/ref/mex.html" target="_blank" rel="noopener">https://ww2.mathworks.cn/help/matlab/ref/mex.html</a></p><p>查询matlab为mexFunction提供的函数</p><p><a href="https://ww2.mathworks.cn/help/matlab/cc-mx-matrix-library.html?s_tid=CRUX_lftnav" target="_blank" rel="noopener">https://ww2.mathworks.cn/help/matlab/cc-mx-matrix-library.html?s_tid=CRUX_lftnav</a></p><p><a href="https://zlearning.netlify.com/communication/matlab/matlabcmexapi" target="_blank" rel="noopener">https://zlearning.netlify.com/communication/matlab/matlabcmexapi</a></p><p>VS code 从入门到进阶</p><p><a href="https://www.zhihu.com/lives/1124809477068849152" target="_blank" rel="noopener">https://www.zhihu.com/lives/1124809477068849152</a></p><p><img src="file:////private/var/folders/7j/qh4fmyw12rjddnn3y_mp961r0000gn/T/com.kingsoft.wpsoffice.mac/wps-zhipeng/ksohtml/wps8VXzSN.jpg" alt="img"> </p><p><img src="file:////private/var/folders/7j/qh4fmyw12rjddnn3y_mp961r0000gn/T/com.kingsoft.wpsoffice.mac/wps-zhipeng/ksohtml/wpshZPRvC.jpg" alt="img"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1、-下载MinGW-w64&quot;&gt;&lt;a href=&quot;#1、-下载MinGW-w64&quot; class=&quot;headerlink&quot; title=&quot;1、 下载MinGW-w64&quot;&gt;&lt;/a&gt;1、 下载MinGW-w64&lt;/h4&gt;&lt;p&gt;(1) 用已有的MinGW-w64，则新增环
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>hive操作和踩坑指北</title>
    <link href="http://yoursite.com/2020/06/09/hive%E6%93%8D%E4%BD%9C%E5%92%8C%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8C%97/"/>
    <id>http://yoursite.com/2020/06/09/hive操作和踩坑指北/</id>
    <published>2020-06-09T03:04:53.000Z</published>
    <updated>2021-06-24T09:14:32.672Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hive操作"><a href="#hive操作" class="headerlink" title="hive操作"></a>hive操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">1.创建数据库</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">create database myhive1;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">2.使用数据库</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">use myhive1;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">3.查询现在使用的数据库</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">select current_database;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">4.创建表结构</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">create table student(id int, name string comment <span class="string">'33标签名字'</span>, sex string, age int, department string) </span></span><br><span class="line">    &gt;row format delimited fields terminated by ",";</span><br><span class="line"><span class="meta">#</span><span class="bash">copy表但不copy数据    </span></span><br><span class="line">CREATE TABLE yourtable </span><br><span class="line">LIKE table2; </span><br><span class="line"><span class="meta">#</span><span class="bash">更常用如下，和其他语句连用记得分号隔开</span></span><br><span class="line">create table if not exists $&#123;tableName&#125;;</span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span><span class="bash">5.向表中加载数据，注意inpath后跟字符串要是变量<span class="string">'$1'</span></span></span><br><span class="line">hive -e "load data local inpath 'ud2' into table 33tmptb partition(dt=20170919);"#从文件中追加</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">insert方式需要插入的列数严格对齐不能用select *，且overwrite不会重写load进去的数据</span></span><br><span class="line"><span class="meta">#</span><span class="bash">从select中追加，若重写把Into改为overwrite</span></span><br><span class="line">set hive.exec.dynamic.partition=true;</span><br><span class="line">set hive.exec.dynamic.partition.mode=nonstrict;</span><br><span class="line">insert into table 33tmptb partition(dt=25) select name from load_data_local;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">6.查询表</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash"> <span class="built_in">set</span> hive.fetch.task.conversion=more;</span></span><br><span class="line">这句话不经过mapreduce大大加速了查询速度</span><br><span class="line">select * from student limit 10;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">7.查询表结构</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash"> describe student;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">8.查询详细的表结构</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">describe formatted student;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">9.cast建立子表</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">create table student_ctas as select * from student <span class="built_in">where</span> id &lt;95012;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">10. 查询创建表语句</span></span><br><span class="line">hive &gt; show create table TBname</span><br><span class="line"><span class="meta">#</span><span class="bash">*****这里有个坑， `dt` string)中的`符号要删掉</span></span><br><span class="line">hdfs -du -h</span><br><span class="line"><span class="meta">#</span><span class="bash">11. 删除表</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">DROP TABLE IF EXISTS employee</span></span><br><span class="line"><span class="meta">#</span><span class="bash">12. 删除某个分区</span></span><br><span class="line">hive -e "alter table tablename drop partition (dt='20200804')"</span><br><span class="line"><span class="meta">#</span><span class="bash">13. 更改表名</span></span><br></pre></td></tr></table></figure><blockquote><p>在实际情况中，表的输出结果可能太多，不适于显示在控制台上，这时候，将Hive的查询输出结果直接存在一个新的表中是非常方便的，我们称这种情况为CTAS（create table 表名 as select 列名 from 查询的表名）</p></blockquote><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><h5 id="第一种：IF"><a href="#第一种：IF" class="headerlink" title="第一种：IF"></a><strong>第一种：IF</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Example: IF(1=1, &apos;working&apos;, &apos;not working&apos;) returns &apos;working&apos;</span><br></pre></td></tr></table></figure><h5 id="第二种：COALESCE"><a href="#第二种：COALESCE" class="headerlink" title="第二种：COALESCE"></a><strong>第二种：COALESCE</strong></h5><p>这个词优点不好记啊。</p><p>它返回第一个不为NULL的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Example: COALESCE(NULL,NULL,5,NULL,4) returns 5</span><br></pre></td></tr></table></figure><h5 id="第三种：CASE-WHEN-THEN-END"><a href="#第三种：CASE-WHEN-THEN-END" class="headerlink" title="第三种：CASE WHEN THEN END"></a><strong>第三种：CASE WHEN THEN END</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CASE   [ expression ]</span><br><span class="line">       WHEN condition1 THEN result1</span><br><span class="line">       WHEN condition2 THEN result2</span><br><span class="line">       ...</span><br><span class="line">       WHEN conditionn THEN resultn</span><br><span class="line">       ELSE result</span><br><span class="line">END</span><br></pre></td></tr></table></figure><h3 id="hive-transform使用"><a href="#hive-transform使用" class="headerlink" title="hive transform使用"></a>hive transform使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hive -e "add file logging.zip;add file gensim.zip;add file deal12.py;add file word2vec_model_20200325;</span><br><span class="line">select transform(a.uid, a.device)</span><br><span class="line">using 'deal12.py'</span><br><span class="line">as (aaa, bbb,p3,p4,p5,p6,p7,p8,p9,p10)</span><br><span class="line">from (</span><br><span class="line">select uid,device from</span><br><span class="line">gh_user_feature_daily where dt='20200606' and usertype='uid' limit 30)as a"</span><br></pre></td></tr></table></figure><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from后应该是另外一个select语句，用于Transform的输入，最好是一一对应的，否则会出错</span><br></pre></td></tr></table></figure></li><li><p>插入时会出现较多NULL扰乱目标表，后发现transform只能以’\t’分隔，而print自动末尾+换行符此换行符transform处理为单独的一行插入NULL</p></li><li></li></ul><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/20200619102135.png" alt></p><p>用这个job后的数字ID可以查询error信息，$1的地方传入ID号，grep后改为你要查的字段</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn logs -applicationId application_$1 &gt; logafteraddfile</span><br><span class="line">cat logafteraddfile | grep deal</span><br></pre></td></tr></table></figure><h3 id="get-json-object使用"><a href="#get-json-object使用" class="headerlink" title="get_json_object使用"></a>get_json_object使用</h3><p>get_json_object(string json_string, string path)</p><p>说明：<br>第一个参数填写json对象变量，第二个参数使用$表示json变量标识，然后用 . 或 [] 读取对象或数组；如果输入的json字符串无效，那么返回NULL。<br>每次只能返回一个数据项。</p><p>举例：<br>data 为 test表中的字段，数据结构如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">data =</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"store"</span>:</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"fruit"</span>:[&#123;<span class="attr">"weight"</span>:<span class="number">8</span>,<span class="attr">"type"</span>:<span class="string">"apple"</span>&#125;, &#123;<span class="attr">"weight"</span>:<span class="number">9</span>,<span class="attr">"type"</span>:<span class="string">"pear"</span>&#125;],  </span><br><span class="line">         <span class="attr">"bicycle"</span>:&#123;<span class="attr">"price"</span>:<span class="number">19.95</span>,<span class="attr">"color"</span>:<span class="string">"red"</span>&#125;</span><br><span class="line">         &#125;, </span><br><span class="line"> <span class="attr">"email"</span>:<span class="string">"amy@only_for_json_udf_test.net"</span>, </span><br><span class="line"> <span class="attr">"owner"</span>:<span class="string">"amy"</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.get单层值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">hive&gt;</span><span class="bash"> select  get_json_object(data, <span class="string">'$.owner'</span>) from <span class="built_in">test</span>;</span></span><br><span class="line">结果：amy</span><br><span class="line"></span><br><span class="line">2.get多层值.</span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash"> select  get_json_object(data, <span class="string">'$.store.bicycle.price'</span>) from <span class="built_in">test</span>;</span></span><br><span class="line">结果：19.95</span><br><span class="line"></span><br><span class="line">3.get数组值[]</span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash"> select  get_json_object(data, <span class="string">'$.store.fruit[0]'</span>) from <span class="built_in">test</span>;</span></span><br><span class="line">结果：&#123;"weight":8,"type":"apple"&#125;</span><br></pre></td></tr></table></figure><p>自己使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hive -e "create table tmpud as select  get_json_object(device, '$.push_short_interest_tag') from gh_user_feature_daily where dt='20200606' and usertype='uid' limit 10"</span><br></pre></td></tr></table></figure><h3 id="输入一行拆多行的lateral-view和explode"><a href="#输入一行拆多行的lateral-view和explode" class="headerlink" title="输入一行拆多行的lateral view和explode()"></a>输入一行拆多行的lateral view和explode()</h3><p>explode函数输入被拆行，需要是array，<strong>split</strong>（’[1,2,3]’， ‘,’）可以把String’[1,2,3]’分隔为array[1,2,3]，一些坑</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hive -e "select uid,$1 from tmp12</span><br><span class="line">lateral view explode(split($1,',')) 表别名 AS 列别名;"</span><br><span class="line">这种结果会是$1列和uid左连接</span><br><span class="line"></span><br><span class="line">输入:</span><br><span class="line">uid $1</span><br><span class="line">1[true,false]</span><br><span class="line">输出:</span><br><span class="line">uid true</span><br><span class="line">uid false</span><br></pre></td></tr></table></figure><p>正确写法，查询explode后的列别名保留</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hive -e "select uid,c3 from tmp12 lateral view explode(split($1, ',')) virtualtbn表别名 as c3"</span><br></pre></td></tr></table></figure><h5 id="一、explode"><a href="#一、explode" class="headerlink" title="一、explode()"></a>一、explode()</h5><p>这个函数大多数人都接触过，将一行数据转换成列数据，可以用于array和map类型的数据。</p><p>用于array的语法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select explode(arraycol) <span class="keyword">as</span> newcol <span class="keyword">from</span> tablename;</span><br></pre></td></tr></table></figure><ul><li>explode()：函数中的参数传入的是arrary数据类型的列名。</li><li>newcol：是给转换成的列命名一个新的名字，用于代表转换之后的列名。</li><li>tablename：原表名。</li></ul><p>用于map的语法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select explode(mapcol) <span class="keyword">as</span> (keyname,valuename) <span class="keyword">from</span> tablename;</span><br></pre></td></tr></table></figure><ul><li>explode()：函数中的参数传入的是map数据类型的列名。</li><li>由于map是kay-value结构的，所以它在转换的时候会转换成两列，一列是kay转换而成的，一列是value转换而成的。</li><li>keyname：表示key转换成的列名称，用于代表key转换之后的列名。</li><li>valuename：表示value转换成的列名称，用于代表value转换之后的列名称。</li></ul><p>注意：这两个值需要在as之后用括号括起来然后以逗号分隔。</p><p>以上为explode()函数的用法，此函数存在局限性：</p><ul><li>其一：不能关联原有的表中的其他字段。</li><li>其二：不能与group by、cluster by、distribute by、sort by联用。</li><li>其三：不能进行UDTF嵌套。</li><li>其四：不允许选择其他表达式。</li></ul><h5 id="二、lateral-view"><a href="#二、lateral-view" class="headerlink" title="二、lateral view"></a>二、lateral view</h5><p>lateral view是Hive中提供给UDTF的结合，它可以解决UDTF不能添加额外的select列的问题。</p><p>lateral view其实就是用来和想类似explode这种UDTF函数联用的，lateral view会将UDTF生成的结果放到一个虚拟表中，然后这个虚拟表会和输入行进行join来达到连接UDTF外的select字段的目的。</p><h5 id="格式一"><a href="#格式一" class="headerlink" title="格式一"></a>格式一</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lateral view udtf(expression) tableAlias <span class="keyword">as</span> columnAlias (,columnAlias)*</span><br></pre></td></tr></table></figure><ul><li>lateral view在UDTF前使用，表示连接UDTF所分裂的字段。</li><li>UDTF(expression)：使用的UDTF函数，例如explode()。</li><li>tableAlias：表示UDTF函数转换的虚拟表的名称。</li><li>columnAlias：表示虚拟表的虚拟字段名称，如果分裂之后有一个列，则写一个即可；如果分裂之后有多个列，按照列的顺序在括号中声明所有虚拟列名，以逗号隔开。</li></ul><h5 id="格式二"><a href="#格式二" class="headerlink" title="格式二"></a>格式二</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> basetable (lateral view)*</span><br></pre></td></tr></table></figure><ul><li>在from子句中使用，一般和格式一搭配使用，这个格式只是说明了lateral view的使用位置。</li><li>from子句后面也可以跟多个lateral view语句，使用空格间隔就可以了。</li></ul><h5 id="格式三"><a href="#格式三" class="headerlink" title="格式三"></a>格式三</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> basetable (lateral view outer)*</span><br></pre></td></tr></table></figure><p>它比格式二只是多了一个outer，这个outer的作用是在UDTF转换列的时候将其中的空也给展示出来，UDTF默认是忽略输出空的，加上outer之后，会将空也输出，显示为NULL。这个功能是在Hive0.12是开始支持的。</p><p>#### </p><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><h4 id="1-Order-By和-Sort-BY"><a href="#1-Order-By和-Sort-BY" class="headerlink" title="1.Order By和 Sort BY"></a>1.Order By和 Sort BY</h4><p>尽量不用order by。<br>ORDER BY 是全局排序，最终hadoop会把所有数据通过一个reducer，这样很可能会超过单个节点的磁盘和内存存储能力导致任务失败。<br>SORT BY 是局部排序，各个reducer各自排序，不保证全局有序<br>都可以使用升序asc，降序desc，缺省是asc</p><h4 id="2-含有SORT-BY的DISTRUBUTE-BY"><a href="#2-含有SORT-BY的DISTRUBUTE-BY" class="headerlink" title="2.含有SORT BY的DISTRUBUTE BY"></a>2.含有SORT BY的DISTRUBUTE BY</h4><p>DISTRIBUTE BY 可以控制map的输出在reducer中是如何划分的，如果不指定，默认是按哈希值进行均匀划分。可以手工指定键，以保证在这个键上的sort by是有序的。</p><p>使用order by会引发全局排序</p><p><code>select * from baidu_click order by click desc;</code></p><p>使用distribute和sort进行分组排序</p><p><code>select * from baidu_click distribute by 列名 sort by click desc;</code></p><p>distribute by + sort by就是该替代方案，被distribute by设定的字段为KEY，数据会被HASH分发到不同的reducer机器上，然后sort by会对同一个reducer机器上的每组数据进行局部排序。</p><h4 id="3-Group-By"><a href="#3-Group-By" class="headerlink" title="3. Group By"></a>3. <a href="https://www.huaweicloud.com/articles/c48969c9211a71d531e4773feb9148a0.html" target="_blank" rel="noopener">Group By</a></h4><ul><li>group by的作用是用来分组，表示按照某些字段的值进行分组，相同的值放到一起</li><li>GROUP BY X, Y意思是将所有具有相同X字段值和Y字段值的记录对应其他列数据放入一行，我们找同一学期报同一课程的总(count)人数，筛选条件是且的关系</li><li>一些没有聚合函数的字段必须要加到group by 后边，不和聚合函数使用<strong>可起到去重作用</strong>，即相同字段对应其他列放一行但不展示</li><li>通常和聚合函数sum,avg一起使用，一个Key就是一个逻辑上的group来分组操作，having联合使用在组内过滤，where是整个数据过滤</li><li>Select列表中的所有列必须是聚合列（SUM,MIN/MAX,AVG等）或是GROUP BY 子句中包括的列</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">输出</span><br><span class="line">Subject   学期   Attendee</span><br><span class="line">---------------------------------</span><br><span class="line">ITB001    1          John</span><br><span class="line">ITB001    1          Bob</span><br><span class="line">ITB001    1          Mickey</span><br><span class="line">ITB001    2          Jenny</span><br><span class="line">ITB001    2          James</span><br><span class="line">MKB114    1          John</span><br><span class="line">MKB114    1          Erica</span><br><span class="line"></span><br><span class="line">SELECT Subject, Count(*)</span><br><span class="line">FROM Subject_Selection</span><br><span class="line">GROUP BY Subject</span><br><span class="line"></span><br><span class="line">Subject    Count</span><br><span class="line">------------------------------</span><br><span class="line">ITB001     5</span><br><span class="line">MKB114     2</span><br><span class="line"></span><br><span class="line">GROUP BY Subject，学期</span><br><span class="line"></span><br><span class="line">Subject    Semester   Count</span><br><span class="line">------------------------------</span><br><span class="line">ITB001     1          3</span><br><span class="line">ITB001     2          2</span><br><span class="line">MKB114     1          2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hive操作&quot;&gt;&lt;a href=&quot;#hive操作&quot; class=&quot;headerlink&quot; title=&quot;hive操作&quot;&gt;&lt;/a&gt;hive操作&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>tfs模型加速之固化和转半精度</title>
    <link href="http://yoursite.com/2020/06/03/tfs%E6%A8%A1%E5%9E%8B%E5%9B%BA%E5%8C%96%E5%92%8C%E8%BD%AC%E5%8D%8A%E7%B2%BE%E5%BA%A6/"/>
    <id>http://yoursite.com/2020/06/03/tfs模型固化和转半精度/</id>
    <published>2020-06-03T06:38:34.000Z</published>
    <updated>2020-08-13T04:00:19.797Z</updated>
    
    <content type="html"><![CDATA[<h3 id="attention标点fp16和fp32速度对比"><a href="#attention标点fp16和fp32速度对比" class="headerlink" title="attention标点fp16和fp32速度对比"></a>attention标点fp16和fp32速度对比</h3><p>NVIDIA-SMI Driver Version: 410.104   CUDA Version: 10.0   使用TensorFlow Serving Docker方式</p><table><thead><tr><th style="text-align:left">model\batch</th><th style="text-align:left">length</th><th style="text-align:left">1</th><th style="text-align:left">8</th><th style="text-align:left">16</th><th style="text-align:left">32</th><th style="text-align:left">64</th><th style="text-align:left">128</th></tr></thead><tbody><tr><td style="text-align:left">fp32+freeze</td><td style="text-align:left">length64</td><td style="text-align:left">2.67ms</td><td style="text-align:left">3.95ms</td><td style="text-align:left">5.61ms</td><td style="text-align:left">10.30ms</td><td style="text-align:left">17.45ms</td><td style="text-align:left">33.21ms</td></tr><tr><td style="text-align:left">length128</td><td style="text-align:left">2.81ms</td><td style="text-align:left">6.06ms</td><td style="text-align:left">10.50ms</td><td style="text-align:left">17.70ms</td><td style="text-align:left">34.18ms</td><td style="text-align:left">65.86ms</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">fp16+freeze</td><td style="text-align:left">length64</td><td style="text-align:left">7.94ms</td><td style="text-align:left">3.13ms</td><td style="text-align:left">4.08ms</td><td style="text-align:left">5.36ms</td><td style="text-align:left">9.46ms</td><td style="text-align:left">16.18ms</td></tr><tr><td style="text-align:left">length128</td><td style="text-align:left">2.79ms</td><td style="text-align:left">4.05ms</td><td style="text-align:left">5.59ms</td><td style="text-align:left">9.44ms</td><td style="text-align:left">16.17ms</td><td style="text-align:left">31.35ms</td></tr></tbody></table><blockquote><p>freeze指固化后的模型，此处使用tfs方式，其他方式见[保存格式转换(<a href="https://blog.csdn.net/qq_43208303/article/details/106528606" target="_blank" rel="noopener">https://blog.csdn.net/qq_43208303/article/details/106528606</a>)</p></blockquote><p>NVIDIA-SMI Driver Version: 418.56    CUDA Version: 10.1   TensorFlow Version: 1.13（GPU）</p><table><thead><tr><th style="text-align:left">model\batch</th><th style="text-align:left">length</th><th style="text-align:left">1</th><th style="text-align:left">8</th><th style="text-align:left">16</th><th style="text-align:left">32</th><th style="text-align:left">64</th><th style="text-align:left">128</th></tr></thead><tbody><tr><td style="text-align:left">fp32+freeze</td><td style="text-align:left">length64</td><td style="text-align:left">4.7ms</td><td style="text-align:left">13.55ms</td><td style="text-align:left">21.47ms</td><td style="text-align:left">38.20ms</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">length128</td><td style="text-align:left">6.09ms</td><td style="text-align:left">27.52ms</td><td style="text-align:left">39.60ms</td><td style="text-align:left">98.16ms</td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">fp16+freeze</td><td style="text-align:left">length64</td><td style="text-align:left">7.94ms</td><td style="text-align:left">29.08ms</td><td style="text-align:left">49.44ms</td><td style="text-align:left">82.36ms</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">length128</td><td style="text-align:left">10.44ms</td><td style="text-align:left">54.47ms</td><td style="text-align:left">80.03ms</td><td style="text-align:left">170.35ms</td><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table><ul><li><p>由结果可知运算速度有大幅提升，且模型文件转换前fp32模型大小118M，转换后fp16模型大小74M；</p></li><li><p>实验结果直接跑GPU无加速甚至速度降低，对比同精度同batch和length下的tfs和cpu计算结果，考虑计算瓶颈占比过大，硬件计算方面fp32比fp16明显快更多；</p></li><li><p>而tfs速度加速明显，大batch下接近一倍，考虑模型大小降低和参数量大小降低，优化时间主要在数据读取方面；</p></li></ul><p>转换代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line"><span class="keyword">import</span> modeling</span><br><span class="line"><span class="keyword">from</span> modeling <span class="keyword">import</span> BertConfig</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.framework <span class="keyword">import</span> graph_util</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment">#存读取来的变量</span></span><br><span class="line">    weight_list = []</span><br><span class="line"><span class="comment">#1.要先有个图</span></span><br><span class="line">    loaded_graph = tf.Graph()</span><br><span class="line">    sconfig = tf.ConfigProto(log_device_placement=<span class="keyword">False</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.Session(graph=loaded_graph, config=sconfig) <span class="keyword">as</span> sess1:</span><br><span class="line">        <span class="comment">#2.要有会话，后导入tfs32位的savedmodel文件，导入ckpt也可以，加载了图结构就可以转换成其他保存格式，详见上一篇格式转换博客</span></span><br><span class="line">        tf.saved_model.loader.load(sess1, [tf.saved_model.tag_constants.SERVING], <span class="string">"/mnt/lustre02/jiangsu/aispeech/home/jbl01/80w_offline/cc/saved_model_no_freeze"</span>)</span><br><span class="line">        <span class="comment"># for op in loaded_graph.get_operations():</span></span><br><span class="line">        <span class="comment">#    print(op.name)</span></span><br><span class="line"><span class="comment">#3. 冻结变量，接下来可以保存成pb</span></span><br><span class="line">        frozen_graph_def = graph_util.convert_variables_to_constants(sess1,</span><br><span class="line">                                                                     tf.get_default_graph().as_graph_def(),</span><br><span class="line">                                                                     [<span class="string">'whichPun/output'</span>])<span class="comment">#注意此处是输出op得到名字</span></span><br><span class="line">        <span class="keyword">with</span> tf.gfile.FastGFile(<span class="string">'./punc_model/pb_model_fp32/graph.pb'</span>, mode=<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(frozen_graph_def.SerializeToString())</span><br><span class="line"><span class="comment">#32位的输入输出，可以从Module.input得到或者从图节点名字得到</span></span><br><span class="line">        inputs = sess1.graph.get_tensor_by_name(<span class="string">"inputs/input_ids:0"</span>)</span><br><span class="line">        print(inputs)</span><br><span class="line">        inputmask = sess1.graph.get_tensor_by_name(<span class="string">"inputs/input_mask:0"</span>)</span><br><span class="line">        print(inputmask)</span><br><span class="line"></span><br><span class="line">        pout = sess1.graph.get_tensor_by_name(<span class="string">"whichPun/output:0"</span>)</span><br><span class="line">        print(pout)</span><br><span class="line"></span><br><span class="line">        aaa = np.asarray([<span class="number">111</span>]).reshape((<span class="number">-1</span>, <span class="number">1</span>))</span><br><span class="line">        bbb = np.asarray([<span class="number">1</span>]).reshape((<span class="number">-1</span>, <span class="number">1</span>))</span><br><span class="line">        print(sess1.run([pout], feed_dict=&#123;inputs: aaa, inputmask: bbb&#125;))</span><br><span class="line"></span><br><span class="line">        ddd = sess1.run(sess1.graph.get_tensor_by_name(<span class="string">"bert/encoder/layer_1/attention/self/key/bias:0"</span>),feed_dict=&#123;inputs: aaa, inputmask: bbb&#125;)</span><br><span class="line">        print(<span class="string">"key bias in sess1 from tfs32"</span>, ddd)</span><br><span class="line">        print(<span class="string">"key bias astype to fp16"</span>, ddd.astype(np.float16))</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> tf.get_collection(tf.GraphKeys.VARIABLES):</span><br><span class="line">            <span class="comment">#if num==24:</span></span><br><span class="line">             <span class="comment">#   print("num in sess1:", sess1.run(v))</span></span><br><span class="line">            <span class="comment">#第24个变量bias转换时出现部分nan，所以此处打印未转换前的</span></span><br><span class="line">            print(sess1.run(v).shape)</span><br><span class="line">            <span class="comment">#读取从tfs里得到的32位变量转换成fp16存进去</span></span><br><span class="line">            weight_list.append(sess1.run(v).astype(np.float16))</span><br><span class="line">            <span class="comment">#32位存进去，后续改modeling里的定义类型强制转换也可以</span></span><br><span class="line">            <span class="comment">#weight_list.append(sess1.run(v))</span></span><br><span class="line">            num+=<span class="number">1</span></span><br><span class="line">            </span><br><span class="line">    model = BertModel(bert_config=<span class="string">"bert_config_online.json"</span>, ckpt=<span class="string">"/mnt/lustre02/jiangsu/aispeech/home/jbl01/80w_offline/cc/-1"</span>)</span><br><span class="line">    print(model.input_ids)</span><br><span class="line">    print(model.input_mask)</span><br><span class="line">    print(model.logit)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">       list_id = <span class="number">0</span></span><br><span class="line">       <span class="comment">#sess.run(tf.global_variables_initializer())</span></span><br><span class="line"><span class="comment">#key step===tf.global varibal init函数对变量初始化，注释掉用assign赋值</span></span><br><span class="line">       <span class="keyword">for</span> v <span class="keyword">in</span> tf.get_collection(tf.GraphKeys.VARIABLES):</span><br><span class="line">           print(list_id, v)</span><br><span class="line">           sess.run(tf.assign(v, weight_list[list_id]))</span><br><span class="line">           list_id += <span class="number">1</span></span><br><span class="line">       print(<span class="string">"weight_list[24]"</span>,weight_list[<span class="number">24</span>])</span><br><span class="line">       </span><br><span class="line">       <span class="comment">#1. 保存为ckpt 两行</span></span><br><span class="line">       <span class="comment">#saver = tf.train.Saver()</span></span><br><span class="line"></span><br><span class="line">       ccc = sess.run([model.logit],</span><br><span class="line">                           feed_dict=&#123;model.input_ids: aaa, model.input_mask: bbb&#125;)</span><br></pre></td></tr></table></figure><p>转换完在 同样的sess下保存即可(不是sess1)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">#2. 保存为pb 在sess中两行</span></span><br><span class="line">   frozen_graph_def = graph_util.convert_variables_to_constants(sess,</span><br><span class="line">                                                                tf.get_default_graph().as_graph_def(),</span><br><span class="line">                                                                [<span class="string">'whichPun/output'</span>]</span><br><span class="line">                                                                    )</span><br><span class="line"><span class="comment">#预先读取一个需要新建空白文件</span></span><br><span class="line">   <span class="keyword">with</span> tf.gfile.FastGFile(<span class="string">'./punc_model/pb_model_fp16/graph.pb'</span>, mode=<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">       f.write(frozen_graph_def.SerializeToString())</span><br><span class="line"></span><br><span class="line">    <span class="comment">#3. 保存为tfs modle</span></span><br><span class="line">   <span class="keyword">with</span> tf.Graph().as_default() <span class="keyword">as</span> graph:</span><br><span class="line">   <span class="comment">#===========模型固化import frozen_graph_def即可</span></span><br><span class="line">       tf.import_graph_def(frozen_graph_def, name=<span class="string">""</span>, )</span><br><span class="line">       <span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">           export_path = <span class="string">"./punc_model/tfs_model_fp16/"</span></span><br><span class="line">           <span class="keyword">if</span> export_path:</span><br><span class="line">               os.system(<span class="string">"rm -rf "</span> + export_path)</span><br><span class="line">               <span class="comment"># 构造定义一个builder，并制定模型输出路径</span></span><br><span class="line">               builder = tf.saved_model.builder.SavedModelBuilder(export_path)</span><br><span class="line">               <span class="comment"># 声明模型的input和output</span></span><br><span class="line">               inids = tf.saved_model.utils.build_tensor_info(model.input_ids)</span><br><span class="line">               inmask = tf.saved_model.utils.build_tensor_info(model.input_mask)</span><br><span class="line">               poutput = tf.saved_model.utils.build_tensor_info(model.logit)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">               <span class="comment"># signature_def将输入输出信息进行封装，在构建模型阶段可以随便给tensor命名</span></span><br><span class="line">               prediction_signature = (</span><br><span class="line">                   tf.saved_model.signature_def_utils.build_signature_def(</span><br><span class="line">                       inputs=&#123;<span class="string">'input'</span>: inids, <span class="string">'mask'</span>: inmask&#125;,</span><br><span class="line">                       outputs=&#123;<span class="string">'punc_output'</span>: poutput&#125;,</span><br><span class="line">                       method_name=tf.saved_model.signature_constants.PREDICT_METHOD_NAME))</span><br><span class="line">               <span class="comment"># 导入graph与变量信息</span></span><br><span class="line">               builder.add_meta_graph_and_variables(</span><br><span class="line">                   sess, [tf.saved_model.tag_constants.SERVING],</span><br><span class="line">                   signature_def_map=&#123;</span><br><span class="line">                       <span class="string">'ac_forward'</span>: prediction_signature,</span><br><span class="line">                   &#125;)</span><br><span class="line"></span><br><span class="line">               builder.save()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;attention标点fp16和fp32速度对比&quot;&gt;&lt;a href=&quot;#attention标点fp16和fp32速度对比&quot; class=&quot;headerlink&quot; title=&quot;attention标点fp16和fp32速度对比&quot;&gt;&lt;/a&gt;attention标点fp1
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>tensorflow的三种保存格式相互转换</title>
    <link href="http://yoursite.com/2020/05/21/tensorflow%E7%9A%84%E4%B8%89%E7%A7%8D%E4%BF%9D%E5%AD%98%E6%A0%BC%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/05/21/tensorflow的三种保存格式总结/</id>
    <published>2020-05-21T08:46:26.000Z</published>
    <updated>2020-06-03T09:16:01.460Z</updated>
    
    <content type="html"><![CDATA[<h3 id="首先三种模型导出："><a href="#首先三种模型导出：" class="headerlink" title="首先三种模型导出："></a><strong>首先三种模型导出：</strong></h3><ul><li><strong>tf.train.Saver()</strong></li></ul><p>用于保存和恢复Variable。它可以非常方便的保存当前模型的变量或者倒入之前训练好的变量。一个最简单的运用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">saver = tf.train.Saver()</span><br><span class="line"># Save the variables to disk.</span><br><span class="line">saver.save(sess, &quot;/tmp/test.ckpt&quot;)</span><br><span class="line"># Restore variables from disk.</span><br><span class="line">saver.restore(sess, &quot;/tmp/test.ckpt&quot;)</span><br></pre></td></tr></table></figure><h4 id="1-ckpt格式"><a href="#1-ckpt格式" class="headerlink" title="1. ckpt格式"></a>1. ckpt格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#saver.save(sess, &apos;../tf-model/&apos;, global_step=1, write_meta_graph=True)</span><br></pre></td></tr></table></figure><h4 id="2-Pb格式"><a href="#2-Pb格式" class="headerlink" title="2. Pb格式"></a>2. Pb格式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">"whichPun"</span>):</span><br><span class="line">      task_2 = tf.layers.dense(bert_output, units=<span class="number">5</span>, activation=<span class="keyword">None</span>, trainable=<span class="keyword">False</span>)</span><br><span class="line">      print(<span class="string">"bert_output== "</span>, task_2)</span><br><span class="line">      task_2 = tf.cast(task_2, tf.float32)</span><br><span class="line">      self.logit = tf.reshape(task_2, [<span class="number">-1</span>, self.input_shape[<span class="number">1</span>], <span class="number">5</span>], name=<span class="string">'output'</span>)</span><br></pre></td></tr></table></figure><p>在输出的scope离找到输出名字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#2. 保存为pb 在sess中两行</span></span><br><span class="line">frozen_graph_def = graph_util.convert_variables_to_constants(sess,</span><br><span class="line">                                                             tf.get_default_graph().as_graph_def(),</span><br><span class="line">                                                             [<span class="string">'whichPun/output'</span>] )<span class="comment">#注意此处是输出名字 为list才可以</span></span><br><span class="line"><span class="keyword">with</span> tf.gfile.FastGFile(<span class="string">'graph.pb'</span>, mode=<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(frozen_graph_def.SerializeToString())</span><br></pre></td></tr></table></figure><h4 id="3-tfs格式Saved-model模块"><a href="#3-tfs格式Saved-model模块" class="headerlink" title="3. tfs格式Saved_model模块"></a>3. tfs格式<a href="https://blog.csdn.net/weixin_41137655/article/details/99547518" target="_blank" rel="noopener">Saved_model模块</a></h4><p><code>saved_model_cli show --dir ./6 --all</code></p><p>Exporter 的基本使用方式是:</p><p>1）传入一个Saver实例；</p><p>2）调用init，定义模型的graph以及input/output</p><p>3）使用Exporter导出模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">#3. 保存为tfs modle</span></span><br><span class="line">       <span class="keyword">with</span> tf.Graph().as_default() <span class="keyword">as</span> graph:</span><br><span class="line">           tf.import_graph_def(frozen_graph_def, name=<span class="string">""</span>, )</span><br><span class="line">           <span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">               export_path = <span class="string">"savedmodel"</span></span><br><span class="line">               <span class="keyword">if</span> export_path:</span><br><span class="line">                   os.system(<span class="string">"rm -rf "</span> + export_path)</span><br><span class="line">                   <span class="comment"># 恢复指定的tensor</span></span><br><span class="line">                   builder = tf.saved_model.builder.SavedModelBuilder(export_path)</span><br><span class="line">                   inids = tf.saved_model.utils.build_tensor_info(model.input_ids)</span><br><span class="line">                   inmask = tf.saved_model.utils.build_tensor_info(model.input_mask)</span><br><span class="line">                   poutput = tf.saved_model.utils.build_tensor_info(model.logit)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                   <span class="comment"># signature_def将输入输出信息进行封装，在构建模型阶段可以随便给tensor命名</span></span><br><span class="line">                   prediction_signature = (</span><br><span class="line">                       tf.saved_model.signature_def_utils.build_signature_def(</span><br><span class="line">                           inputs=&#123;<span class="string">'input'</span>: inids, <span class="string">'mask'</span>: inmask&#125;,</span><br><span class="line">                           outputs=&#123;<span class="string">'punc_output'</span>: poutput&#125;,</span><br><span class="line">                           method_name=tf.saved_model.signature_constants.PREDICT_METHOD_NAME))</span><br><span class="line">                   <span class="comment"># 导入graph与变量信息</span></span><br><span class="line">                   builder.add_meta_graph_and_variables(</span><br><span class="line">                       sess, [tf.saved_model.tag_constants.SERVING],</span><br><span class="line">                       signature_def_map=&#123;</span><br><span class="line">                           <span class="string">'ac_forward'</span>: prediction_signature,</span><br><span class="line">                       &#125;)</span><br><span class="line"></span><br><span class="line">                   builder.save()</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="模型相互转换"><a href="#模型相互转换" class="headerlink" title="模型相互转换"></a>模型相互转换</h3><h4 id="ckpt2pb-py"><a href="#ckpt2pb-py" class="headerlink" title="ckpt2pb.py"></a>ckpt2pb.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line">sess = tf.Session(config=tf.ConfigProto(allow_soft_placement=<span class="keyword">True</span>))</span><br><span class="line">saver = tf.train.import_meta_graph(argv[<span class="number">1</span>] + <span class="string">'-1.meta'</span>, clear_devices=<span class="keyword">True</span>)</span><br><span class="line">ckpt_model_path = argv[<span class="number">1</span>]</span><br><span class="line">saver.restore(sess, tf.train.latest_checkpoint(ckpt_model_path))</span><br><span class="line"></span><br><span class="line">graph = tf.get_default_graph()</span><br><span class="line">input_graph_def = graph.as_graph_def()</span><br><span class="line">output_graph_def = tf.graph_util.convert_variables_to_constants(</span><br><span class="line">          sess,</span><br><span class="line">            input_graph_def,</span><br><span class="line">           <span class="comment"># ['smooth/smooth_output', 'whichPun/whichPun_output'] # We split on comma for convenience</span></span><br><span class="line">            <span class="comment">#['smooth/output', 'whichPun/output'] # We split on comma for convenience</span></span><br><span class="line">            <span class="comment">#['smooth/smooth_output'] # We split on comma for convenience</span></span><br><span class="line">            <span class="comment">#['whichPun/whichPun_output'] # We split on comma for convenience</span></span><br><span class="line">            [<span class="string">'whichPun/output'</span>] <span class="comment"># We split on comma for convenience</span></span><br><span class="line">              )</span><br><span class="line"><span class="comment"># # Finally we serialize and dump the output graph to the filesystem</span></span><br><span class="line"><span class="keyword">with</span> tf.gfile.GFile(argv[<span class="number">2</span>], <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">  f.write(output_graph_def.SerializeToString())</span><br></pre></td></tr></table></figure><h4 id="pb2tfs-py"><a href="#pb2tfs-py" class="headerlink" title="pb2tfs.py"></a>pb2tfs.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.platform <span class="keyword">import</span> gfile</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tensorflow.python.framework.graph_util <span class="keyword">import</span> convert_variables_to_constants</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.framework <span class="keyword">import</span> graph_util</span><br><span class="line"></span><br><span class="line">g1 = tf.Graph()</span><br><span class="line"><span class="keyword">with</span> g1.as_default() <span class="keyword">as</span> g1:</span><br><span class="line">    output_graph_def = tf.GraphDef()</span><br><span class="line">    <span class="keyword">with</span> gfile.FastGFile(argv[<span class="number">1</span>], <span class="string">"rb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        output_graph_def.ParseFromString(f.read())</span><br><span class="line">        _ = tf.import_graph_def(output_graph_def, name=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">sess = tf.Session(graph=g1)</span><br><span class="line"></span><br><span class="line">input = sess.graph.get_tensor_by_name(<span class="string">"inputs/input_ids:0"</span>)</span><br><span class="line">word_size = sess.graph.get_tensor_by_name(<span class="string">"inputs/input_mask:0"</span>)</span><br><span class="line">output = sess.graph.get_tensor_by_name(<span class="string">"whichPun/output:0"</span>)</span><br><span class="line">print(output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tf.import_graph_def(output_graph_def, name=<span class="string">""</span>, )</span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    <span class="comment"># 保存图模型</span></span><br><span class="line">    export_path = <span class="string">"savedmodel"</span></span><br><span class="line">    <span class="keyword">if</span>  export_path:</span><br><span class="line">        os.system(<span class="string">"rm -rf "</span> + export_path)</span><br><span class="line"></span><br><span class="line">    builder = tf.saved_model.builder.SavedModelBuilder(export_path)</span><br><span class="line">    data_in = tf.saved_model.utils.build_tensor_info(input)</span><br><span class="line">    data_in2 = tf.saved_model.utils.build_tensor_info(word_size)</span><br><span class="line">    data_out = tf.saved_model.utils.build_tensor_info(output)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#signature_def将输入输出信息进行封装，在构建模型阶段可以随便给tensor命名</span></span><br><span class="line">    prediction_signature = (</span><br><span class="line">        tf.saved_model.signature_def_utils.build_signature_def(</span><br><span class="line">            inputs=&#123;<span class="string">'input'</span>: data_in, <span class="string">'mask'</span>:data_in2&#125;,</span><br><span class="line">            outputs=&#123;<span class="string">'output'</span>: data_out&#125;,</span><br><span class="line">            method_name=tf.saved_model.signature_constants.PREDICT_METHOD_NAME))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#导入graph与变量信息</span></span><br><span class="line">    builder.add_meta_graph_and_variables(</span><br><span class="line">        sess, [tf.saved_model.tag_constants.SERVING],</span><br><span class="line">        signature_def_map=&#123;</span><br><span class="line">            <span class="string">'ac_forward'</span>: prediction_signature,</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    builder.save()</span><br><span class="line"></span><br><span class="line">    os.system(<span class="string">"chmod -R 755 "</span> + export_path)</span><br></pre></td></tr></table></figure><h4 id="graph2tfs-py"><a href="#graph2tfs-py" class="headerlink" title="graph2tfs.py"></a>graph2tfs.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.framework.graph_util <span class="keyword">import</span> convert_variables_to_constants</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.framework <span class="keyword">import</span> graph_util</span><br><span class="line"></span><br><span class="line"><span class="comment"># output_node_names = "whichPun/output:0"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    saver = tf.train.import_meta_graph(argv[<span class="number">1</span>] + <span class="string">'/-1.meta'</span>)</span><br><span class="line">    saver.restore(sess, tf.train.latest_checkpoint(argv[<span class="number">1</span>]))</span><br><span class="line">    graph = sess.graph</span><br><span class="line"></span><br><span class="line">    graph_def = sess.graph.as_graph_def()</span><br><span class="line"></span><br><span class="line">    input_x = sess.graph.get_tensor_by_name(<span class="string">"inputs/input_ids:0"</span>)</span><br><span class="line">    print(input_x)</span><br><span class="line">    input_mask = sess.graph.get_tensor_by_name(<span class="string">"inputs/input_mask:0"</span>)</span><br><span class="line">    print(input_mask)</span><br><span class="line"></span><br><span class="line">    punc_out = sess.graph.get_tensor_by_name(<span class="string">"whichPun/output:0"</span>)</span><br><span class="line">    <span class="comment">#smooth_out = sess.graph.get_tensor_by_name("smooth/output:0")</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># sess.run(graph.get_operation_by_name('Inputs/string_to_index/hash_table/table_init'))</span></span><br><span class="line">    export_path = <span class="string">'saved_model_no_freeze'</span></span><br><span class="line">    <span class="comment"># 保存图模型</span></span><br><span class="line">    <span class="keyword">if</span> export_path:</span><br><span class="line">        os.system(<span class="string">"rm -rf "</span> + export_path)</span><br><span class="line"></span><br><span class="line">        builder = tf.saved_model.builder.SavedModelBuilder(export_path)</span><br><span class="line">        data_in = tf.saved_model.utils.build_tensor_info(input_x)</span><br><span class="line">        data_mask = tf.saved_model.utils.build_tensor_info(input_mask)</span><br><span class="line">        data_out_1 = tf.saved_model.utils.build_tensor_info(punc_out)</span><br><span class="line">        <span class="comment"># data_out_2 = tf.saved_model.utils.build_tensor_info(smooth_out)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#        table_init = tf.group(tf.tables_initializer(), name='legacy_init_op')</span></span><br><span class="line">        <span class="comment"># signature_def将输入输出信息进行封装，在构建模型阶段可以随便给tensor命名</span></span><br><span class="line">        prediction_signature = (</span><br><span class="line">            tf.saved_model.signature_def_utils.build_signature_def(</span><br><span class="line">                inputs=&#123;<span class="string">'input'</span>: data_in, <span class="string">'mask'</span>: data_mask&#125;,</span><br><span class="line">                outputs=&#123;<span class="string">'output'</span>: data_out_1&#125;,</span><br><span class="line">                method_name=tf.saved_model.signature_constants.PREDICT_METHOD_NAME))</span><br><span class="line">        <span class="comment"># 导入graph与变量信息</span></span><br><span class="line">        builder.add_meta_graph_and_variables(</span><br><span class="line">            sess, [tf.saved_model.tag_constants.SERVING],</span><br><span class="line">            signature_def_map=&#123;</span><br><span class="line">                <span class="string">'ac_forward'</span>: prediction_signature,</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        builder.save()</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line">    frozen_graph_def = graph_util.convert_variables_to_constants(sess,</span><br><span class="line">                                                                 graph_def,</span><br><span class="line">                                                                 [<span class="string">"whichPun/output"</span>])</span><br><span class="line">    <span class="comment"># 模型保存成.pb格式</span></span><br><span class="line">    <span class="keyword">with</span> tf.gfile.FastGFile(<span class="string">'graph.pb'</span>, mode=<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(frozen_graph_def.SerializeToString())</span><br><span class="line"></span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># writer = tf.summary.FileWriter("logs/", sess.graph)</span></span><br><span class="line">    <span class="keyword">for</span> op <span class="keyword">in</span> graph.get_operations():</span><br><span class="line">        print(op.name)</span><br></pre></td></tr></table></figure><h3 id="Tfs模型固化"><a href="#Tfs模型固化" class="headerlink" title="Tfs模型固化"></a>Tfs模型固化</h3><blockquote><p>sess里冻结图，然后import_graph_def()</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 固化模型</span></span><br><span class="line">frozen_graph_def = graph_util.convert_variables_to_constants(sess,</span><br><span class="line">                                                             tf.get_default_graph().as_graph_def(),</span><br><span class="line">                                                             [output_node_names])</span><br><span class="line"><span class="comment"># 模型保存成.pb格式</span></span><br><span class="line"><span class="comment"># with tf.gfile.FastGFile('graph.pb', mode='wb') as f:</span></span><br><span class="line"><span class="comment">#    f.write(frozen_graph_def.SerializeToString())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Graph().as_default() <span class="keyword">as</span> graph:</span><br><span class="line">    tf.import_graph_def(frozen_graph_def, name=<span class="string">""</span>, )</span><br><span class="line">    <span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">        graph = sess.graph</span><br><span class="line">        <span class="comment"># for op in graph.get_operations():</span></span><br><span class="line">        <span class="comment">#    print(op.name)</span></span><br><span class="line"></span><br><span class="line">        input_x = sess.graph.get_tensor_by_name(<span class="string">"inputs/input_ids"</span>)</span><br><span class="line">        input_leng = sess.graph.get_tensor_by_name(<span class="string">"inputs/input_mask:0"</span>)</span><br><span class="line">        final_out = sess.graph.get_tensor_by_name(<span class="string">"whichPun/output:0"</span>)</span><br><span class="line">        print(<span class="string">'out1'</span>, final_out)</span><br><span class="line"></span><br><span class="line">        export_path = <span class="string">"saved_model"</span></span><br><span class="line">        <span class="comment"># 保存图模型</span></span><br><span class="line">        <span class="keyword">if</span> export_path:</span><br><span class="line">            os.system(<span class="string">"rm -rf "</span> + export_path)</span><br><span class="line"></span><br><span class="line">            builder = tf.saved_model.builder.SavedModelBuilder(export_path)</span><br><span class="line">            data_in = tf.saved_model.utils.build_tensor_info(input_x)</span><br><span class="line">            data_length = tf.saved_model.utils.build_tensor_info(input_leng)</span><br><span class="line">            data_out = tf.saved_model.utils.build_tensor_info(final_out)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># signature_def将输入输出信息进行封装，在构建模型阶段可以随便给tensor命名</span></span><br><span class="line">            prediction_signature = (</span><br><span class="line">                tf.saved_model.signature_def_utils.build_signature_def(</span><br><span class="line">                    inputs=&#123;<span class="string">'ids'</span>: data_in, <span class="string">'mask'</span>: data_length&#125;,</span><br><span class="line">                    outputs=&#123;<span class="string">'output'</span>: data_out&#125;,</span><br><span class="line">                    method_name=tf.saved_model.signature_constants.PREDICT_METHOD_NAME))</span><br><span class="line">            <span class="comment"># 导入graph与变量信息</span></span><br><span class="line">            builder.add_meta_graph_and_variables(</span><br><span class="line">                sess, [tf.saved_model.tag_constants.SERVING],</span><br><span class="line">                signature_def_map=&#123;</span><br><span class="line">                    <span class="string">'ac_forward'</span>: prediction_signature,</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">            builder.save()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;首先三种模型导出：&quot;&gt;&lt;a href=&quot;#首先三种模型导出：&quot; class=&quot;headerlink&quot; title=&quot;首先三种模型导出：&quot;&gt;&lt;/a&gt;&lt;strong&gt;首先三种模型导出：&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tf.train.Sa
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>cpp基础</title>
    <link href="http://yoursite.com/2020/04/27/cpp%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/04/27/cpp基础/</id>
    <published>2020-04-27T12:45:32.000Z</published>
    <updated>2020-04-27T12:57:32.793Z</updated>
    
    <content type="html"><![CDATA[<h2 id="C-常见面试问题汇总"><a href="#C-常见面试问题汇总" class="headerlink" title="C++常见面试问题汇总"></a>C++常见面试问题汇总</h2><ul><li>指针和引用的区别</li></ul><p>指针是一个变量，引用不过是别名；指针可以多级；指针可空，引用不可空且定义时必须初始化</p><ul><li>堆和栈的区别</li></ul><p>堆存放用户自定义的；栈存放函数信息；</p><ul><li>new和delete是如何实现的，new 与 malloc的异同处</li></ul><p>new和delete是cpp操作符，malloc库函数；new可以调构造函数，自动计算对象大小；</p><ul><li>C和C++的区别</li><li>C++、Java的联系与区别，包括语言特性、垃圾回收、应用场景等（java的垃圾回收机制）</li><li>Struct和class的区别</li></ul><p><strong>class</strong> 是引用类型，它在堆中分配空间；而<strong>struct</strong> 是值类型，它在栈中分配空间。</p><p>class默认private，struct默认public，保留是因为向下兼容。</p><ul><li>define 和const的区别（编译阶段、安全性、内存占用等）</li><li>在C++中const和static的用法（定义，用途）</li></ul><p>static局部变量，函数，全局变量，persistent&amp;private，存放在数据区，函数仅当前文件可用。</p><ul><li>const和static在类中使用的注意事项（定义、初始化和使用）</li><li>C++中的const类成员函数（用法和意义），以及和非const成员函数的区别</li><li>C++的顶层const和底层const</li><li>final和override关键字</li><li>拷贝初始化和直接初始化，初始化和赋值的区别</li><li>extern “C”的用法</li><li>模板函数和模板类的特例化</li><li>C++的STL源码（这个系列也很重要，建议侯捷老师的<strong>STL源码剖析</strong>书籍与视频），其中包括内存池机制，各种容器的底层实现机制，算法的实现原理等）</li><li>STL源码中的hashtable的实现</li><li>STL中unordered_map和map的区别和应用场景</li><li>STL中vector的实现</li><li>STL容器的几种迭代器以及对应的容器（输入迭代器，输出迭代器，前向迭代器，双向迭代器，随机访问迭代器）</li></ul><blockquote><p>顺序容器：vector,deque是随机访问迭代器；list是双向迭代器</p><p>容器适配器：stack,queue,priority_queue没有迭代器</p><p>关联容器：set,map,multiset,multimap是双向迭代器</p><p>unordered_set,unordered_map,unordered_multiset,unordered_multimap是前向迭代器</p></blockquote><ul><li>STL中的traits技法</li></ul><blockquote><p>type_traits</p><p>iterator_traits</p><p>char traits</p><p>allocator_traits</p><p>pointer_traits</p><p>array_traits</p></blockquote><ul><li>vector使用的注意点及其原因，频繁对vector调用push_back()对性能的影响和原因。</li><li>C++中的重载和重写的区别</li><li>C++内存管理，内存池技术（热门问题），与csapp中几种内存分配方式对比学习加深理解</li><li>介绍面向对象的三大特性，并且举例说明每一个</li><li>C++多态的实现</li><li>C++虚函数相关（虚函数表，虚函数指针），虚函数的实现原理（包括单一继承，多重继承等）（拓展问题：为什么基类指针指向派生类对象时可以调用派生类成员函数，基类的虚函数存放在内存的什么区，虚函数表指针vptr的初始化时间）</li><li>C++中类的数据成员和成员函数内存分布情况</li><li>this指针</li><li>析构函数一般写成虚函数的原因</li><li>构造函数、拷贝构造函数和赋值操作符的区别</li></ul><blockquote><p>构造函数：对象不存在，没用别的对象初始化</p><p>拷贝构造函数：对象不存在，用别的对象初始化</p><p>赋值运算符：对象存在，用别的对象给它赋值</p></blockquote><ul><li>构造函数声明为explicit</li><li>构造函数为什么一般不定义为虚函数</li><li>构造函数的几种关键字(default delete 0)</li></ul><blockquote><p>= default：将拷贝控制成员定义为=default显式要求编译器生成合成的版本</p><p>= delete：将拷贝构造函数和拷贝赋值运算符定义删除的函数，阻止拷贝（析构函数不能是删除的函数 C++Primer P450）</p><p>= 0：将虚函数定义为纯虚函数（纯虚函数无需定义，= 0只能出现在类内部虚函数的声明语句处；当然，也可以为纯虚函数提供定义，不过函数体必须定义在类的外部）</p></blockquote><ul><li>构造函数或者析构函数中调用虚函数会怎样</li><li>纯虚函数</li><li>静态类型和动态类型，静态绑定和动态绑定的介绍</li><li>引用是否能实现动态绑定，为什么引用可以实现</li><li>深拷贝和浅拷贝的区别（举例说明深拷贝的安全性）</li><li>对象复用的了解，零拷贝的了解</li><li>介绍C++所有的构造函数</li><li>什么情况下会调用拷贝构造函数（三种情况）</li><li>结构体内存对齐方式和为什么要进行内存对齐？</li><li>内存泄露的定义，如何检测与避免？</li><li>手写智能指针的实现（shared_ptr和weak_ptr实现的区别）</li><li>智能指针的循环引用</li><li>遇到coredump要怎么调试</li><li>内存检查工具的了解</li><li>模板的用法与适用场景</li><li>成员初始化列表的概念，为什么用成员初始化列表会快一些（性能优势）？</li><li>用过C++ 11吗，知道C++ 11哪些新特性？</li><li>C++的调用惯例（简单一点C++函数调用的压栈过程）</li><li>C++的四种强制转换</li></ul><blockquote><p>static_cast</p><p>dynamic_cast</p><p>const_cast</p><p>reinterpret_cast</p></blockquote><ul><li>C++中将临时变量作为返回值的时候的处理过程（栈上的内存分配、拷贝过程）</li><li>C++的异常处理</li><li>volatile关键字</li><li>优化程序的几种方法</li><li>public，protected和private访问权限和继承</li><li>class和struct的区别</li><li>decltype()和auto</li><li>inline和宏定义的区别</li><li>C++和C的类型安全</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;C-常见面试问题汇总&quot;&gt;&lt;a href=&quot;#C-常见面试问题汇总&quot; class=&quot;headerlink&quot; title=&quot;C++常见面试问题汇总&quot;&gt;&lt;/a&gt;C++常见面试问题汇总&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;指针和引用的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指针是一个变量
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>必背算法</title>
    <link href="http://yoursite.com/2020/03/26/%E5%BF%85%E8%83%8C%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2020/03/26/必背算法/</id>
    <published>2020-03-26T08:01:36.000Z</published>
    <updated>2020-03-26T10:26:11.710Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基础算法"><a href="#基础算法" class="headerlink" title="基础算法"></a>基础算法</h3><h4 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch_leftopen_rightclose_duplicate_uper</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v, <span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = v.size();</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> lo = <span class="number">-1</span>, hi = n - <span class="number">1</span>, mid = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (hi - lo &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        mid = lo + (hi - lo)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (v[mid] &lt;= x) &#123;</span><br><span class="line">            lo = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            hi = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v[lo] == x ? lo : <span class="number">-1</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;v, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(lo&gt;=hi) <span class="keyword">return</span> lo;</span><br><span class="line">    <span class="keyword">int</span> pi = lo;</span><br><span class="line">    <span class="keyword">while</span> (lo&lt;hi) &#123;</span><br><span class="line">        <span class="comment">//hi先往lo方向走，双向走必到同一点</span></span><br><span class="line">        <span class="keyword">while</span> (lo&lt;hi &amp;&amp; v[hi] &gt;= v[pi]) &#123;</span><br><span class="line">            hi--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (lo&lt;hi &amp;&amp; v[lo] &lt;= v[pi]) &#123;</span><br><span class="line">            lo++;</span><br><span class="line">        &#125;</span><br><span class="line">        swap(v[lo], v[hi]);<span class="comment">//交换过后仍循环符合条件</span></span><br><span class="line">    &#125;</span><br><span class="line">    swap(v[pi], v[lo]);</span><br><span class="line">    <span class="keyword">return</span> lo;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qS</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;v, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (lo&gt;=hi) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = partition(v, lo, hi);</span><br><span class="line">    qS(v, lo, mid - <span class="number">1</span>);</span><br><span class="line">    qS(v, mid + <span class="number">1</span>, hi);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qS2</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;v, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (lo &gt;= hi) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//partition</span></span><br><span class="line">    <span class="keyword">int</span> i = lo, j = hi, randompi = lo + rand()%(hi -lo);</span><br><span class="line">    <span class="comment">//1 pi一定还是最左，只是rand交换一下最左元素</span></span><br><span class="line">    swap(v[randompi], v[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> pi = i;</span><br><span class="line">    <span class="comment">//2 写入一个函数增加变量不然递归时lo和hi的值会变</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="comment">//3 一定先从对立面</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; v[j] &gt;= v[pi]) &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; v[i] &lt;= v[pi]) &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        swap(v[i], v[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    swap(v[i], v[pi]);</span><br><span class="line">    <span class="comment">//4 返回partition</span></span><br><span class="line">    <span class="keyword">int</span> mid = i;</span><br><span class="line">    </span><br><span class="line">    qS2(v, lo, mid - <span class="number">1</span>);</span><br><span class="line">    qS2(v, mid+<span class="number">1</span>, hi);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="归并"><a href="#归并" class="headerlink" title="归并"></a>归并</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeV</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;v, <span class="keyword">int</span> lo, <span class="keyword">int</span> mid, <span class="keyword">int</span> hi)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (lo &gt;= hi) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; tmp(v);</span><br><span class="line">    <span class="comment">//xxxidx要相对从0</span></span><br><span class="line">    <span class="keyword">int</span> cur1 = lo, cur2 = mid+<span class="number">1</span>, idx = lo;</span><br><span class="line">    <span class="keyword">while</span> (cur1 &lt;= mid &amp;&amp; cur2 &lt;= hi) &#123;</span><br><span class="line">        <span class="keyword">if</span> (tmp[cur1] &lt;= tmp[cur2]) &#123;</span><br><span class="line">            v[idx++] = tmp[cur1++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            v[idx++] = tmp[cur2++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (cur1 &lt;= mid) &#123;</span><br><span class="line">        v[idx++] = tmp[cur1++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (cur2 &lt;= hi) &#123;</span><br><span class="line">        v[idx++] = tmp[cur2++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeS</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;v, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (lo &gt;= hi) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//partition</span></span><br><span class="line">    <span class="keyword">int</span> mid = lo + (hi - lo)/<span class="number">2</span>;</span><br><span class="line">    <span class="comment">//xxx和qS不同mid不是中立不传入mid-1</span></span><br><span class="line">    mergeS(v, lo, mid);</span><br><span class="line">    mergeS(v, mid + <span class="number">1</span>, hi);</span><br><span class="line">    mergeV(v, lo, mid, hi);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cdfs</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;cur, <span class="built_in">set</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; &amp;res, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;visit, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;v, <span class="keyword">int</span> dep, <span class="keyword">int</span> len, <span class="keyword">int</span> sum, <span class="keyword">int</span> vdx)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dep == <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sum == <span class="number">0</span>) &#123;</span><br><span class="line">            res.insert(cur);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//扩展方式</span></span><br><span class="line">    <span class="keyword">for</span> (; vdx &lt; len; ++vdx) &#123;</span><br><span class="line">        <span class="keyword">if</span> (visit[vdx] == <span class="number">0</span>) &#123;</span><br><span class="line">            visit[vdx] = <span class="number">1</span>;</span><br><span class="line">            cur.push_back(v[vdx]);</span><br><span class="line">            cdfs(cur, res, visit, v, dep + <span class="number">1</span>, len, sum + v[vdx], vdx + <span class="number">1</span>);</span><br><span class="line">            visit[vdx] = <span class="number">0</span>;</span><br><span class="line">            cur.pop_back();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; threeSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;num) &#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; cur;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; tmp;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; visit(num.size(), <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (num.size() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(num.begin(), num.end());</span><br><span class="line">    cdfs(cur, tmp, visit, num, <span class="number">1</span>, num.size(), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i : tmp)</span><br><span class="line">        res.push_back(i);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基础算法&quot;&gt;&lt;a href=&quot;#基础算法&quot; class=&quot;headerlink&quot; title=&quot;基础算法&quot;&gt;&lt;/a&gt;基础算法&lt;/h3&gt;&lt;h4 id=&quot;二分查找&quot;&gt;&lt;a href=&quot;#二分查找&quot; class=&quot;headerlink&quot; title=&quot;二分查找&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>各种库导入检查</title>
    <link href="http://yoursite.com/2020/02/19/%E5%90%84%E7%A7%8D%E5%BA%93%E5%AF%BC%E5%85%A5%E6%A3%80%E6%9F%A5/"/>
    <id>http://yoursite.com/2020/02/19/各种库导入检查/</id>
    <published>2020-02-19T02:24:33.000Z</published>
    <updated>2020-02-20T02:10:07.760Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sh aitranson_gpu_v12_sp02/tools/test.sh  </span><br><span class="line">sh env.sh</span><br><span class="line"></span><br><span class="line">rm libtensorflow_cc_v1.13_avx.so 删掉gpu编译用的库</span><br><span class="line">cp /mnt/lustre/aifs/home/qc904/asr-cloud/third/tensorflow/*</span><br><span class="line">这下面有8个库  拷过去 把你自己的libtensorflow_cc_v1.13_avx.so 删掉</span><br><span class="line">然后找不到库需要<span class="built_in">export</span>这个路径</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/mnt/lustre/aifs/home/zhl25/asr-cloud/third/tensorflow</span><br><span class="line"><span class="built_in">export</span> KALDIDIR=/mnt/lustre/aifs/fgfs/users/zyj34/reconstruct/kaldi/src/</span><br><span class="line"><span class="built_in">export</span> INTELROOT=/mnt/lustre/aifs/home/pz853/workspace/intel.2019</span><br><span class="line"></span><br><span class="line">ldd third/tensorflow/libdnnl.so</span><br><span class="line"></span><br><span class="line">cp /mnt/lustre/data/Deliver/dev/cloud/cuda_res/TF_CPU_LIB_WITH_AC_FORWARD/avx_avx2_quant_dps_lib/libiomp5.so third/tensorflow</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>tensorflow保存模型</title>
    <link href="http://yoursite.com/2020/02/05/tensorflow%E4%BF%9D%E5%AD%98%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/2020/02/05/tensorflow保存模型/</id>
    <published>2020-02-05T09:32:27.000Z</published>
    <updated>2020-02-17T01:36:02.748Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_41137655/article/details/99547518" target="_blank" rel="noopener">Saved_model模块</a></p><p>tfs</p><p><code>saved_model_cli show --dir ./6 --all</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.framework.graph_util <span class="keyword">import</span> convert_variables_to_constants</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.framework <span class="keyword">import</span> graph_util</span><br><span class="line"></span><br><span class="line"><span class="comment"># output_node_names = "whichPun/output:0"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    saver = tf.train.import_meta_graph(<span class="string">'model/-1.meta'</span>)</span><br><span class="line">    saver.restore(sess, tf.train.latest_checkpoint(<span class="string">"model/"</span>))</span><br><span class="line">    graph = sess.graph</span><br><span class="line"></span><br><span class="line">    graph_def = sess.graph.as_graph_def()</span><br><span class="line"></span><br><span class="line">    input_x = sess.graph.get_tensor_by_name(<span class="string">"inputs/input_ids:0"</span>)</span><br><span class="line">    print(input_x)</span><br><span class="line">    input_mask = sess.graph.get_tensor_by_name(<span class="string">"inputs/input_mask:0"</span>)</span><br><span class="line">    print(input_mask)</span><br><span class="line">    <span class="comment"># bert/encoder/layer_7/attention/output/LayerNorm/batchnorm/add_1:0 att</span></span><br><span class="line">    <span class="comment"># bert/encoder/layer_7/intermediate/dense/mul_3:0   inter</span></span><br><span class="line">    <span class="comment"># bert/encoder/layer_7/output/LayerNorm/batchnorm/add_1:0  output</span></span><br><span class="line">    <span class="comment"># bert/encoder/layer_7/attention/self/Reshape_5:0 self_att</span></span><br><span class="line">    <span class="comment"># bert/encoder/layer_7/attention/self/Reshape_3:0 att_probs</span></span><br><span class="line">    automark_out = sess.graph.get_tensor_by_name(<span class="string">"whichPun/whichPun_output:0"</span>)</span><br><span class="line">    smooth_out = sess.graph.get_tensor_by_name(<span class="string">"smooth/smooth_output:0"</span>)</span><br><span class="line">    print(automark_out)</span><br><span class="line">    print(smooth_out)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># sess.run(graph.get_operation_by_name('Inputs/string_to_index/hash_table/table_init'))</span></span><br><span class="line">    <span class="comment"># sess.run(graph.get_operation_by_name('Inputs/string_to_index_1/hash_table/table_init'))</span></span><br><span class="line">    export_path = <span class="string">'saved_model'</span></span><br><span class="line">    <span class="comment"># 保存图模型</span></span><br><span class="line">    <span class="keyword">if</span> export_path:</span><br><span class="line">        os.system(<span class="string">"rm -rf "</span> + export_path)</span><br><span class="line"></span><br><span class="line">        builder = tf.saved_model.builder.SavedModelBuilder(export_path)</span><br><span class="line">        data_in = tf.saved_model.utils.build_tensor_info(input_x)</span><br><span class="line">        data_mask = tf.saved_model.utils.build_tensor_info(input_mask)</span><br><span class="line">        data_punc_out = tf.saved_model.utils.build_tensor_info(automark_out)</span><br><span class="line">        data_smooth_output = tf.saved_model.utils.build_tensor_info(smooth_out)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#        table_init = tf.group(tf.tables_initializer(), name='legacy_init_op')</span></span><br><span class="line">        <span class="comment"># signature_def将输入输出信息进行封装，在构建模型阶段可以随便给tensor命名</span></span><br><span class="line">        prediction_signature = (</span><br><span class="line">            tf.saved_model.signature_def_utils.build_signature_def(</span><br><span class="line">                inputs=&#123;<span class="string">'input'</span>: data_in, <span class="string">'mask'</span>: data_mask&#125;,</span><br><span class="line">                outputs=&#123;<span class="string">'smooth_output'</span>: data_smooth_output, <span class="string">'punc_output'</span>: data_punc_out&#125;,</span><br><span class="line">                method_name=tf.saved_model.signature_constants.PREDICT_METHOD_NAME))</span><br><span class="line">        <span class="comment"># 导入graph与变量信息</span></span><br><span class="line">        builder.add_meta_graph_and_variables(</span><br><span class="line">            sess, [tf.saved_model.tag_constants.SERVING],</span><br><span class="line">            signature_def_map=&#123;</span><br><span class="line">                <span class="string">'ac_forward'</span>: prediction_signature,</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        builder.save()</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line">    frozen_graph_def = graph_util.convert_variables_to_constants(sess,</span><br><span class="line">                                                                 graph_def,</span><br><span class="line">                                                                 [<span class="string">"whichPun/whichPun_output"</span>, <span class="string">"smooth/smooth_output"</span>])</span><br><span class="line">    <span class="comment"># 模型保存成.pb格式</span></span><br><span class="line">    <span class="keyword">with</span> tf.gfile.FastGFile(<span class="string">'graph.pb'</span>, mode=<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(frozen_graph_def.SerializeToString())</span><br><span class="line"></span><br><span class="line">    exit()</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    # writer = tf.summary.FileWriter("logs/", sess.graph)</span></span><br><span class="line"><span class="string">    for op in graph.get_operations():</span></span><br><span class="line"><span class="string">        print(op.name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # 固化模型</span></span><br><span class="line"><span class="string">    frozen_graph_def = graph_util.convert_variables_to_constants(sess,</span></span><br><span class="line"><span class="string">                                                                 tf.get_default_graph().as_graph_def(),</span></span><br><span class="line"><span class="string">                                                                 [output_node_names])</span></span><br><span class="line"><span class="string">    # 模型保存成.pb格式</span></span><br><span class="line"><span class="string">    # with tf.gfile.FastGFile('graph.pb', mode='wb') as f:</span></span><br><span class="line"><span class="string">    #    f.write(frozen_graph_def.SerializeToString())</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    with tf.Graph().as_default() as graph:</span></span><br><span class="line"><span class="string">        tf.import_graph_def(frozen_graph_def, name="", )</span></span><br><span class="line"><span class="string">        with tf.Session() as sess:</span></span><br><span class="line"><span class="string">            graph = sess.graph</span></span><br><span class="line"><span class="string">            # for op in graph.get_operations():</span></span><br><span class="line"><span class="string">            #    print(op.name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            input_x = sess.graph.get_tensor_by_name("inputs/input_ids")</span></span><br><span class="line"><span class="string">            input_leng = sess.graph.get_tensor_by_name("inputs/input_mask:0")</span></span><br><span class="line"><span class="string">            final_out = sess.graph.get_tensor_by_name("whichPun/output:0")</span></span><br><span class="line"><span class="string">            print('out1', final_out)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            export_path = "saved_model"</span></span><br><span class="line"><span class="string">            # 保存图模型</span></span><br><span class="line"><span class="string">            if export_path:</span></span><br><span class="line"><span class="string">                os.system("rm -rf " + export_path)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                builder = tf.saved_model.builder.SavedModelBuilder(export_path)</span></span><br><span class="line"><span class="string">                data_in = tf.saved_model.utils.build_tensor_info(input_x)</span></span><br><span class="line"><span class="string">                data_length = tf.saved_model.utils.build_tensor_info(input_leng)</span></span><br><span class="line"><span class="string">                data_out = tf.saved_model.utils.build_tensor_info(final_out)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                # signature_def将输入输出信息进行封装，在构建模型阶段可以随便给tensor命名</span></span><br><span class="line"><span class="string">                prediction_signature = (</span></span><br><span class="line"><span class="string">                    tf.saved_model.signature_def_utils.build_signature_def(</span></span><br><span class="line"><span class="string">                        inputs=&#123;'ids': data_in, 'mask': data_length&#125;,</span></span><br><span class="line"><span class="string">                        outputs=&#123;'output': data_out&#125;,</span></span><br><span class="line"><span class="string">                        method_name=tf.saved_model.signature_constants.PREDICT_METHOD_NAME))</span></span><br><span class="line"><span class="string">                # 导入graph与变量信息</span></span><br><span class="line"><span class="string">                builder.add_meta_graph_and_variables(</span></span><br><span class="line"><span class="string">                    sess, [tf.saved_model.tag_constants.SERVING],</span></span><br><span class="line"><span class="string">                    signature_def_map=&#123;</span></span><br><span class="line"><span class="string">                        'ac_forward': prediction_signature,</span></span><br><span class="line"><span class="string">                    &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                builder.save()</span></span><br><span class="line"><span class="string">        '''</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_41137655/article/details/99547518&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Saved_model模块&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tfs&lt;/p&gt;

      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/12/26/ASR%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/12/26/ASR语音识别学习笔记/</id>
    <published>2019-12-26T01:52:40.000Z</published>
    <updated>2020-06-28T07:41:15.170Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p>语音识别（Automatic Speech Recognition），一般简称ASR；是将声音转化为文字的过程，相当于人类的耳朵，即HMM中三大问题(概率计算，学习，预测)中的<strong>预测问题</strong>：已知观察序列求最可能的状态序列。</p><ul><li>HMM中状态序列是<strong>自定的状态，一般也是要求的项</strong>，比如jieba分词中的HMM状态为(BMES, begin, end , mid, single），五元组（A状态转移，B发射矩阵，π），观测序列o，状态序列s，注意是<strong>序列</strong>，即o1o2o3，转移矩阵可任意两个状态转移所以是N*N</li><li>HMM分为离散马尔科夫和连续的马尔科夫。比如说，离散的我可以穷举出所有的观察可能值，但是连续的就有无穷多观察值，这样Observe就不能确定了。那么需要引入GMM。</li><li>学习问题通常最复杂只能得局部最优解且需要求预测子问题。</li></ul><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/image-20191226152359796.png" alt></p><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/20200324143711.png" alt></p><p>文本w 发音S 音素q 特征向量v</p><blockquote><p> <strong>文本|发音</strong>    直观左右等价再展开多事件贝叶斯 <strong>音素 | 特征向量</strong></p></blockquote><p><strong>文本|发音</strong>  —-&gt; 文本 | 特征向量 —-&gt; 文本, 音素|特征向量  —-&gt; (贝叶斯) <strong>p(特征向量|音素)<em>p(音素|文本)</em>p(文本)</strong></p><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/image-20191226154428912.png" alt></p><p>语音识别原理流程：“输入——编码——解码——输出”</p><p><img src="https://img-blog.csdn.net/20180112113259072?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWkxKOTI1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>大体可分为<strong>“传统”识别方式</strong>与“<strong>端到端”识别方式</strong>，其主要差异就体现在<strong>声学模型上</strong>。</p><p>“传统”方式的声学模型一般采用<strong>隐马尔可夫模型（HMM）</strong>，而“端到端”方式一般采用<strong>深度神经网络（DNN）</strong>。</p><h3 id="声学模型"><a href="#声学模型" class="headerlink" title="声学模型"></a>声学模型</h3><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/20191226160201.png" alt></p><p>如上图所示，原始语音信号S(不稳定信号所以要交叉分帧)，切割成多个短时的近似平稳信号后，经过特征提取转换成特征向量V, 声学模型就是对该特征向量的一种建模。</p><p>（1）混合声学模型–都是为了算HMM中的发射概率矩阵</p><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/2020/20200331175544.png" alt></p><p>混合高斯-隐马尔科夫模型   <a href="https://blog.csdn.net/zbuger/article/details/50359889" target="_blank" rel="noopener">GMM-HMM详解</a></p><p>深度神经网络-隐马尔科夫模型   DNN-HMM</p><p>深度循环神经网络-隐马尔科夫模型   RNN-HMM</p><p>深度卷积神经网络-隐马尔科夫模型   CNN-HMM</p><p>（2）端到端的声学模型</p><p>连接时序分类-长短时记忆模型CTC-LSTM</p><p>注意力模型Attention</p><p>各个模型的优缺点介绍</p><p>（1）基于GMM-HMM的声学模型</p><p>优点：GMM训练速度快</p><pre><code>声学模型较小，容易移植到嵌入式平台GMM把所有的训练样本学习一遍。把类似离散马尔科夫中的发射矩阵训练出来。也就是状态-&gt;观察值（可以是数，向量等）。这样HMM再训练自己的状态转移矩阵等，这样HMM就可以用了。</code></pre><p>缺点：GMM没有利用帧的上下文信息</p><pre><code>GMM不能学习深层非线性特征变换</code></pre><p>（2）基于DNN-HMM模型</p><p>优点： DNN能利用帧的上下文信息，比如前后个扩展5帧</p><pre><code>DNN能学习深层非线性特征变换，表现优于GMM</code></pre><p>缺点： 不能利用历史信息来辅助当前任务</p><p>（3）基于RNN-HMM模型：</p><p>优点：  RNN能有效利用历史信息，将历史消息持久化</p><pre><code>在很多任务上，RNN性能变现优于DNN</code></pre><p>缺点：  RNN随着层数的增加，会导致梯度爆炸或者梯度消失</p><p>（4）基于CNN-HMM声学模型</p><p>优点：CNN对于语音信号，采用时间延迟卷积神经网络可以很好地对信号进行描述学习</p><pre><code>CNN比其他神经网络更能捕捉到特征的不变形</code></pre><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/20191226161003.png" alt></p><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/20191226161058.png" alt></p><h3 id="语言模型"><a href="#语言模型" class="headerlink" title="语言模型"></a>语言模型</h3><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/image-20191226170121499.png" alt></p><h3 id="MFCC特征提取"><a href="#MFCC特征提取" class="headerlink" title="MFCC特征提取"></a><a href="https://www.zhihu.com/question/27268668/answer/38253151?utm_source=weibo&amp;utm_medium=weibo_share&amp;utm_content=share_answer&amp;utm_campaign=share_button" target="_blank" rel="noopener">MFCC特征提取</a></h3><p><img src="https://zpl-1257951097.cos.ap-beijing.myqcloud.com/blog_img/20191226170336.png" alt></p><p>MFCC是<strong>在Fbank的基础上做DCT变换，去除特征维度之间的相关性，同时也可以起降维的作用，得到一般40维或13维梅尔频率</strong>，现在随着数据量的增大，这种传统机器学习逐渐被<strong>神经网络特征提取</strong>代替(CLD)。</p><h3 id="各个组件"><a href="#各个组件" class="headerlink" title="各个组件"></a>各个组件</h3><p><strong>1）语音激活检测（voice active detection，VAD）</strong></p><p>A）需求背景：在近场识别场景，比如使用语音输入法时，用户可以用手按着语音按键说话，结束之后松开，由于近场情况下<strong>信噪比（signal to noise ratio, SNR）</strong>）比较高，信号清晰，简单算法也能做到有效可靠。<br>但远场识别场景下，用户不能用手接触设备，这时噪声比较大，SNR下降剧烈，必须使用VAD了。</p><p>B）定义：判断什么时候有语音什么时候没有语音（静音）。<br>后续的语音信号处理或是语音识别都是在VAD截取出来的有效语音片段上进行的。</p><p><strong>3）麦克风阵列（Microphone Array）</strong></p><p>A）需求背景：在会议室、户外、商场等各种复杂环境下，会有噪音、混响、人声干扰、回声等各种问题。特别是远场环境，要求拾音麦克风的灵敏度高，这样才能在较远的距离下获得有效的音频振幅，同时近场环境下又不能爆音（振幅超过最大量化精度）。另外，家庭环境中的墙壁反射形成的混响对语音质量也有不可忽视的影响。</p><p>B）定义：由一定数目的声学传感器（一般是麦克风）组成，用来对声场的空间特性进行采样并处理的系统。</p><p><strong>2）语音唤醒 （voice trigger，VT）</strong></p><p>A）需求背景：在近场识别时，用户可以点击按钮后直接说话，但是远场识别时，需要在VAD检测到人声之后，进行语音唤醒，相当于叫这个AI（机器人）的名字，引起ta的注意，比如苹果的“Hey Siri”，Google的“OK Google”，亚马逊Echo的“Alexa”等。</p><p>B）定义：可以理解为喊名字，引起听者的注意。<br>VT判断是唤醒（激活）词，那后续的语音就应该进行识别了；否则，不进行识别。</p><p>C）难点：语音识别，不论远场还是进场，都是在云端进行，但是语音唤醒基本是在（设备）本地进行的，要求更高——</p><p><strong>4）全双工（Full－Duplex）</strong></p><p>A）需求背景：在传统的语音唤醒方案中，是一次唤醒后，进行语音识别和交互，交互完成再进入待唤醒状态。但是在实际人与人的交流中，人是可以与多人对话的，而且支持被其他人插入和打断。</p><p>B）定义：<br>单工：a和b说话，b只能听a说<br>半双工：参考对讲机，A：能不能听到我说话，over；B：可以可以，over<br>全双工：参考打电话，A：哎，老王啊！balabala……；B：balabala……</p><p><strong>5）纠错</strong><br>A）需求背景：做了以上硬件、算法优化后，语音识别就会OK了吗？还不够。因为还会因为同音字（词）等各种异常情况，导致识别出来的文字有偏差，这时，就需要做“纠错”了。</p><p>B）用户主动纠错。<br>比如用户语音说“我们今天，不对，明天晚上吃啥？”，经过云端的自然语言理解过程，可以直接显示用户真正希望的结果“我们明天晚上吃啥”。</p><p>f=sig(wX+uH+bf)<br>i=sig(wX+uH+bi)</p><p>o=sig(wX+uH+bo)</p><p>j=tanh(wX+uH+bj)</p><p>ElemntWise</p><p>Set stream </p><p>EventRecord</p><p>j~=f<em>w+j</em>w<br>h=o*j</p><p>p(i)logP(i)-q(i)logQ(i)</p><p>m,,,,</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基本原理&quot;&gt;&lt;a href=&quot;#基本原理&quot; class=&quot;headerlink&quot; title=&quot;基本原理&quot;&gt;&lt;/a&gt;基本原理&lt;/h3&gt;&lt;p&gt;语音识别（Automatic Speech Recognition），一般简称ASR；是将声音转化为文字的过程，相当于人类的
      
    
    </summary>
    
      <category term="AiSpeeech" scheme="http://yoursite.com/categories/AiSpeeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>云端超算挂载</title>
    <link href="http://yoursite.com/2019/12/24/%E4%BA%91%E7%AB%AF%E8%B6%85%E7%AE%97%E6%8C%82%E8%BD%BD/"/>
    <id>http://yoursite.com/2019/12/24/云端超算挂载/</id>
    <published>2019-12-24T03:50:26.000Z</published>
    <updated>2019-12-24T03:55:11.054Z</updated>
    
    <content type="html"><![CDATA[<p><code>sshfs -C -o reconnect lizhipeng@10.12.8.26:/home /Users/zhipeng/win10/sshRemote</code></p><p><code>sudo diskutil umount force /Users/zhipeng/win10/sshRemote</code></p><p>ping pv06 = 10.11.10.249</p><p>ping 跳板机<a href="mailto:zhl25@hpc.ai-research.cn" target="_blank" rel="noopener">zhl25@hpc.ai-research.cn</a> =  222.92.116.126</p><p><code>ssh -N -f -L 6000:10.11.10.249:22 -p 5219 zhl25@222.92.116.126 -o TCPKeepAlive=yes</code><br><code>ssh -p 6000 zhl25@localhost</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;sshfs -C -o reconnect lizhipeng@10.12.8.26:/home /Users/zhipeng/win10/sshRemote&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo diskutil umount force /Use
      
    
    </summary>
    
      <category term="AiSpeech" scheme="http://yoursite.com/categories/AiSpeech/"/>
    
    
      <category term="AiSpeech" scheme="http://yoursite.com/tags/AiSpeech/"/>
    
  </entry>
  
  <entry>
    <title>CPU矩阵运算库比较DNNL,mkl,eigen3</title>
    <link href="http://yoursite.com/2019/12/05/CPU%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97%E5%BA%93%E6%AF%94%E8%BE%83Cblas-mkl-eigen3/"/>
    <id>http://yoursite.com/2019/12/05/CPU矩阵运算库比较Cblas-mkl-eigen3/</id>
    <published>2019-12-05T06:46:56.000Z</published>
    <updated>2020-08-16T07:49:08.192Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装必要的库"><a href="#安装必要的库" class="headerlink" title="安装必要的库"></a>安装必要的库</h3><h4 id="Eigen3"><a href="#Eigen3" class="headerlink" title="Eigen3"></a>Eigen3</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">执行命令：</span><br><span class="line"></span><br><span class="line">sudo apt-get install libeigen3-dev</span><br><span class="line"><span class="keyword">or</span> sudo yum install eigen3</span><br><span class="line">安装后执行以下命令</span><br><span class="line"></span><br><span class="line">运行命令：</span><br><span class="line"></span><br><span class="line">sudo cp -r /usr/include/eigen3/Eigen /usr/include</span><br><span class="line"></span><br><span class="line">注意：参考cp指令 /usr/men /usr/zh 将目录/usr/men下的所有文件及其子目录复制到目录/usr/zh中</span><br><span class="line"></span><br><span class="line">这个命令的说明：</span><br><span class="line"></span><br><span class="line">因为eigen3被默认安装到了usr/include里了（系统默认的路径），在很多程序中include时经常使用<span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Eigen/Dense&gt;而不是使用#include&lt;eigen3/Eigen/Dense&gt;所以要做一下处理，否则有些程序在编译时找不到Eigen/Dense而报错。上面指令将usr/include/eigen3文件夹中的Eigen文件递归的复制到上一层文件（直接放到/usr/include中，否则系统无法默认搜索到-----&gt;此时只能在CMakeLists.txt用include_libraries（绝对路径了））</span></span></span><br><span class="line">  </span><br><span class="line"> </span><br><span class="line"><span class="comment">//或第二种安装方法    </span></span><br><span class="line"><span class="meta">#github 有个mirror,版本3.3.4 from 2017</span></span><br><span class="line">git clone https:<span class="comment">//github.com/eigenteam/eigen-git-mirror</span></span><br><span class="line"></span><br><span class="line">#安装</span><br><span class="line">cd eigen-git-mirror</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ..</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line">#安装后,头文件安装在/usr/local/include/eigen3</span><br></pre></td></tr></table></figure><p>示例程序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//g++ -I/usr/local/include/eigen3 1.cpp -o 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Dense&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Eigen;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    MatrixXd m = MatrixXd::Random(<span class="number">3</span>,<span class="number">3</span>); <span class="comment">//随机数-1  ~1</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; m &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    m = (m + MatrixXd::Constant(<span class="number">3</span>,<span class="number">3</span>,<span class="number">1.2</span>))* <span class="number">50</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">" m2 ="</span> &lt;&lt; m &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    MatrixXd n = MatrixXd::Constant(<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>);<span class="comment">//常矩阵</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">" n ="</span> &lt;&lt; n &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">VectorXd <span class="title">v</span><span class="params">(<span class="number">3</span>)</span></span>;</span><br><span class="line">    v &lt;&lt; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"m * v"</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; m * v &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//向量矩阵计算</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MKL"><a href="#MKL" class="headerlink" title="MKL"></a><a href="https://software.intel.com/en-us/onemkl-developer-reference-c-cblas-gemm-1" target="_blank" rel="noopener">MKL</a></h4><p>官网下载安装包<a href="https://software.intel.com/en-us/mkl" target="_blank" rel="noopener">https://software.intel.com/en-us/mkl</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf l_mkl_2019.0.117.tgz</span><br><span class="line">cd l_mkl_2019.0.117</span><br><span class="line">./install.sh</span><br><span class="line">source ~/intel/bin/compilervars.sh intel64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">locate libdnnl.so.1</span><br><span class="line">export LD_LIBRARY_PATH=/home/resources/yxwang/tf_install_source/serving1.13/dfsmn_opt_quant:$LD_LIBRARY_PATH</span><br><span class="line"></span><br><span class="line">locate libmkl_sequential.so</span><br><span class="line">export LD_LIBRARY_PATH=/home/public/wangyunxia_share/build_tf1.12mkl/Predict-ft/tensorflow_lib_h2_old/third_party/attnlibs/:$LD_LIBRARY_PATH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export LD_LIBRARY_PATH=/home/yx.wang/dnnl_lnx_1.1.1_cpu_iomp/lib:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure><h4 id="MKL-DNNL"><a href="#MKL-DNNL" class="headerlink" title="MKL-DNNL"></a><a href="https://intel.github.io/mkl-dnn/group__dnnl__api__blas.html#ga2b763b7629846913507d88fba875cc26" target="_blank" rel="noopener">MKL-DNNL</a></h4><p><a href="https://github.com/intel/mkl-dnn/releases" target="_blank" rel="noopener">官网下载</a>编译好的包即可，然后-I加头文件路径，-L加so路径，LD_LIBRARY_PATH实际的so代码路径</p><blockquote><p>MKL_INCDIR=/opt/composer_xe_2013.2.146/mkl/include</p><p>MKL_LIBDIR=/opt/composerxe/mkl/lib/intel64/</p><p>MKL_RT_LIBDIR=/opt/composer_xe_2013/lib/intel64/</p><p>#DNNLROOT=/home/resources/lizhipeng/dense-matrix-mult/MKL/mkldnn_lnx_1.0.4_cpu_iomp</p><p>DNNLROOT=/home/yx.wang/dnnl_lnx_1.1.1_cpu_iomp</p><p>gcc \</p><p>-I $MKL_INCDIR -I $DNNLROOT/include \</p><p>-L $MKL_LIBDIR -L /home/yx.wang/dnnl_lnx_1.1.1_cpu_iomp/lib/ -ldnnl \</p><p>-L $MKL_RT_LIBDIR \</p><p>-O4 -msse2 -msse3 -msse4 \</p><p>dense_mult_mkl.c \</p><p>-Wl,–start-group -lmkl_sequential -lmkl_core -lmkl_intel_lp64 -Wl,–end-group \</p><p>-lm -lpthread \</p><p>-o a.out</p></blockquote><p>示例测试程序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;omp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mkl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"dnnl.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP(i,n) for ( i = 0; i &lt; (n); ++i ) </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int8_t</span> test_type;</span><br><span class="line"></span><br><span class="line"><span class="comment">// using namespace std;</span></span><br><span class="line"><span class="comment">// using namespace dnnl;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_matrix</span><span class="params">(<span class="keyword">double</span>* A, <span class="keyword">int</span> dim1 , <span class="keyword">int</span> dim2 )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> mod = <span class="number">100003</span>, prod = <span class="number">7</span> , e = <span class="number">1</span> , i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  REP(i,dim1) REP(j,dim2) &#123;</span><br><span class="line">    e = (e*prod + <span class="number">1</span>)%mod;</span><br><span class="line">    A[i*dim2 + j] = e * <span class="number">.91739210437</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_matrix_float</span><span class="params">(<span class="keyword">float</span>* A, <span class="keyword">int</span> dim1 , <span class="keyword">int</span> dim2 )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> mod = <span class="number">100003</span>, prod = <span class="number">7</span> , e = <span class="number">1</span> , i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  REP(i,dim1) REP(j,dim2) &#123;</span><br><span class="line">    e = (e*prod + <span class="number">1</span>)%mod;</span><br><span class="line">    A[i*dim2 + j] = <span class="number">0.0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_matrix_X</span><span class="params">(test_type* A, <span class="keyword">int</span> dim1 , <span class="keyword">int</span> dim2 )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> mod = <span class="number">100003</span>, prod = <span class="number">7</span> , e = <span class="number">1</span> , i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  REP(i,dim1) REP(j,dim2) &#123;</span><br><span class="line">    e = (e*prod + <span class="number">1</span>)%mod;</span><br><span class="line">    A[i*dim2 + j] = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_matrix</span> <span class="params">(<span class="keyword">double</span> *A , <span class="keyword">int</span> dim1 , <span class="keyword">int</span> dim2 )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line">  REP(i,dim1) &#123;</span><br><span class="line">    REP(j,dim2) <span class="built_in">printf</span>(<span class="string">"%lf "</span> , A[i*dim2 + j]);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_matrix_float</span> <span class="params">(<span class="keyword">float</span> *A , <span class="keyword">int</span> dim1 , <span class="keyword">int</span> dim2 )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line">  REP(i,dim1) &#123;</span><br><span class="line">    REP(j,dim2) <span class="built_in">printf</span>(<span class="string">"%lf "</span> , A[i*dim2 + j]);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> m , n , k , i , j , u , nrep = <span class="number">1</span> , cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> tag = <span class="number">1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">double</span> totaltime , error = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">before</span> , <span class="title">after</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( argc &lt;= <span class="number">1</span> || argc &gt;= <span class="number">6</span> ) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"./exe [nrep] &lt;dim1&gt; [dim2 dim3]"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( argc == <span class="number">2</span> ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">1</span>] , <span class="string">"%d"</span> , &amp;m );</span><br><span class="line">    n = k = m;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( argc == <span class="number">3</span> ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">1</span>] , <span class="string">"%d"</span> , &amp;nrep );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">2</span>] , <span class="string">"%d"</span> , &amp;m );</span><br><span class="line">    n = k = m;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( argc == <span class="number">4</span> ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">1</span>] , <span class="string">"%d"</span> , &amp;m );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">2</span>] , <span class="string">"%d"</span> , &amp;k );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">3</span>] , <span class="string">"%d"</span> , &amp;n );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( argc == <span class="number">5</span> ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">1</span>] , <span class="string">"%d"</span> , &amp;nrep );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">2</span>] , <span class="string">"%d"</span> , &amp;m );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">3</span>] , <span class="string">"%d"</span> , &amp;k );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">4</span>] , <span class="string">"%d"</span> , &amp;n );</span><br><span class="line">  &#125;</span><br><span class="line">  test_type *A, *B;</span><br><span class="line">  <span class="keyword">int32_t</span> *C;</span><br><span class="line">  <span class="keyword">if</span>(tag == <span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">      A = (test_type *) <span class="built_in">malloc</span>( m*k*<span class="keyword">sizeof</span>( test_type ) );</span><br><span class="line">      B = (test_type *) <span class="built_in">malloc</span>( k*n*<span class="keyword">sizeof</span>( test_type ) );</span><br><span class="line">      C = (<span class="keyword">int32_t</span> *) <span class="built_in">malloc</span>( m*n*<span class="keyword">sizeof</span>( <span class="keyword">int32_t</span> ) );</span><br><span class="line">      init_matrix_X ( A , m , k );</span><br><span class="line">      init_matrix_X ( B , k , n );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// else if(tag == 2)&#123;</span></span><br><span class="line">  <span class="comment">//     A = (float *) malloc( m*k*sizeof( float ) );</span></span><br><span class="line">  <span class="comment">//     B = (float *) malloc( k*n*sizeof( float ) );</span></span><br><span class="line">  <span class="comment">//     C = (float *) malloc( m*n*sizeof( float ) );</span></span><br><span class="line">  <span class="comment">//     init_matrix_float ( A , m , k );</span></span><br><span class="line">  <span class="comment">//     init_matrix_float ( B , k , n );</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// else if(tag == 3)&#123;</span></span><br><span class="line">  <span class="comment">//     A = (double *) malloc( m*k*sizeof( double ) );</span></span><br><span class="line">  <span class="comment">//     B = (double *) malloc( k*n*sizeof( double ) );</span></span><br><span class="line">  <span class="comment">//     C = (double *) malloc( m*n*sizeof( double ) );</span></span><br><span class="line">  <span class="comment">//     init_matrix ( A , m , k );</span></span><br><span class="line">  <span class="comment">//     init_matrix ( B , k , n );</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//A = (double *) malloc( sizeof(double) * m * k );</span></span><br><span class="line">  <span class="comment">//B = (double *) malloc( sizeof(double) * k * n );</span></span><br><span class="line">  <span class="comment">//C = (double *) malloc( sizeof(double) * m * n );</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">"Matrices Initialized [%dx%d , %dx%d , %dx%d ]\n"</span> , m , k , k , n , m , n);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">"Running %d Iteration(s) \n"</span> , nrep );</span><br><span class="line"></span><br><span class="line">  totaltime = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> MKL_INT8 ao = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> MKL_INT8 bo = <span class="number">0</span>;</span><br><span class="line">  MKL_INT32 co = <span class="number">0</span>;</span><br><span class="line">  CBLAS_OFFSET    offsetc=CblasFixOffset;</span><br><span class="line">  MKL_INT         lda=<span class="number">2</span>, ldb=<span class="number">1</span>, ldc=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">float</span>           alpha=<span class="number">1.0f</span>, beta=<span class="number">0.0f</span>;</span><br><span class="line">  REP(i,nrep) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> runtime;</span><br><span class="line"></span><br><span class="line">    gettimeofday ( &amp;before , <span class="literal">NULL</span> );</span><br><span class="line">    <span class="comment">// cblas_gemm_s8u8s32(CblasRowMajor, CblasNoTrans, CblasNoTrans, offsetc,</span></span><br><span class="line">                      <span class="comment">// m, n, k, alpha, A, k, ao, B, n, bo, beta, C, n, &amp;co);</span></span><br><span class="line">    <span class="comment">// cblas_gemm_s16s16s32(CblasRowMajor, CblasNoTrans, CblasNoTrans, offsetc,</span></span><br><span class="line">                      <span class="comment">// m, n, k, alpha, A, k, ao, B, n, bo, beta, C, n, &amp;co);                  </span></span><br><span class="line">    <span class="comment">//https://software.intel.com/en-us/onemkl-developer-reference-c-cblas-gemm-1</span></span><br><span class="line">    <span class="comment">//cblas_sgemm ( CblasRowMajor, CblasNoTrans, CblasNoTrans , m , n , k , 1.0 , A , k , B , n , 0.0 , C , n );</span></span><br><span class="line">    <span class="comment">//https://intel.github.io/mkl-dnn/group__dnnl__api__blas.html#ga2b763b7629846913507d88fba875cc26</span></span><br><span class="line">    dnnl_gemm_s8s8s32(<span class="string">'N'</span>, <span class="string">'N'</span>, <span class="string">'F'</span>, m, n, k, <span class="number">1.0f</span>, A, k,ao, B, n, bo,<span class="number">0.0f</span>, C, n, &amp;co);</span><br><span class="line">    gettimeofday ( &amp;after , <span class="literal">NULL</span> );</span><br><span class="line"></span><br><span class="line">    runtime = ( after.tv_usec - before.tv_usec )/<span class="number">1000000.0</span>  + (after.tv_sec - before.tv_sec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( nrep == <span class="number">1</span> || i &gt; <span class="number">0</span> ) </span><br><span class="line">      totaltime += runtime , cnt++;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" [Iteration %d Time : %lf ]\n"</span> , i+<span class="number">1</span> , runtime );</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    REP(i,m) REP(j,n) &#123;</span></span><br><span class="line"><span class="comment">      double ans = 0;</span></span><br><span class="line"><span class="comment">      REP(u,k) ans += A[i*k+u]*B[u*n+j];</span></span><br><span class="line"><span class="comment">      error += (ans-C[i*n+j])*(ans-C[i*n+j]);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    printf(" [Error = %lf ]\n" , error );</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Average Time : %lf \n"</span> , totaltime/cnt );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Eigen</strong></p><blockquote><p>INCDIR=/usr/include/eigen3/</p><p>g++ \</p><p>-I $INCDIR \</p><p>-O4 -msse2 -msse3 -msse4 \</p><p>dense_mult_eigen.cpp \</p><p>-fopenmp \</p><p>-o ap.out</p><p>g++ \</p><p>-I $INCDIR \</p><p>-O4 -msse2 -msse3 -msse4 \</p><p>-DEIGEN_DONT_PARALLELIZE \</p><p>dense_mult_eigen.cpp \</p><p>-o a.out</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* dense_mult_eigen.cpp</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2013, Siddharth Gopal (gcdart AT gmail)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This program is free software; you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment"> * it under the terms of version 2.1 of the GNU Lesser General Public License</span></span><br><span class="line"><span class="comment"> * as published by the Free Software Foundation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment"> * GNU Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You should have received a copy of the GNU Lesser General Public License</span></span><br><span class="line"><span class="comment"> * along with this program; if not, write to the Free Software</span></span><br><span class="line"><span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA, 02111-1307, USA,</span></span><br><span class="line"><span class="comment"> * or visit the GNU web site, www.gnu.org.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EIGEN_NO_DEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Sparse&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Core&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Eigen;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP(i,n) for ( int i = 0; i &lt; (n); ++i ) </span></span><br><span class="line"><span class="keyword">typedef</span> Matrix&lt; <span class="keyword">int8_t</span>, Dynamic, Dynamic &gt;  MatrixX;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_matrix</span> <span class="params">(MatrixXd&amp; A, <span class="keyword">int</span> dim1 , <span class="keyword">int</span> dim2 )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> mod = <span class="number">100003</span>, prod = <span class="number">7</span> , e = <span class="number">1</span> , i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  REP(i,dim1) REP(j,dim2) &#123;</span><br><span class="line">    e = (e*prod + <span class="number">1</span>)%mod;</span><br><span class="line">    A(i,j) = e * <span class="number">.91739210437</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_matrix_float</span><span class="params">(MatrixXf&amp; A, <span class="keyword">int</span> dim1 , <span class="keyword">int</span> dim2 )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> mod = <span class="number">100003</span>, prod = <span class="number">7</span> , e = <span class="number">1</span> , i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  REP(i,dim1) REP(j,dim2) &#123;</span><br><span class="line">    e = (e*prod + <span class="number">1</span>)%mod;</span><br><span class="line">    A(i*dim2 + j) = <span class="number">0.0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_matrix_X</span><span class="params">(MatrixX&amp; A, <span class="keyword">int</span> dim1 , <span class="keyword">int</span> dim2 )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> mod = <span class="number">100003</span>, prod = <span class="number">7</span> , e = <span class="number">1</span> , i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  REP(i,dim1) REP(j,dim2) &#123;</span><br><span class="line">    e = (e*prod + <span class="number">1</span>)%mod;</span><br><span class="line">    A(i*dim2 + j) = <span class="number">0.0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_matrix</span> <span class="params">(MatrixXd&amp; A, <span class="keyword">int</span> dim1 , <span class="keyword">int</span> dim2 )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line">  REP(i,dim1) &#123;</span><br><span class="line">    REP(j,dim2) <span class="built_in">printf</span>(<span class="string">"%lf "</span> , A(i,j) );</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( <span class="keyword">int</span> argc , <span class="keyword">char</span> *argv[] )</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> m , n , k , i , j , u , nrep = <span class="number">1</span> , cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">double</span> totaltime , error = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">before</span> , <span class="title">after</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( argc &lt;= <span class="number">1</span> || argc &gt;= <span class="number">6</span> ) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"./exe [nrep] &lt;dim1&gt; [dim2 dim3]"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( argc == <span class="number">2</span> ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">1</span>] , <span class="string">"%d"</span> , &amp;m );</span><br><span class="line">    n = k = m;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( argc == <span class="number">3</span> ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">1</span>] , <span class="string">"%d"</span> , &amp;nrep );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">2</span>] , <span class="string">"%d"</span> , &amp;m );</span><br><span class="line">    n = k = m;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( argc == <span class="number">4</span> ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">1</span>] , <span class="string">"%d"</span> , &amp;m );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">2</span>] , <span class="string">"%d"</span> , &amp;k );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">3</span>] , <span class="string">"%d"</span> , &amp;n );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( argc == <span class="number">5</span> ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">1</span>] , <span class="string">"%d"</span> , &amp;nrep );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">2</span>] , <span class="string">"%d"</span> , &amp;m );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">3</span>] , <span class="string">"%d"</span> , &amp;k );</span><br><span class="line">    <span class="built_in">sscanf</span> ( argv[<span class="number">4</span>] , <span class="string">"%d"</span> , &amp;n );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  MatrixX A(m,k) , B(k,n) , C(m,n);</span><br><span class="line"></span><br><span class="line">  init_matrix_X ( A , m , k );</span><br><span class="line">  init_matrix_X( B , k , n );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">"Matrices Initialized [%dx%d , %dx%d , %dx%d ]\n"</span> , m , k , k , n , m , n);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">"Running %d Iteration(s) \n"</span> , nrep );</span><br><span class="line"></span><br><span class="line">  totaltime = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  REP(i,nrep) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> runtime;</span><br><span class="line"></span><br><span class="line">    gettimeofday ( &amp;before , <span class="literal">NULL</span> );</span><br><span class="line">  </span><br><span class="line">    C.noalias() = A * B;</span><br><span class="line"></span><br><span class="line">    gettimeofday ( &amp;after , <span class="literal">NULL</span> );</span><br><span class="line"></span><br><span class="line">    runtime = ( after.tv_usec - before.tv_usec )/<span class="number">1000000.0</span>  + (after.tv_sec - before.tv_sec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( nrep == <span class="number">1</span> || i &gt; <span class="number">0</span> ) </span><br><span class="line">      totaltime += runtime , cnt++;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" [Iteration %d Time : %lf ]\n"</span> , i+<span class="number">1</span> , runtime );</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    REP(i,m) REP(j,n) &#123;</span></span><br><span class="line"><span class="comment">      double ans = 0;</span></span><br><span class="line"><span class="comment">      REP(u,k) ans += A[i*k+u]*B[u*n+j];</span></span><br><span class="line"><span class="comment">      error += (ans-C[i*n+j])*(ans-C[i*n+j]);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    printf(" [Error = %lf ]\n" , error );</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Average Time : %lf \n"</span> , totaltime/cnt );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><table><thead><tr><th>AVX16 单线程CPU</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>矩阵大小</td><td></td><td></td><td>Float16</td><td></td><td></td><td>Int16</td><td></td><td></td><td>Int8</td><td></td><td></td></tr><tr><td>M</td><td>N</td><td>K</td><td>MKLDNN</td><td>MKL</td><td>Eigen3</td><td>MKLDNN</td><td>MKL</td><td>Eigen3</td><td>MKLDNN</td><td>MKL</td><td>Eigen3</td></tr><tr><td>5</td><td>2048</td><td>1320</td><td>0.001295</td><td>0.001204</td><td>0.002072</td><td>\</td><td>0.001089</td><td>0.005318</td><td>0.038058</td><td>0.000793</td><td>0.006</td></tr><tr><td>5</td><td>512</td><td>2048</td><td>0.000763</td><td>0.000498</td><td>0.000786</td><td>\</td><td>0.000539</td><td>0.001926</td><td>0.017806</td><td>0.000354</td><td>0.002</td></tr><tr><td>5</td><td>2048</td><td>512</td><td>0.000679</td><td>0.000475</td><td>0.000801</td><td>\</td><td>0.000490</td><td>0.002057</td><td>0.017584</td><td>0.000317</td><td>0.002</td></tr><tr><td>5</td><td>2048</td><td>2048</td><td>0.002650</td><td>0.002028</td><td>0.003185</td><td>\</td><td>0.002116</td><td>0.007945</td><td>0.080426</td><td>0.001405</td><td>0.009</td></tr><tr><td>5</td><td>2457</td><td>2048</td><td>0.003639</td><td>0.002482</td><td>0.003942</td><td>\</td><td>0.002531</td><td>0.009683</td><td>0.096175</td><td>0.001714</td><td>0.011:</td></tr></tbody></table><p>OpenBLAS似乎是实现密集密集矩阵乘法的最佳库（至少是我测试过的机器的w.r.t）。随着核心数量的增加和矩阵的尺寸的增加，它可以很好地扩展。</p><p>对于多线程应用程序，</p><p>OpenBLAS&gt;MKL&gt;ATLAS&gt;&gt;EIGEN&gt;ACML</p><p>对于单线程应用，</p><p>OpenBLAS≈ACML&gt;MKL&gt;ATLAS&gt;&gt;EIGEN</p><p>也许下次我会把稀疏稠密矩阵乘法的一些比较，</p><p>源代码</p><p>我已经附上了源代码的程序和绘图脚本在这里以及在</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装必要的库&quot;&gt;&lt;a href=&quot;#安装必要的库&quot; class=&quot;headerlink&quot; title=&quot;安装必要的库&quot;&gt;&lt;/a&gt;安装必要的库&lt;/h3&gt;&lt;h4 id=&quot;Eigen3&quot;&gt;&lt;a href=&quot;#Eigen3&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
  </entry>
  
</feed>
